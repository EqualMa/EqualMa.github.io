<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Equal&#39;s</title>
  
  <subtitle>Coding Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://equalma.github.io/"/>
  <updated>2018-08-20T10:14:13.726Z</updated>
  <id>https://equalma.github.io/</id>
  
  <author>
    <name>Equal Ma</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>develop plugins for hexo</title>
    <link href="https://equalma.github.io/post/hexo/develop-plugin/"/>
    <id>https://equalma.github.io/post/hexo/develop-plugin/</id>
    <published>2018-08-19T18:16:00.000Z</published>
    <updated>2018-08-20T10:14:13.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Develop-plugins-for-hexo"><a href="#Develop-plugins-for-hexo" class="headerlink" title="Develop plugins for hexo"></a>Develop plugins for hexo</h1><blockquote><p><a href="https://github.com/hexojs/awesome-hexo#plugins" target="_blank" rel="noopener">https://github.com/hexojs/awesome-hexo#plugins</a></p></blockquote><h2 id="Creating-Plugins"><a href="#Creating-Plugins" class="headerlink" title="Creating Plugins"></a>Creating Plugins</h2><ul><li><a href="https://blog.gisonrg.me/2016/04/develop-hexo-github-card/" target="_blank" rel="noopener">Develop a plugin for Hexo - Github Card</a></li><li><a href="https://github.com/sebs/generator-hexo-plugin" target="_blank" rel="noopener">Yeoman based plugin generator</a></li></ul><h4 id="Yeoman-based-plugin-generator"><a href="#Yeoman-based-plugin-generator" class="headerlink" title="Yeoman based plugin generator"></a>Yeoman based plugin generator</h4><pre><code class="shell">npm install -g yonpm install -g generator-hexo-plugin</code></pre><p>Then generate your new project:</p><pre><code class="shell">yo hexo-plugin</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;Develop-plugins-for-hexo&quot;&gt;&lt;a href=&quot;#Develop-plugins-for-hexo&quot; class=&quot;headerlink&quot; title=&quot;Develop plugins for hexo&quot;&gt;&lt;/a&gt;Develop
        
      
    
    </summary>
    
      <category term="hexo" scheme="https://equalma.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>git submodule</title>
    <link href="https://equalma.github.io/post/git/submodule/"/>
    <id>https://equalma.github.io/post/git/submodule/</id>
    <published>2018-08-19T18:09:00.000Z</published>
    <updated>2018-08-20T10:14:13.726Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.cnblogs.com/lsgxeva/p/8540758.html" target="_blank" rel="noopener">https://www.cnblogs.com/lsgxeva/p/8540758.html</a></p><p><a href="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97" target="_blank" rel="noopener">https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97</a></p><p><a href="https://blog.csdn.net/xuanwolanxue/article/details/80609986" target="_blank" rel="noopener">https://blog.csdn.net/xuanwolanxue/article/details/80609986</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/lsgxeva/p/8540758.html&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="git" scheme="https://equalma.github.io/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo extensions</title>
    <link href="https://equalma.github.io/post/hexo/extend/"/>
    <id>https://equalma.github.io/post/hexo/extend/</id>
    <published>2018-08-08T17:00:34.000Z</published>
    <updated>2018-08-20T10:14:13.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Extensions"><a href="#Hexo-Extensions" class="headerlink" title="Hexo Extensions"></a>Hexo Extensions</h1><blockquote><p><a href="https://hexo.io/api/" target="_blank" rel="noopener">official docs</a></p></blockquote><h2 id="extend-filter"><a href="#extend-filter" class="headerlink" title="extend.filter"></a>extend.filter</h2><h3 id="Filter-List"><a href="#Filter-List" class="headerlink" title="Filter List"></a>Filter List</h3><ol><li><a href="https://hexo.io/api/filter#before-post-render" target="_blank" rel="noopener">before_post_render</a></li><li><a href="https://hexo.io/api/filter#after-post-render" target="_blank" rel="noopener">after_post_render</a></li><li><a href="https://hexo.io/api/filter#before-exit" target="_blank" rel="noopener">before_exit</a></li><li><a href="https://hexo.io/api/filter#before-generate" target="_blank" rel="noopener">before_generate</a></li><li><a href="https://hexo.io/api/filter#after-generate" target="_blank" rel="noopener">after_generate</a></li><li><a href="https://hexo.io/api/filter#template-locals" target="_blank" rel="noopener">template_locals</a></li><li><a href="https://hexo.io/api/filter#after-init" target="_blank" rel="noopener">after_init</a></li><li><a href="https://hexo.io/api/filter#new-post-path" target="_blank" rel="noopener">new_post_path</a></li><li><a href="https://hexo.io/api/filter#post-permalink" target="_blank" rel="noopener">post_permalink</a></li><li><a href="https://hexo.io/api/filter#after-render" target="_blank" rel="noopener">after_render</a></li><li><a href="https://hexo.io/api/filter#after-clean" target="_blank" rel="noopener">after_clean</a></li><li><a href="https://hexo.io/api/filter#server-middleware" target="_blank" rel="noopener">server_middleware</a></li></ol><h3 id="Orders-of-calling-filters-filter-执行的顺序"><a href="#Orders-of-calling-filters-filter-执行的顺序" class="headerlink" title="Orders of calling filters | filter 执行的顺序"></a>Orders of calling filters | filter 执行的顺序</h3><h4 id="Orders"><a href="#Orders" class="headerlink" title="Orders"></a>Orders</h4><p>after executing <code>hexo s</code> , filters are called in the following order:</p><blockquote><p>after_init</p><p>server_middleware</p><p>before_generate</p><p>post_permalink</p><p>template_locals</p><p>after_generate</p><p>before_exit</p><p>before_post_render</p><p>after_post_render</p></blockquote><h4 id="How-to-find-orders"><a href="#How-to-find-orders" class="headerlink" title="How to find orders:"></a>How to find orders:</h4><pre><code class="js">const register = (type, func) =&gt; {  hexo.extend.filter.register(type, func);};const logOnce = (() =&gt; {  const logged = {};  return str =&gt;    logged[str] === true || ((logged[str] = true) &amp;&amp; console.log(str));})();register(&quot;before_post_render&quot;, function(data) {  logOnce(&quot;before_post_render&quot;);  return data;});register(&quot;before_post_render&quot;, function(data) {  logOnce(&quot;before_post_render&quot;);});register(&quot;after_post_render&quot;, function(data) {  logOnce(&quot;after_post_render&quot;);});register(&quot;before_exit&quot;, function(data) {  logOnce(&quot;before_exit&quot;);});register(&quot;before_generate&quot;, function(data) {  logOnce(&quot;before_generate&quot;);});register(&quot;after_generate&quot;, function(data) {  logOnce(&quot;after_generate&quot;);});register(&quot;template_locals&quot;, function(data) {  logOnce(&quot;template_locals&quot;);});register(&quot;after_init&quot;, function(data) {  logOnce(&quot;after_init&quot;);});register(&quot;new_post_path&quot;, function(data) {  logOnce(&quot;new_post_path&quot;);});register(&quot;post_permalink&quot;, function(data) {  logOnce(&quot;post_permalink&quot;);});register(&quot;after_render&quot;, function(data) {  logOnce(&quot;after_render&quot;);});register(&quot;after_clean&quot;, function(data) {  logOnce(&quot;after_clean&quot;);});register(&quot;server_middleware&quot;, function(data) {  logOnce(&quot;server_middleware&quot;);});</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;Hexo-Extensions&quot;&gt;&lt;a href=&quot;#Hexo-Extensions&quot; class=&quot;headerlink&quot; title=&quot;Hexo Extensions&quot;&gt;&lt;/a&gt;Hexo Extensions&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="hexo" scheme="https://equalma.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>for循环中声明变量及该变量在异步调用的使用</title>
    <link href="https://equalma.github.io/post/js/var-in-for/"/>
    <id>https://equalma.github.io/post/js/var-in-for/</id>
    <published>2018-07-05T09:17:33.000Z</published>
    <updated>2018-08-20T10:14:13.742Z</updated>
    
    <content type="html"><![CDATA[<pre><code class="js">for (var i=1; i&lt;=3; i++) {    var obj = {name: &#39;obj&#39; + i};    console.log(`[${i}]: ${obj.name}`);}// output:[1]: obj1[2]: obj2[3]: obj3</code></pre><p>in async callback</p><pre><code class="js">for (var i=1; i&lt;=3; i++) {    var obj = {name: &#39;obj&#39; + i};    setTimeout(()=&gt;{        console.log(`[${i}]: ${obj.name}`);      }, 1000);}// output:[4]: obj3[4]: obj3[4]: obj3</code></pre><p>WHY</p><p>因为变量只声明了一次，因此每次操作相当于为同一个变量赋值（使变量指向新建的对象），从而在异步操作执行前，该变量被赋值多次，该变量</p><p>HOW TO FIX</p><p>在for中执行一个闭包，从而使每次循环中的obj都是一个新的变量，指向新建的对象。</p><pre><code class="js">for (var i=1; i&lt;=3; i++) {    (function() {        var obj = {name: &#39;obj&#39; + i};        setTimeout(()=&gt;{            console.log(`[${i}]: ${obj.name}`);          }, 1000);    })();}// output:[4]: obj3[4]: obj3[4]: obj3</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;pre&gt;&lt;code class=&quot;js&quot;&gt;for (var i=1; i&amp;lt;=3; i++) {
    var obj = {name: &amp;#39;obj&amp;#39; + i};

    console.log(`[${i}]: ${obj.name}`);
}

//
        
      
    
    </summary>
    
      <category term="js" scheme="https://equalma.github.io/categories/js/"/>
    
    
  </entry>
  
  <entry>
    <title>java 并发编程</title>
    <link href="https://equalma.github.io/post/java/concurrent/"/>
    <id>https://equalma.github.io/post/java/concurrent/</id>
    <published>2018-07-05T08:08:47.000Z</published>
    <updated>2018-08-20T10:14:13.726Z</updated>
    
    <content type="html"><![CDATA[<h2 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h2><blockquote><p><a href="https://www.cnblogs.com/richaaaard/p/6599184.html" target="_blank" rel="noopener">原文</a></p></blockquote><h3 id="CachedThreadPool"><a href="#CachedThreadPool" class="headerlink" title="CachedThreadPool"></a>CachedThreadPool</h3><blockquote><p>这个线程池在执行 <strong>大量短生命周期的异步任务时（many short-lived asynchronous task）</strong>，可以显著提高程序性能。调用 <strong>execute</strong> 时，可以重用之前已构造的可用线程，如果不存在可用线程，那么会重新创建一个新的线程并将其加入到线程池中。如果线程超过 60 秒还未被使用，就会被中止并从缓存中移除。因此，线程池在长时间空闲后不会消耗任何资源。 </p></blockquote><h3 id="FixedThreadPool"><a href="#FixedThreadPool" class="headerlink" title="FixedThreadPool"></a>FixedThreadPool</h3><blockquote><p>FixedThreadPool 是通过 java.util.concurrent.Executors 创建的 ThreadPoolExecutor 实例。这个实例会复用 <strong>固定数量的线程</strong> 处理一个 <strong>共享的无边界队列</strong> 。任何时间点，最多有 nThreads 个线程会处于活动状态执行任务。如果当所有线程都是活动时，有多的任务被提交过来，那么它会一致在队列中等待直到有线程可用。如果任何线程在执行过程中因为错误而中止，新的线程会替代它的位置来执行后续的任务。所有线程都会一致存于线程池中，直到显式的执行 ExecutorService.shutdown() 关闭。</p></blockquote><h3 id="SingleThreadPool"><a href="#SingleThreadPool" class="headerlink" title="SingleThreadPool"></a>SingleThreadPool</h3><blockquote><p>SingleThreadPool 是通过 java.util.concurrent.Executors 创建的 ThreadPoolExecutor 实例。这个实例只会使用单个工作线程来执行一个无边界的队列。（注意，如果单个线程在执行过程中因为某些错误中止，新的线程会替代它执行后续线程）。它可以保证认为是按顺序执行的，任何时候都不会有多于一个的任务处于活动状态。和 <strong>newFixedThreadPool(1)</strong> 的区别在于，如果线程遇到错误中止，它是无法使用替代线程的。</p></blockquote><h3 id="FixedThreadPool-与-CachedThreadPool-特性对比"><a href="#FixedThreadPool-与-CachedThreadPool-特性对比" class="headerlink" title="FixedThreadPool 与 CachedThreadPool 特性对比"></a>FixedThreadPool 与 CachedThreadPool 特性对比</h3><table><thead><tr><th>特性</th><th>FixedThreadPool</th><th>CachedThreadPool</th></tr></thead><tbody><tr><td>重用</td><td>FixedThreadPool 与 CacheThreadPool差不多，也是能 reuse 就用，但不能随时建新的线程</td><td>缓存型池子，先查看池中有没有以前建立的线程，如果有，就 reuse ；如果没有，就建一个新的线程加入池中</td></tr><tr><td>池大小</td><td>可指定 nThreads，固定数量</td><td>可增长，最大值 Integer.MAX_VALUE</td></tr><tr><td>队列大小</td><td>无限制</td><td>无限制</td></tr><tr><td>超时</td><td>无 IDLE</td><td>默认 60 秒 IDLE</td></tr><tr><td>使用场景</td><td>所以 FixedThreadPool 多数针对一些很稳定很固定的正规并发线程，多用于服务器</td><td>大量短生命周期的异步任务</td></tr><tr><td>结束</td><td>不会自动销毁</td><td>注意，放入 CachedThreadPool 的线程不必担心其结束，超过 TIMEOUT 不活动，其会自动被终止。</td></tr></tbody></table><h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><p>FixedThreadPool 和 CachedThreadPool 两者对高负载的应用都不是特别友好。</p><p>CachedThreadPool 要比 FixedThreadPool 危险很多。</p><p>如果应用要求高负载、低延迟，最好不要选择以上两种线程池：</p><ol><li>任务队列的无边界：会导致内存溢出以及高延迟</li><li>长时间运行会导致 <code>CachedThreadPool</code> 在线程创建上失控</li></ol><p>因为两者都不是特别友好，所以推荐使用 <code>ThreadPoolExecutor</code> ，它提供了很多参数可以进行细粒度的控制。</p><ol><li><p>将任务队列设置成有边界的队列</p></li><li><p>使用合适的 <code>RejectionHandler</code> - 自定义的 <code>RejectionHandler</code> 或 JDK 提供的默认 handler 。</p></li><li><p>如果在任务完成前后需要执行某些操作，可以重载</p><pre><code>beforeExecute(Thread, Runnable)afterExecute(Runnable, Throwable)</code></pre></li><li><p>重载 ThreadFactory ，如果有线程定制化的需求</p></li><li><p>在运行时动态控制线程池的大小（<a href="http://stackoverflow.com/questions/32527078/dynamic-thread-pool/32527532#32527532" target="_blank" rel="noopener">Dynamic Thread Pool</a>）</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;线程池&quot;&gt;&lt;a href=&quot;#线程池&quot; class=&quot;headerlink&quot; title=&quot;线程池&quot;&gt;&lt;/a&gt;线程池&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="java" scheme="https://equalma.github.io/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>start using lavas</title>
    <link href="https://equalma.github.io/post/web/lavas/init/"/>
    <id>https://equalma.github.io/post/web/lavas/init/</id>
    <published>2018-06-29T01:15:17.000Z</published>
    <updated>2018-08-20T10:14:13.774Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Initialize-Dev-Env"><a href="#Initialize-Dev-Env" class="headerlink" title="Initialize Dev Env"></a>Initialize Dev Env</h2><pre><code class="shell">lavas init# choose App-Shell# enter project name, ...cd project-folder</code></pre><pre><code class="shell">npm install --save-dev eslint eslint-loader babel-eslint eslint-plugin-vuenpm install prettier-eslint --save-dev</code></pre><p>.vscode/settings.json</p><pre><code class="json">{    &quot;prettier.eslintIntegration&quot;: true}</code></pre><p>.eslintrc.json</p><pre><code class="json">{    &quot;env&quot;: {        &quot;browser&quot;: true,        &quot;es6&quot;: true    },    &quot;parser&quot;: &quot;babel-eslint&quot;,    &quot;extends&quot;: &quot;eslint:recommended&quot;,    &quot;parserOptions&quot;: {        &quot;sourceType&quot;: &quot;module&quot;,        &quot;ecmaVersion&quot;: 2017    },    &quot;rules&quot;: {        &quot;indent&quot;: [&quot;error&quot;, 4],        &quot;linebreak-style&quot;: [&quot;error&quot;, &quot;unix&quot;],        &quot;quotes&quot;: [&quot;error&quot;, &quot;single&quot;],        &quot;semi&quot;: [&quot;error&quot;, &quot;always&quot;],        &quot;no-trailing-spaces&quot;: &quot;error&quot;    }}</code></pre><p>Or create your own config using <code>eslint init</code></p><blockquote><p><a href="https://lavas.baidu.com/codelab/eslint/" target="_blank" rel="noopener">lavas &gt; eslint</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;Initialize-Dev-Env&quot;&gt;&lt;a href=&quot;#Initialize-Dev-Env&quot; class=&quot;headerlink&quot; title=&quot;Initialize Dev Env&quot;&gt;&lt;/a&gt;Initialize Dev
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>strict mode in JS5</title>
    <link href="https://equalma.github.io/post/js/use-strict/"/>
    <id>https://equalma.github.io/post/js/use-strict/</id>
    <published>2018-06-25T11:37:54.000Z</published>
    <updated>2018-06-26T02:43:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Strict-Mode-vs-Sloppy-Mode"><a href="#Strict-Mode-vs-Sloppy-Mode" class="headerlink" title="Strict Mode vs Sloppy Mode"></a>Strict Mode vs Sloppy Mode</h1><ol><li>意外创建全局变量被抛出错误替代（全局变量必须声明后才能赋值）</li></ol><pre><code class="js">someUndeclaredGlobalVar=1/* no error */</code></pre><pre><code class="js">&#39;use strict&#39;;someUndeclaredGlobalVar=1/*------------ReferenceError: someUndeclaredGlobalVar is not defined    at eval:2:25    at eval    at new Promise------------*/</code></pre><ol start="2"><li>给不可写属性赋值, 给只读属性(getter-only)赋值赋值, 给不可扩展对象(<a href="https://developer.mozilla.org/zh-CN/JavaScript/Reference/Global_Objects/Object/preventExtensions" target="_blank" rel="noopener">non-extensible</a> object)的新属性赋值时，严格模式会报错，而正常模式会静默失败(silently fail, 即赋值失败，但是不报错)</li></ol><pre><code class="js">&#39;use strict&#39;;NaN=1/*TypeError: Cannot assign to read only property &#39;NaN&#39; of object &#39;#&lt;Window&gt;&#39;    at eval:2:5    at eval    at new Promise*/</code></pre><ol start="3"><li>在严格模式下, 试图删除不可删除的属性时会抛出异常(正常模式下，这种操作不会产生任何效果)</li></ol><pre><code class="js">&quot;use strict&quot;;delete Object.prototype; // 抛出TypeError错误</code></pre><ol start="4"><li>在严格模式下，重名属性被认为是语法错误。(这个问题在ECMAScript6中已经不复存在)</li><li>严格模式要求函数的参数名唯一. 在正常模式下, 最后一个重名参数名会掩盖之前的重名参数. 之前的参数仍然可以通过 <code>arguments[i] 来访问</code>, 还不是完全无法访问. </li></ol><pre><code class="js">严格模式要求函数的参数名唯一. 在正常模式下, 最后一个重名参数名会掩盖之前的重名参数. 之前的参数仍然可以通过 arguments[i] 来访问, 还不是完全无法访问. </code></pre><ol start="6"><li><p>严格模式禁止八进制数字语法</p><blockquote><p>以零(0)开头的八进制语法: <code>0644 === 420</code> 以及  <code>&quot;\045&quot; === &quot;%&quot;</code></p><p>在ECMAScript 6中支持为一个数字加”<code>0</code>o”的前缀来表示八进制数.</p></blockquote></li><li><p>ECMAScript 6中的严格模式禁止设置<a href="https://developer.mozilla.org/en-US/docs/Glossary/primitive" target="_blank" rel="noopener">primitive</a>值的属性.不采用严格模式,设置属性将会简单忽略(no-op),采用严格模式,将抛出<code>TypeError</code>错误</p></li></ol><pre><code>(function() {&quot;use strict&quot;;false.true = &quot;&quot;;              //TypeError(14).sailing = &quot;home&quot;;        //TypeError&quot;with&quot;.you = &quot;far away&quot;;      //TypeError})();</code></pre><ol start="8"><li>严格模式禁用 <code>with</code>.</li><li><a href="http://whereswalden.com/2011/01/10/new-es5-strict-mode-support-new-vars-created-by-strict-mode-eval-code-are-local-to-that-code-only/" target="_blank" rel="noopener">严格模式下的 eval 不再为上层范围(surrounding scope,注:包围eval代码块的范围)引入新变量</a></li><li>严格模式禁止删除声明变量。<code>delete name</code> 在严格模式下会引起语法错误。</li></ol><h3 id="让eval和-arguments-变的简单"><a href="#让eval和-arguments-变的简单" class="headerlink" title="让eval和`arguments`变的简单"></a>让<code>eval和`</code>arguments`变的简单</h3><ol><li>名称 <code>eval</code> 和 <code>arguments</code> 不能通过程序语法被绑定(be bound)或赋值.</li><li>严格模式下，参数的值不会随 arguments 对象的值的改变而变化。</li><li>不再支持 <code>arguments.callee</code>在严格模式下，<code>arguments.callee</code> 是一个不可删除属性，而且赋值和读取时都会抛出异常。</li></ol><h3 id="“安全的”-JavaScript"><a href="#“安全的”-JavaScript" class="headerlink" title="“安全的” JavaScript"></a>“安全的” JavaScript</h3><ol><li>在严格模式下通过<code>this</code>传递给一个函数的值不会被强制转换为一个对象。</li><li>在严格模式中再也不能通过广泛实现的ECMAScript扩展“游走于”JavaScript的栈中。当一个叫<code>fun</code>的函数正在被调用的时候，<code>fun.caller</code>是最后一个调用<code>fun</code>的函数，而且<code>fun.arguments</code>包含调用<code>fun</code>时用的形参。如果<code>fun</code>在严格模式下，那么<code>fun.caller</code>和<code>fun.arguments</code>都是不可删除的属性而且在存值、取值时都会报错。</li><li>严格模式下的<code>arguments</code>不会再提供访问与调用这个函数相关的变量的途径。<code>arguments.caller</code>在严格模式下同样是一个不可被删除的属性，在赋值或者取值时会报错。</li></ol><h3 id="为未来的ECMAScript版本铺平道路"><a href="#为未来的ECMAScript版本铺平道路" class="headerlink" title="为未来的ECMAScript版本铺平道路"></a>为未来的ECMAScript版本铺平道路</h3><ol><li><p>在严格模式中一部分字符变成了保留的关键字。这些字符包括<code>implements</code>, <code>interface</code>, <code>let</code>, <code>package</code>, <code>private</code>, <code>protected</code>, <code>public</code>, <code>static</code>和<code>yield</code>。在严格模式下，你不能再用这些名字作为变量名或者形参名。</p></li><li><p><a href="http://whereswalden.com/2011/01/24/new-es5-strict-mode-requirement-function-statements-not-at-top-level-of-a-program-or-function-are-prohibited/" target="_blank" rel="noopener">严格模式禁止了不在脚本或者函数层面上的函数声明</a>。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;Strict-Mode-vs-Sloppy-Mode&quot;&gt;&lt;a href=&quot;#Strict-Mode-vs-Sloppy-Mode&quot; class=&quot;headerlink&quot; title=&quot;Strict Mode vs Sloppy Mode&quot;&gt;&lt;/a&gt;Strict
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Apache2 &gt; Virtual Host SSL Configuration</title>
    <link href="https://equalma.github.io/post/apache2/https/"/>
    <id>https://equalma.github.io/post/apache2/https/</id>
    <published>2018-04-14T07:00:53.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>In *.conf</p><pre><code class="properties">&lt;VirtualHost *:80&gt;   ServerName www.example.com   Redirect / https://secure.example.com/&lt;/VirtualHost&gt;&lt;VirtualHost _default_:443&gt;   ServerName secure.example.com   DocumentRoot /usr/local/apache2/htdocs   SSLEngine On&lt;/VirtualHost&gt;</code></pre><p><a href="https://wiki.apache.org/httpd/RedirectSSL" target="_blank" rel="noopener">https://wiki.apache.org/httpd/RedirectSSL</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;In *.conf&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;properties&quot;&gt;&amp;lt;VirtualHost *:80&amp;gt;
   ServerName www.example.com
   Redirect /
        
      
    
    </summary>
    
      <category term="apache2" scheme="https://equalma.github.io/categories/apache2/"/>
    
    
  </entry>
  
  <entry>
    <title>utf8 in mysql</title>
    <link href="https://equalma.github.io/post/mysql/utf8/"/>
    <id>https://equalma.github.io/post/mysql/utf8/</id>
    <published>2018-04-13T07:22:56.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://seanlook.com/2016/10/23/mysql-utf8mb4/" target="_blank" rel="noopener">http://seanlook.com/2016/10/23/mysql-utf8mb4/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;a href=&quot;http://seanlook.com/2016/10/23/mysql-utf8mb4/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="mysql" scheme="https://equalma.github.io/categories/mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>coding python with vscode</title>
    <link href="https://equalma.github.io/post/python/vscode/"/>
    <id>https://equalma.github.io/post/python/vscode/</id>
    <published>2018-04-12T10:35:56.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://code.visualstudio.com/docs/languages/python" target="_blank" rel="noopener">official docs</a></p><p><a href="https://code.visualstudio.com/docs/python/debugging#_remote-debugging" target="_blank" rel="noopener">remote debugging</a></p><pre><code class="shell"># on both development and remote computerspip install ptvsd==3.0.0</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/docs/languages/python&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;official docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="python" scheme="https://equalma.github.io/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>JS语法糖</title>
    <link href="https://equalma.github.io/post/js/candies/"/>
    <id>https://equalma.github.io/post/js/candies/</id>
    <published>2018-03-28T01:33:09.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js语法糖"><a href="#js语法糖" class="headerlink" title="js语法糖"></a>js语法糖</h1><h4 id="复制对象"><a href="#复制对象" class="headerlink" title="复制对象"></a>复制对象</h4><ol><li>方法一： <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign" target="_blank" rel="noopener"><code>Object.assign()</code></a></li><li>方法二：<a href="http://www.redux.org.cn/docs/recipes/UsingObjectSpreadOperator.html" target="_blank" rel="noopener">ES7提案 &gt; 对象展开运算符</a></li></ol><blockquote><p><code>Object.assign()</code> 是 ES6 特性，但多数浏览器并不支持。要么使用 polyfill，<a href="https://github.com/babel-plugins/babel-plugin-object-assign" target="_blank" rel="noopener">Babel 插件</a>，或者使用其它库如 <a href="https://lodash.com/docs#assign" target="_blank" rel="noopener"><code>_.assign()</code></a> 提供的帮助方法。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;js语法糖&quot;&gt;&lt;a href=&quot;#js语法糖&quot; class=&quot;headerlink&quot; title=&quot;js语法糖&quot;&gt;&lt;/a&gt;js语法糖&lt;/h1&gt;&lt;h4 id=&quot;复制对象&quot;&gt;&lt;a href=&quot;#复制对象&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="js" scheme="https://equalma.github.io/categories/js/"/>
    
    
  </entry>
  
  <entry>
    <title>redux</title>
    <link href="https://equalma.github.io/post/js/redux/"/>
    <id>https://equalma.github.io/post/js/redux/</id>
    <published>2018-03-27T04:09:35.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html" target="_blank" rel="noopener">理解Redux</a></p><p><a href="https://segmentfault.com/a/1190000007248878" target="_blank" rel="noopener">异步</a></p><p><a href="https://segmentfault.com/a/1190000011866886" target="_blank" rel="noopener">redux-promise-middleware实践</a></p><p><a href="https://github.com/pburtchaell/redux-promise-middleware" target="_blank" rel="noopener">redux-promise-middleware</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="js" scheme="https://equalma.github.io/categories/js/"/>
    
    
  </entry>
  
  <entry>
    <title>stylus &gt; Basic Syntax</title>
    <link href="https://equalma.github.io/post/css/stylus/basic-syntax/"/>
    <id>https://equalma.github.io/post/css/stylus/basic-syntax/</id>
    <published>2018-03-21T00:46:33.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Parent-reference"><a href="#Parent-reference" class="headerlink" title="Parent reference"></a>Parent reference</h2><pre><code class="stylus">ul  li a    display: block    color: blue    padding: 5px    html.ie &amp;      padding: 6px    &amp;:hover      color: red</code></pre><pre><code class="css">ul li a {  display: block;  color: #00f;  padding: 5px;}html.ie ul li a {  padding: 6px;}ul li a:hover {  color: #f00;}</code></pre><h2 id="Mixins"><a href="#Mixins" class="headerlink" title="Mixins"></a>Mixins</h2><pre><code class="stylus">border-radius(val)  -webkit-border-radius: val  -moz-border-radius: val  border-radius: valbutton {  border-radius(5px);}</code></pre><pre><code class="css">button {  -webkit-border-radius: 5px;  -moz-border-radius: 5px;  border-radius: 5px;}</code></pre><h3 id="Transparent-mixins"><a href="#Transparent-mixins" class="headerlink" title="Transparent mixins"></a>Transparent mixins</h3><pre><code class="stylus">border-radius()  -webkit-border-radius: arguments  -moz-border-radius: arguments  border-radius: argumentsbutton {  border-radius: 5px 10px;}</code></pre><pre><code class="css">button {  -webkit-border-radius: 5px 10px;  -moz-border-radius: 5px 10px;  border-radius: 5px 10px;}</code></pre><h2 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h2><pre><code class="stylus">#prompt  position: absolute  top: 150px  left: 50%  width: w = 200px  margin-left: -(w / 2)</code></pre><pre><code class="css">#prompt {  position: absolute;  top: 150px;  left: 50%;  width: 200px;  margin-left: -100px;}</code></pre><h2 id="Block-property-access"><a href="#Block-property-access" class="headerlink" title="Block property access"></a>Block property access</h2><pre><code class="stylus">#prompt  position: absolute  top: 150px  left: 50%  width: 200px  margin-left: -(@width / 2)</code></pre><pre><code class="css">#prompt {  position: absolute;  top: 150px;  left: 50%;  width: 200px;  margin-left: -100px;}</code></pre><h2 id="Iteration"><a href="#Iteration" class="headerlink" title="Iteration"></a>Iteration</h2><pre><code class="stylus">table  for row in 1 2 3 4 5    tr:nth-child({row})      height: 10px * row</code></pre><pre><code class="css">table tr:nth-child(1) {  height: 10px;}table tr:nth-child(2) {  height: 20px;}table tr:nth-child(3) {  height: 30px;}table tr:nth-child(4) {  height: 40px;}table tr:nth-child(5) {  height: 50px;}</code></pre><h2 id="Interpolation"><a href="#Interpolation" class="headerlink" title="Interpolation"></a>Interpolation</h2><pre><code class="stylus">vendors = webkit moz o ms officialborder-radius()  for vendor in vendors    if vendor == official      border-radius: arguments    else      -{vendor}-border-radius: arguments#content  border-radius: 5px</code></pre><pre><code class="css">#content {  -webkit-border-radius: 5px;  -moz-border-radius: 5px;  -o-border-radius: 5px;  -ms-border-radius: 5px;  border-radius: 5px;}</code></pre><h2 id="Operators"><a href="#Operators" class="headerlink" title="Operators"></a>Operators</h2><pre><code class="stylus">body  foo: 5px + 10  foo: 2 ** 8  foo: 5px * 2  foo: !!&#39;&#39;  foo: foo and bar and baz  foo: foo or bar or baz  foo: 1..5  foo: 1...5  foo: &#39;foo&#39; is a &#39;string&#39;  foo: (1 2 3) == (1 2 3)  foo: (1 2 3) == (1 2)  foo: ((one 1) (two 2)) == ((one 1) (two 2))   foo: ((one 1) (two 2)) == ((one 1) (two))   foo: ((one 1) (two 2))[0]  foo: 3 in (1 2 3 4)</code></pre><pre><code class="css">body {  foo: 15px;  foo: 256;  foo: 10px;  foo: false;  foo: baz;  foo: foo;  foo: 1 2 3 4 5;  foo: 1 2 3 4;  foo: true;  foo: true;  foo: false;  foo: true;  foo: false;  foo: one 1;  foo: true;}</code></pre><h3 id="Type-coercion"><a href="#Type-coercion" class="headerlink" title="Type coercion"></a>Type coercion</h3><pre><code class="stylus">body  foo: foo + bar  foo: &#39;foo &#39; + bar  foo: &#39;foo &#39; + &#39;bar&#39;  foo: &#39;foo &#39; + 5px  foo: 2s - 500ms  foo: 5000ms == 5s  foo: 50deg</code></pre><pre><code class="css">body {  foo: foobar;  foo: &#39;foo bar&#39;;  foo: &#39;foo bar&#39;;  foo: &#39;foo 5px&#39;;  foo: 1.5s;  foo: true;  foo: 50deg;}</code></pre><h3 id="The-sprintf-operator"><a href="#The-sprintf-operator" class="headerlink" title="The sprintf operator"></a>The sprintf operator</h3><pre><code class="stylus">body  foo: &#39;%s / %s&#39; % (5px 10px)  foo: &#39;MS:WeirdStuff(opacity=%s)&#39; % 1  foo: unquote(&#39;MS:WeirdStuff(opacity=1)&#39;)</code></pre><pre><code class="css">body {  foo: 5px / 10px;  foo: MS:WeirdStuff(opacity=1);  foo: MS:WeirdStuff(opacity=1);}</code></pre><h3 id="Color-operations"><a href="#Color-operations" class="headerlink" title="Color operations"></a>Color operations</h3><pre><code class="stylus">body  foo: white - 50%  foo: black + 50%  foo: #eee - #f00  foo: #eee - rgba(black,.5)  foo: #cc0000 + 30deg</code></pre><pre><code class="css">body {  foo: #808080;  foo: #808080;  foo: #0ee;  foo: rgba(238,238,238,0.5);  foo: #c60;}</code></pre><h2 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h2><pre><code class="stylus">sum(nums...)  n = 0  n += num for num in numsbody  foo: sum(1, 2, 3)</code></pre><pre><code class="css">body {  foo: 6;}</code></pre><h3 id="Keyword-arguments"><a href="#Keyword-arguments" class="headerlink" title="Keyword arguments"></a>Keyword arguments</h3><pre><code class="stylus">fade-out(color, amount = 50%)  color - rgba(0,0,0,amount)body  foo: fade-out(#eee)  foo: fade-out(#eee, 20%)  foo: fade-out(#eee, amount: 50%)  foo: fade-out(color: #eee, amount: 50%)  foo: fade-out(amount: 50%, #eee)  foo: fade-out(amount: 50%, color: #eee)</code></pre><pre><code class="css">body {  foo: rgba(238,238,238,0.5);  foo: rgba(238,238,238,0.8);  foo: rgba(238,238,238,0.5);  foo: rgba(238,238,238,0.5);  foo: rgba(238,238,238,0.5);  foo: rgba(238,238,238,0.5);}</code></pre><h3 id="Built-in-functions"><a href="#Built-in-functions" class="headerlink" title="Built-in functions"></a>Built-in functions</h3><pre><code>body  foo: red(#fc0)  foo: green(#fc0)  foo: blue(#fc0)  foo: alpha(#fff)  foo: alpha(rgba(#fff, .5))</code></pre><pre><code class="css">body {  foo: 255;  foo: 204;  foo: 0;  foo: 1;  foo: 0.5;}</code></pre><h3 id="Color-BIFs"><a href="#Color-BIFs" class="headerlink" title="Color BIFs"></a>Color BIFs</h3><pre><code class="stylus">body  foo: light(#eee)  foo: dark(#eee)  foo: dark(#333)  foo: darken(#eee, 50%)  foo: lighten(black, 50%)  foo: #eee - 50%  foo: black + 50%</code></pre><pre><code class="css">body {  foo: true;  foo: false;  foo: true;  foo: #777;  foo: #808080;  foo: #777;  foo: #808080;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;Parent-reference&quot;&gt;&lt;a href=&quot;#Parent-reference&quot; class=&quot;headerlink&quot; title=&quot;Parent reference&quot;&gt;&lt;/a&gt;Parent reference&lt;/h2&gt;&lt;pre&gt;&lt;code
        
      
    
    </summary>
    
      <category term="css" scheme="https://equalma.github.io/categories/css/"/>
    
      <category term="stylus" scheme="https://equalma.github.io/categories/css/stylus/"/>
    
    
  </entry>
  
  <entry>
    <title>Set up PowerShell Environment</title>
    <link href="https://equalma.github.io/post/powershell/env/"/>
    <id>https://equalma.github.io/post/powershell/env/</id>
    <published>2018-03-10T03:00:59.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.gngrninja.com/powershell-getting-started-series" target="_blank" rel="noopener">Getting Started</a></p></blockquote><pre><code class="powershell">Set-ExecutionPolicy RemoteSigned -Scope CurrentUser</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gngrninja.com/powershell-getting-started-series&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Getting
        
      
    
    </summary>
    
      <category term="powershell" scheme="https://equalma.github.io/categories/powershell/"/>
    
    
  </entry>
  
  <entry>
    <title>for each window</title>
    <link href="https://equalma.github.io/post/js/for-each-window/"/>
    <id>https://equalma.github.io/post/js/for-each-window/</id>
    <published>2018-03-09T06:06:31.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code class="js">            /**             * @callback winCallback             * @param {Window} win             */            /**             * 对于一个给定的window, 对其所有父window和子window执行callback_win回调             * @param {Window} win             * @param {winCallback} callback_win             */            function forEachWin(win, callback_win) {                callback_win = typeof callback_win === &quot;function&quot; ?                    callback_win :                    (function () {                    });                function forEachChildWin(parentWin, callback_win) {                    callback_win(parentWin);                    $(&quot;iframe&quot;, parentWin.document).each(function () {                        forEachChildWin(this.contentWindow, callback_win);                    });                }                while (win.parent !== win) {                    win = win.parent;                }                forEachChildWin(win, callback_win);            }</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;pre&gt;&lt;code class=&quot;js&quot;&gt;            /**
             * @callback winCallback
             * @param {Window} win
             */

           
        
      
    
    </summary>
    
      <category term="js" scheme="https://equalma.github.io/categories/js/"/>
    
    
  </entry>
  
  <entry>
    <title>string literal types</title>
    <link href="https://equalma.github.io/post/typescript/string-literal-types/"/>
    <id>https://equalma.github.io/post/typescript/string-literal-types/</id>
    <published>2018-03-08T07:27:11.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.typescriptlang.org/docs/handbook/advanced-types.html#string-literal-types" target="_blank" rel="noopener">https://www.typescriptlang.org/docs/handbook/advanced-types.html#string-literal-types</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html#string-literal-types&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="typescript" scheme="https://equalma.github.io/categories/typescript/"/>
    
    
  </entry>
  
  <entry>
    <title>useful tips for jQuery</title>
    <link href="https://equalma.github.io/post/js/jquery/useful/"/>
    <id>https://equalma.github.io/post/js/jquery/useful/</id>
    <published>2018-03-07T09:01:05.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>move child under another parent</p><pre><code class="js">$(&quot;#child&quot;).detach().appendTo(&quot;parent&quot;);</code></pre><p>parse HTML to HTMLElement</p><pre><code class="js">jQuery.parseHTML( data [, context ] [, keepScripts ] )</code></pre><p>insert after (as sibling)</p><pre><code class="js">.after()</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;move child under another parent&lt;/p&gt;
&lt;pre&gt;&lt;code
        
      
    
    </summary>
    
      <category term="js" scheme="https://equalma.github.io/categories/js/"/>
    
      <category term="jquery" scheme="https://equalma.github.io/categories/js/jquery/"/>
    
    
  </entry>
  
  <entry>
    <title>Using TypeScript in Node.js</title>
    <link href="https://equalma.github.io/post/Node-js/using-typescript/"/>
    <id>https://equalma.github.io/post/Node-js/using-typescript/</id>
    <published>2018-02-28T12:07:12.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://segmentfault.com/a/1190000007574276" target="_blank" rel="noopener">https://segmentfault.com/a/1190000007574276</a></p><h2 id="Publishing-to-npm"><a href="#Publishing-to-npm" class="headerlink" title="Publishing to npm"></a>Publishing to npm</h2><p><a href="http://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html" target="_blank" rel="noopener">http://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html</a></p><p>in tsconfig.json:</p><pre><code class="json">{    &quot;compilerOptions&quot;: {        &quot;declaration&quot;: true,    },}</code></pre><p>in package.json:</p><pre><code class="json">{    &quot;name&quot;: &quot;awesome&quot;,    &quot;author&quot;: &quot;Vandelay Industries&quot;,    &quot;version&quot;: &quot;1.0.0&quot;,    &quot;main&quot;: &quot;./lib/main.js&quot;,    &quot;types&quot;: &quot;./lib/main.d.ts&quot;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000007574276&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="Node.js" scheme="https://equalma.github.io/categories/Node-js/"/>
    
    
  </entry>
  
  <entry>
    <title>PWA(Progressive Web App)</title>
    <link href="https://equalma.github.io/post/web/progressive-web-apps/"/>
    <id>https://equalma.github.io/post/web/progressive-web-apps/</id>
    <published>2018-02-28T02:13:53.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://developers.google.com/web/progressive-web-apps/" target="_blank" rel="noopener">official site</a></p><p><a href="https://developer.mozilla.org/zh-CN/Apps/Progressive" target="_blank" rel="noopener">documentation</a></p><p><a href="https://segmentfault.com/a/1190000005641692" target="_blank" rel="noopener">quick guide</a></p><p><a href="https://lavas.baidu.com/" target="_blank" rel="noopener">lavas</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;official site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a
        
      
    
    </summary>
    
      <category term="web" scheme="https://equalma.github.io/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>Web &gt; Responsive Layout</title>
    <link href="https://equalma.github.io/post/css/responsive-layout/"/>
    <id>https://equalma.github.io/post/css/responsive-layout/</id>
    <published>2018-02-23T03:25:10.000Z</published>
    <updated>2018-06-19T15:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>Using <meta> tag</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Using &lt;meta&gt; tag&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="css" scheme="https://equalma.github.io/categories/css/"/>
    
    
  </entry>
  
</feed>
