<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>develop plugins for hexo</title>
      <link href="/post/hexo/develop-plugin/"/>
      <url>/post/hexo/develop-plugin/</url>
      <content type="html"><![CDATA[<h1 id="Develop-plugins-for-hexo"><a href="#Develop-plugins-for-hexo" class="headerlink" title="Develop plugins for hexo"></a>Develop plugins for hexo</h1><blockquote><p><a href="https://github.com/hexojs/awesome-hexo#plugins" target="_blank" rel="noopener">https://github.com/hexojs/awesome-hexo#plugins</a></p></blockquote><h2 id="Creating-Plugins"><a href="#Creating-Plugins" class="headerlink" title="Creating Plugins"></a>Creating Plugins</h2><ul><li><a href="https://blog.gisonrg.me/2016/04/develop-hexo-github-card/" target="_blank" rel="noopener">Develop a plugin for Hexo - Github Card</a></li><li><a href="https://github.com/sebs/generator-hexo-plugin" target="_blank" rel="noopener">Yeoman based plugin generator</a></li></ul><h4 id="Yeoman-based-plugin-generator"><a href="#Yeoman-based-plugin-generator" class="headerlink" title="Yeoman based plugin generator"></a>Yeoman based plugin generator</h4><pre><code class="shell">npm install -g yonpm install -g generator-hexo-plugin</code></pre><p>Then generate your new project:</p><pre><code class="shell">yo hexo-plugin</code></pre>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>git submodule</title>
      <link href="/post/git/submodule/"/>
      <url>/post/git/submodule/</url>
      <content type="html"><![CDATA[<blockquote><p><a href="https://www.cnblogs.com/lsgxeva/p/8540758.html" target="_blank" rel="noopener">https://www.cnblogs.com/lsgxeva/p/8540758.html</a></p><p><a href="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97" target="_blank" rel="noopener">https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97</a></p><p><a href="https://blog.csdn.net/xuanwolanxue/article/details/80609986" target="_blank" rel="noopener">https://blog.csdn.net/xuanwolanxue/article/details/80609986</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>hexo extensions</title>
      <link href="/post/hexo/extend/"/>
      <url>/post/hexo/extend/</url>
      <content type="html"><![CDATA[<h1 id="Hexo-Extensions"><a href="#Hexo-Extensions" class="headerlink" title="Hexo Extensions"></a>Hexo Extensions</h1><blockquote><p><a href="https://hexo.io/api/" target="_blank" rel="noopener">official docs</a></p></blockquote><h2 id="extend-filter"><a href="#extend-filter" class="headerlink" title="extend.filter"></a>extend.filter</h2><h3 id="Filter-List"><a href="#Filter-List" class="headerlink" title="Filter List"></a>Filter List</h3><ol><li><a href="https://hexo.io/api/filter#before-post-render" target="_blank" rel="noopener">before_post_render</a></li><li><a href="https://hexo.io/api/filter#after-post-render" target="_blank" rel="noopener">after_post_render</a></li><li><a href="https://hexo.io/api/filter#before-exit" target="_blank" rel="noopener">before_exit</a></li><li><a href="https://hexo.io/api/filter#before-generate" target="_blank" rel="noopener">before_generate</a></li><li><a href="https://hexo.io/api/filter#after-generate" target="_blank" rel="noopener">after_generate</a></li><li><a href="https://hexo.io/api/filter#template-locals" target="_blank" rel="noopener">template_locals</a></li><li><a href="https://hexo.io/api/filter#after-init" target="_blank" rel="noopener">after_init</a></li><li><a href="https://hexo.io/api/filter#new-post-path" target="_blank" rel="noopener">new_post_path</a></li><li><a href="https://hexo.io/api/filter#post-permalink" target="_blank" rel="noopener">post_permalink</a></li><li><a href="https://hexo.io/api/filter#after-render" target="_blank" rel="noopener">after_render</a></li><li><a href="https://hexo.io/api/filter#after-clean" target="_blank" rel="noopener">after_clean</a></li><li><a href="https://hexo.io/api/filter#server-middleware" target="_blank" rel="noopener">server_middleware</a></li></ol><h3 id="Orders-of-calling-filters-filter-执行的顺序"><a href="#Orders-of-calling-filters-filter-执行的顺序" class="headerlink" title="Orders of calling filters | filter 执行的顺序"></a>Orders of calling filters | filter 执行的顺序</h3><h4 id="Orders"><a href="#Orders" class="headerlink" title="Orders"></a>Orders</h4><p>after executing <code>hexo s</code> , filters are called in the following order:</p><blockquote><p>after_init</p><p>server_middleware</p><p>before_generate</p><p>post_permalink</p><p>template_locals</p><p>after_generate</p><p>before_exit</p><p>before_post_render</p><p>after_post_render</p></blockquote><h4 id="How-to-find-orders"><a href="#How-to-find-orders" class="headerlink" title="How to find orders:"></a>How to find orders:</h4><pre><code class="js">const register = (type, func) =&gt; {  hexo.extend.filter.register(type, func);};const logOnce = (() =&gt; {  const logged = {};  return str =&gt;    logged[str] === true || ((logged[str] = true) &amp;&amp; console.log(str));})();register(&quot;before_post_render&quot;, function(data) {  logOnce(&quot;before_post_render&quot;);  return data;});register(&quot;before_post_render&quot;, function(data) {  logOnce(&quot;before_post_render&quot;);});register(&quot;after_post_render&quot;, function(data) {  logOnce(&quot;after_post_render&quot;);});register(&quot;before_exit&quot;, function(data) {  logOnce(&quot;before_exit&quot;);});register(&quot;before_generate&quot;, function(data) {  logOnce(&quot;before_generate&quot;);});register(&quot;after_generate&quot;, function(data) {  logOnce(&quot;after_generate&quot;);});register(&quot;template_locals&quot;, function(data) {  logOnce(&quot;template_locals&quot;);});register(&quot;after_init&quot;, function(data) {  logOnce(&quot;after_init&quot;);});register(&quot;new_post_path&quot;, function(data) {  logOnce(&quot;new_post_path&quot;);});register(&quot;post_permalink&quot;, function(data) {  logOnce(&quot;post_permalink&quot;);});register(&quot;after_render&quot;, function(data) {  logOnce(&quot;after_render&quot;);});register(&quot;after_clean&quot;, function(data) {  logOnce(&quot;after_clean&quot;);});register(&quot;server_middleware&quot;, function(data) {  logOnce(&quot;server_middleware&quot;);});</code></pre>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>for循环中声明变量及该变量在异步调用的使用</title>
      <link href="/post/js/var-in-for/"/>
      <url>/post/js/var-in-for/</url>
      <content type="html"><![CDATA[<pre><code class="js">for (var i=1; i&lt;=3; i++) {    var obj = {name: &#39;obj&#39; + i};    console.log(`[${i}]: ${obj.name}`);}// output:[1]: obj1[2]: obj2[3]: obj3</code></pre><p>in async callback</p><pre><code class="js">for (var i=1; i&lt;=3; i++) {    var obj = {name: &#39;obj&#39; + i};    setTimeout(()=&gt;{        console.log(`[${i}]: ${obj.name}`);      }, 1000);}// output:[4]: obj3[4]: obj3[4]: obj3</code></pre><p>WHY</p><p>因为变量只声明了一次，因此每次操作相当于为同一个变量赋值（使变量指向新建的对象），从而在异步操作执行前，该变量被赋值多次，该变量</p><p>HOW TO FIX</p><p>在for中执行一个闭包，从而使每次循环中的obj都是一个新的变量，指向新建的对象。</p><pre><code class="js">for (var i=1; i&lt;=3; i++) {    (function() {        var obj = {name: &#39;obj&#39; + i};        setTimeout(()=&gt;{            console.log(`[${i}]: ${obj.name}`);          }, 1000);    })();}// output:[4]: obj3[4]: obj3[4]: obj3</code></pre>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>java 并发编程</title>
      <link href="/post/java/concurrent/"/>
      <url>/post/java/concurrent/</url>
      <content type="html"><![CDATA[<h2 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h2><blockquote><p><a href="https://www.cnblogs.com/richaaaard/p/6599184.html" target="_blank" rel="noopener">原文</a></p></blockquote><h3 id="CachedThreadPool"><a href="#CachedThreadPool" class="headerlink" title="CachedThreadPool"></a>CachedThreadPool</h3><blockquote><p>这个线程池在执行 <strong>大量短生命周期的异步任务时（many short-lived asynchronous task）</strong>，可以显著提高程序性能。调用 <strong>execute</strong> 时，可以重用之前已构造的可用线程，如果不存在可用线程，那么会重新创建一个新的线程并将其加入到线程池中。如果线程超过 60 秒还未被使用，就会被中止并从缓存中移除。因此，线程池在长时间空闲后不会消耗任何资源。 </p></blockquote><h3 id="FixedThreadPool"><a href="#FixedThreadPool" class="headerlink" title="FixedThreadPool"></a>FixedThreadPool</h3><blockquote><p>FixedThreadPool 是通过 java.util.concurrent.Executors 创建的 ThreadPoolExecutor 实例。这个实例会复用 <strong>固定数量的线程</strong> 处理一个 <strong>共享的无边界队列</strong> 。任何时间点，最多有 nThreads 个线程会处于活动状态执行任务。如果当所有线程都是活动时，有多的任务被提交过来，那么它会一致在队列中等待直到有线程可用。如果任何线程在执行过程中因为错误而中止，新的线程会替代它的位置来执行后续的任务。所有线程都会一致存于线程池中，直到显式的执行 ExecutorService.shutdown() 关闭。</p></blockquote><h3 id="SingleThreadPool"><a href="#SingleThreadPool" class="headerlink" title="SingleThreadPool"></a>SingleThreadPool</h3><blockquote><p>SingleThreadPool 是通过 java.util.concurrent.Executors 创建的 ThreadPoolExecutor 实例。这个实例只会使用单个工作线程来执行一个无边界的队列。（注意，如果单个线程在执行过程中因为某些错误中止，新的线程会替代它执行后续线程）。它可以保证认为是按顺序执行的，任何时候都不会有多于一个的任务处于活动状态。和 <strong>newFixedThreadPool(1)</strong> 的区别在于，如果线程遇到错误中止，它是无法使用替代线程的。</p></blockquote><h3 id="FixedThreadPool-与-CachedThreadPool-特性对比"><a href="#FixedThreadPool-与-CachedThreadPool-特性对比" class="headerlink" title="FixedThreadPool 与 CachedThreadPool 特性对比"></a>FixedThreadPool 与 CachedThreadPool 特性对比</h3><table><thead><tr><th>特性</th><th>FixedThreadPool</th><th>CachedThreadPool</th></tr></thead><tbody><tr><td>重用</td><td>FixedThreadPool 与 CacheThreadPool差不多，也是能 reuse 就用，但不能随时建新的线程</td><td>缓存型池子，先查看池中有没有以前建立的线程，如果有，就 reuse ；如果没有，就建一个新的线程加入池中</td></tr><tr><td>池大小</td><td>可指定 nThreads，固定数量</td><td>可增长，最大值 Integer.MAX_VALUE</td></tr><tr><td>队列大小</td><td>无限制</td><td>无限制</td></tr><tr><td>超时</td><td>无 IDLE</td><td>默认 60 秒 IDLE</td></tr><tr><td>使用场景</td><td>所以 FixedThreadPool 多数针对一些很稳定很固定的正规并发线程，多用于服务器</td><td>大量短生命周期的异步任务</td></tr><tr><td>结束</td><td>不会自动销毁</td><td>注意，放入 CachedThreadPool 的线程不必担心其结束，超过 TIMEOUT 不活动，其会自动被终止。</td></tr></tbody></table><h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><p>FixedThreadPool 和 CachedThreadPool 两者对高负载的应用都不是特别友好。</p><p>CachedThreadPool 要比 FixedThreadPool 危险很多。</p><p>如果应用要求高负载、低延迟，最好不要选择以上两种线程池：</p><ol><li>任务队列的无边界：会导致内存溢出以及高延迟</li><li>长时间运行会导致 <code>CachedThreadPool</code> 在线程创建上失控</li></ol><p>因为两者都不是特别友好，所以推荐使用 <code>ThreadPoolExecutor</code> ，它提供了很多参数可以进行细粒度的控制。</p><ol><li><p>将任务队列设置成有边界的队列</p></li><li><p>使用合适的 <code>RejectionHandler</code> - 自定义的 <code>RejectionHandler</code> 或 JDK 提供的默认 handler 。</p></li><li><p>如果在任务完成前后需要执行某些操作，可以重载</p><pre><code>beforeExecute(Thread, Runnable)afterExecute(Runnable, Throwable)</code></pre></li><li><p>重载 ThreadFactory ，如果有线程定制化的需求</p></li><li><p>在运行时动态控制线程池的大小（<a href="http://stackoverflow.com/questions/32527078/dynamic-thread-pool/32527532#32527532" target="_blank" rel="noopener">Dynamic Thread Pool</a>）</p></li></ol>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>start using lavas</title>
      <link href="/post/web/lavas/init/"/>
      <url>/post/web/lavas/init/</url>
      <content type="html"><![CDATA[<h2 id="Initialize-Dev-Env"><a href="#Initialize-Dev-Env" class="headerlink" title="Initialize Dev Env"></a>Initialize Dev Env</h2><pre><code class="shell">lavas init# choose App-Shell# enter project name, ...cd project-folder</code></pre><pre><code class="shell">npm install --save-dev eslint eslint-loader babel-eslint eslint-plugin-vuenpm install prettier-eslint --save-dev</code></pre><p>.vscode/settings.json</p><pre><code class="json">{    &quot;prettier.eslintIntegration&quot;: true}</code></pre><p>.eslintrc.json</p><pre><code class="json">{    &quot;env&quot;: {        &quot;browser&quot;: true,        &quot;es6&quot;: true    },    &quot;parser&quot;: &quot;babel-eslint&quot;,    &quot;extends&quot;: &quot;eslint:recommended&quot;,    &quot;parserOptions&quot;: {        &quot;sourceType&quot;: &quot;module&quot;,        &quot;ecmaVersion&quot;: 2017    },    &quot;rules&quot;: {        &quot;indent&quot;: [&quot;error&quot;, 4],        &quot;linebreak-style&quot;: [&quot;error&quot;, &quot;unix&quot;],        &quot;quotes&quot;: [&quot;error&quot;, &quot;single&quot;],        &quot;semi&quot;: [&quot;error&quot;, &quot;always&quot;],        &quot;no-trailing-spaces&quot;: &quot;error&quot;    }}</code></pre><p>Or create your own config using <code>eslint init</code></p><blockquote><p><a href="https://lavas.baidu.com/codelab/eslint/" target="_blank" rel="noopener">lavas &gt; eslint</a></p></blockquote>]]></content>
      
      
    </entry>
    
    <entry>
      <title>strict mode in JS5</title>
      <link href="/post/js/use-strict/"/>
      <url>/post/js/use-strict/</url>
      <content type="html"><![CDATA[<h1 id="Strict-Mode-vs-Sloppy-Mode"><a href="#Strict-Mode-vs-Sloppy-Mode" class="headerlink" title="Strict Mode vs Sloppy Mode"></a>Strict Mode vs Sloppy Mode</h1><ol><li>意外创建全局变量被抛出错误替代（全局变量必须声明后才能赋值）</li></ol><pre><code class="js">someUndeclaredGlobalVar=1/* no error */</code></pre><pre><code class="js">&#39;use strict&#39;;someUndeclaredGlobalVar=1/*------------ReferenceError: someUndeclaredGlobalVar is not defined    at eval:2:25    at eval    at new Promise------------*/</code></pre><ol start="2"><li>给不可写属性赋值, 给只读属性(getter-only)赋值赋值, 给不可扩展对象(<a href="https://developer.mozilla.org/zh-CN/JavaScript/Reference/Global_Objects/Object/preventExtensions" target="_blank" rel="noopener">non-extensible</a> object)的新属性赋值时，严格模式会报错，而正常模式会静默失败(silently fail, 即赋值失败，但是不报错)</li></ol><pre><code class="js">&#39;use strict&#39;;NaN=1/*TypeError: Cannot assign to read only property &#39;NaN&#39; of object &#39;#&lt;Window&gt;&#39;    at eval:2:5    at eval    at new Promise*/</code></pre><ol start="3"><li>在严格模式下, 试图删除不可删除的属性时会抛出异常(正常模式下，这种操作不会产生任何效果)</li></ol><pre><code class="js">&quot;use strict&quot;;delete Object.prototype; // 抛出TypeError错误</code></pre><ol start="4"><li>在严格模式下，重名属性被认为是语法错误。(这个问题在ECMAScript6中已经不复存在)</li><li>严格模式要求函数的参数名唯一. 在正常模式下, 最后一个重名参数名会掩盖之前的重名参数. 之前的参数仍然可以通过 <code>arguments[i] 来访问</code>, 还不是完全无法访问. </li></ol><pre><code class="js">严格模式要求函数的参数名唯一. 在正常模式下, 最后一个重名参数名会掩盖之前的重名参数. 之前的参数仍然可以通过 arguments[i] 来访问, 还不是完全无法访问. </code></pre><ol start="6"><li><p>严格模式禁止八进制数字语法</p><blockquote><p>以零(0)开头的八进制语法: <code>0644 === 420</code> 以及  <code>&quot;\045&quot; === &quot;%&quot;</code></p><p>在ECMAScript 6中支持为一个数字加”<code>0</code>o”的前缀来表示八进制数.</p></blockquote></li><li><p>ECMAScript 6中的严格模式禁止设置<a href="https://developer.mozilla.org/en-US/docs/Glossary/primitive" target="_blank" rel="noopener">primitive</a>值的属性.不采用严格模式,设置属性将会简单忽略(no-op),采用严格模式,将抛出<code>TypeError</code>错误</p></li></ol><pre><code>(function() {&quot;use strict&quot;;false.true = &quot;&quot;;              //TypeError(14).sailing = &quot;home&quot;;        //TypeError&quot;with&quot;.you = &quot;far away&quot;;      //TypeError})();</code></pre><ol start="8"><li>严格模式禁用 <code>with</code>.</li><li><a href="http://whereswalden.com/2011/01/10/new-es5-strict-mode-support-new-vars-created-by-strict-mode-eval-code-are-local-to-that-code-only/" target="_blank" rel="noopener">严格模式下的 eval 不再为上层范围(surrounding scope,注:包围eval代码块的范围)引入新变量</a></li><li>严格模式禁止删除声明变量。<code>delete name</code> 在严格模式下会引起语法错误。</li></ol><h3 id="让eval和-arguments-变的简单"><a href="#让eval和-arguments-变的简单" class="headerlink" title="让eval和`arguments`变的简单"></a>让<code>eval和`</code>arguments`变的简单</h3><ol><li>名称 <code>eval</code> 和 <code>arguments</code> 不能通过程序语法被绑定(be bound)或赋值.</li><li>严格模式下，参数的值不会随 arguments 对象的值的改变而变化。</li><li>不再支持 <code>arguments.callee</code>在严格模式下，<code>arguments.callee</code> 是一个不可删除属性，而且赋值和读取时都会抛出异常。</li></ol><h3 id="“安全的”-JavaScript"><a href="#“安全的”-JavaScript" class="headerlink" title="“安全的” JavaScript"></a>“安全的” JavaScript</h3><ol><li>在严格模式下通过<code>this</code>传递给一个函数的值不会被强制转换为一个对象。</li><li>在严格模式中再也不能通过广泛实现的ECMAScript扩展“游走于”JavaScript的栈中。当一个叫<code>fun</code>的函数正在被调用的时候，<code>fun.caller</code>是最后一个调用<code>fun</code>的函数，而且<code>fun.arguments</code>包含调用<code>fun</code>时用的形参。如果<code>fun</code>在严格模式下，那么<code>fun.caller</code>和<code>fun.arguments</code>都是不可删除的属性而且在存值、取值时都会报错。</li><li>严格模式下的<code>arguments</code>不会再提供访问与调用这个函数相关的变量的途径。<code>arguments.caller</code>在严格模式下同样是一个不可被删除的属性，在赋值或者取值时会报错。</li></ol><h3 id="为未来的ECMAScript版本铺平道路"><a href="#为未来的ECMAScript版本铺平道路" class="headerlink" title="为未来的ECMAScript版本铺平道路"></a>为未来的ECMAScript版本铺平道路</h3><ol><li><p>在严格模式中一部分字符变成了保留的关键字。这些字符包括<code>implements</code>, <code>interface</code>, <code>let</code>, <code>package</code>, <code>private</code>, <code>protected</code>, <code>public</code>, <code>static</code>和<code>yield</code>。在严格模式下，你不能再用这些名字作为变量名或者形参名。</p></li><li><p><a href="http://whereswalden.com/2011/01/24/new-es5-strict-mode-requirement-function-statements-not-at-top-level-of-a-program-or-function-are-prohibited/" target="_blank" rel="noopener">严格模式禁止了不在脚本或者函数层面上的函数声明</a>。</p></li></ol>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Apache2 &gt; Virtual Host SSL Configuration</title>
      <link href="/post/apache2/https/"/>
      <url>/post/apache2/https/</url>
      <content type="html"><![CDATA[<p>In *.conf</p><pre><code class="properties">&lt;VirtualHost *:80&gt;   ServerName www.example.com   Redirect / https://secure.example.com/&lt;/VirtualHost&gt;&lt;VirtualHost _default_:443&gt;   ServerName secure.example.com   DocumentRoot /usr/local/apache2/htdocs   SSLEngine On&lt;/VirtualHost&gt;</code></pre><p><a href="https://wiki.apache.org/httpd/RedirectSSL" target="_blank" rel="noopener">https://wiki.apache.org/httpd/RedirectSSL</a></p>]]></content>
      
      <categories>
          
          <category> apache2 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>utf8 in mysql</title>
      <link href="/post/mysql/utf8/"/>
      <url>/post/mysql/utf8/</url>
      <content type="html"><![CDATA[<p><a href="http://seanlook.com/2016/10/23/mysql-utf8mb4/" target="_blank" rel="noopener">http://seanlook.com/2016/10/23/mysql-utf8mb4/</a></p>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>coding python with vscode</title>
      <link href="/post/python/vscode/"/>
      <url>/post/python/vscode/</url>
      <content type="html"><![CDATA[<p><a href="https://code.visualstudio.com/docs/languages/python" target="_blank" rel="noopener">official docs</a></p><p><a href="https://code.visualstudio.com/docs/python/debugging#_remote-debugging" target="_blank" rel="noopener">remote debugging</a></p><pre><code class="shell"># on both development and remote computerspip install ptvsd==3.0.0</code></pre>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>JS语法糖</title>
      <link href="/post/js/candies/"/>
      <url>/post/js/candies/</url>
      <content type="html"><![CDATA[<h1 id="js语法糖"><a href="#js语法糖" class="headerlink" title="js语法糖"></a>js语法糖</h1><h4 id="复制对象"><a href="#复制对象" class="headerlink" title="复制对象"></a>复制对象</h4><ol><li>方法一： <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign" target="_blank" rel="noopener"><code>Object.assign()</code></a></li><li>方法二：<a href="http://www.redux.org.cn/docs/recipes/UsingObjectSpreadOperator.html" target="_blank" rel="noopener">ES7提案 &gt; 对象展开运算符</a></li></ol><blockquote><p><code>Object.assign()</code> 是 ES6 特性，但多数浏览器并不支持。要么使用 polyfill，<a href="https://github.com/babel-plugins/babel-plugin-object-assign" target="_blank" rel="noopener">Babel 插件</a>，或者使用其它库如 <a href="https://lodash.com/docs#assign" target="_blank" rel="noopener"><code>_.assign()</code></a> 提供的帮助方法。</p></blockquote>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>redux</title>
      <link href="/post/js/redux/"/>
      <url>/post/js/redux/</url>
      <content type="html"><![CDATA[<p><a href="http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html" target="_blank" rel="noopener">理解Redux</a></p><p><a href="https://segmentfault.com/a/1190000007248878" target="_blank" rel="noopener">异步</a></p><p><a href="https://segmentfault.com/a/1190000011866886" target="_blank" rel="noopener">redux-promise-middleware实践</a></p><p><a href="https://github.com/pburtchaell/redux-promise-middleware" target="_blank" rel="noopener">redux-promise-middleware</a></p>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>stylus &gt; Basic Syntax</title>
      <link href="/post/css/stylus/basic-syntax/"/>
      <url>/post/css/stylus/basic-syntax/</url>
      <content type="html"><![CDATA[<h2 id="Parent-reference"><a href="#Parent-reference" class="headerlink" title="Parent reference"></a>Parent reference</h2><pre><code class="stylus">ul  li a    display: block    color: blue    padding: 5px    html.ie &amp;      padding: 6px    &amp;:hover      color: red</code></pre><pre><code class="css">ul li a {  display: block;  color: #00f;  padding: 5px;}html.ie ul li a {  padding: 6px;}ul li a:hover {  color: #f00;}</code></pre><h2 id="Mixins"><a href="#Mixins" class="headerlink" title="Mixins"></a>Mixins</h2><pre><code class="stylus">border-radius(val)  -webkit-border-radius: val  -moz-border-radius: val  border-radius: valbutton {  border-radius(5px);}</code></pre><pre><code class="css">button {  -webkit-border-radius: 5px;  -moz-border-radius: 5px;  border-radius: 5px;}</code></pre><h3 id="Transparent-mixins"><a href="#Transparent-mixins" class="headerlink" title="Transparent mixins"></a>Transparent mixins</h3><pre><code class="stylus">border-radius()  -webkit-border-radius: arguments  -moz-border-radius: arguments  border-radius: argumentsbutton {  border-radius: 5px 10px;}</code></pre><pre><code class="css">button {  -webkit-border-radius: 5px 10px;  -moz-border-radius: 5px 10px;  border-radius: 5px 10px;}</code></pre><h2 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h2><pre><code class="stylus">#prompt  position: absolute  top: 150px  left: 50%  width: w = 200px  margin-left: -(w / 2)</code></pre><pre><code class="css">#prompt {  position: absolute;  top: 150px;  left: 50%;  width: 200px;  margin-left: -100px;}</code></pre><h2 id="Block-property-access"><a href="#Block-property-access" class="headerlink" title="Block property access"></a>Block property access</h2><pre><code class="stylus">#prompt  position: absolute  top: 150px  left: 50%  width: 200px  margin-left: -(@width / 2)</code></pre><pre><code class="css">#prompt {  position: absolute;  top: 150px;  left: 50%;  width: 200px;  margin-left: -100px;}</code></pre><h2 id="Iteration"><a href="#Iteration" class="headerlink" title="Iteration"></a>Iteration</h2><pre><code class="stylus">table  for row in 1 2 3 4 5    tr:nth-child({row})      height: 10px * row</code></pre><pre><code class="css">table tr:nth-child(1) {  height: 10px;}table tr:nth-child(2) {  height: 20px;}table tr:nth-child(3) {  height: 30px;}table tr:nth-child(4) {  height: 40px;}table tr:nth-child(5) {  height: 50px;}</code></pre><h2 id="Interpolation"><a href="#Interpolation" class="headerlink" title="Interpolation"></a>Interpolation</h2><pre><code class="stylus">vendors = webkit moz o ms officialborder-radius()  for vendor in vendors    if vendor == official      border-radius: arguments    else      -{vendor}-border-radius: arguments#content  border-radius: 5px</code></pre><pre><code class="css">#content {  -webkit-border-radius: 5px;  -moz-border-radius: 5px;  -o-border-radius: 5px;  -ms-border-radius: 5px;  border-radius: 5px;}</code></pre><h2 id="Operators"><a href="#Operators" class="headerlink" title="Operators"></a>Operators</h2><pre><code class="stylus">body  foo: 5px + 10  foo: 2 ** 8  foo: 5px * 2  foo: !!&#39;&#39;  foo: foo and bar and baz  foo: foo or bar or baz  foo: 1..5  foo: 1...5  foo: &#39;foo&#39; is a &#39;string&#39;  foo: (1 2 3) == (1 2 3)  foo: (1 2 3) == (1 2)  foo: ((one 1) (two 2)) == ((one 1) (two 2))   foo: ((one 1) (two 2)) == ((one 1) (two))   foo: ((one 1) (two 2))[0]  foo: 3 in (1 2 3 4)</code></pre><pre><code class="css">body {  foo: 15px;  foo: 256;  foo: 10px;  foo: false;  foo: baz;  foo: foo;  foo: 1 2 3 4 5;  foo: 1 2 3 4;  foo: true;  foo: true;  foo: false;  foo: true;  foo: false;  foo: one 1;  foo: true;}</code></pre><h3 id="Type-coercion"><a href="#Type-coercion" class="headerlink" title="Type coercion"></a>Type coercion</h3><pre><code class="stylus">body  foo: foo + bar  foo: &#39;foo &#39; + bar  foo: &#39;foo &#39; + &#39;bar&#39;  foo: &#39;foo &#39; + 5px  foo: 2s - 500ms  foo: 5000ms == 5s  foo: 50deg</code></pre><pre><code class="css">body {  foo: foobar;  foo: &#39;foo bar&#39;;  foo: &#39;foo bar&#39;;  foo: &#39;foo 5px&#39;;  foo: 1.5s;  foo: true;  foo: 50deg;}</code></pre><h3 id="The-sprintf-operator"><a href="#The-sprintf-operator" class="headerlink" title="The sprintf operator"></a>The sprintf operator</h3><pre><code class="stylus">body  foo: &#39;%s / %s&#39; % (5px 10px)  foo: &#39;MS:WeirdStuff(opacity=%s)&#39; % 1  foo: unquote(&#39;MS:WeirdStuff(opacity=1)&#39;)</code></pre><pre><code class="css">body {  foo: 5px / 10px;  foo: MS:WeirdStuff(opacity=1);  foo: MS:WeirdStuff(opacity=1);}</code></pre><h3 id="Color-operations"><a href="#Color-operations" class="headerlink" title="Color operations"></a>Color operations</h3><pre><code class="stylus">body  foo: white - 50%  foo: black + 50%  foo: #eee - #f00  foo: #eee - rgba(black,.5)  foo: #cc0000 + 30deg</code></pre><pre><code class="css">body {  foo: #808080;  foo: #808080;  foo: #0ee;  foo: rgba(238,238,238,0.5);  foo: #c60;}</code></pre><h2 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h2><pre><code class="stylus">sum(nums...)  n = 0  n += num for num in numsbody  foo: sum(1, 2, 3)</code></pre><pre><code class="css">body {  foo: 6;}</code></pre><h3 id="Keyword-arguments"><a href="#Keyword-arguments" class="headerlink" title="Keyword arguments"></a>Keyword arguments</h3><pre><code class="stylus">fade-out(color, amount = 50%)  color - rgba(0,0,0,amount)body  foo: fade-out(#eee)  foo: fade-out(#eee, 20%)  foo: fade-out(#eee, amount: 50%)  foo: fade-out(color: #eee, amount: 50%)  foo: fade-out(amount: 50%, #eee)  foo: fade-out(amount: 50%, color: #eee)</code></pre><pre><code class="css">body {  foo: rgba(238,238,238,0.5);  foo: rgba(238,238,238,0.8);  foo: rgba(238,238,238,0.5);  foo: rgba(238,238,238,0.5);  foo: rgba(238,238,238,0.5);  foo: rgba(238,238,238,0.5);}</code></pre><h3 id="Built-in-functions"><a href="#Built-in-functions" class="headerlink" title="Built-in functions"></a>Built-in functions</h3><pre><code>body  foo: red(#fc0)  foo: green(#fc0)  foo: blue(#fc0)  foo: alpha(#fff)  foo: alpha(rgba(#fff, .5))</code></pre><pre><code class="css">body {  foo: 255;  foo: 204;  foo: 0;  foo: 1;  foo: 0.5;}</code></pre><h3 id="Color-BIFs"><a href="#Color-BIFs" class="headerlink" title="Color BIFs"></a>Color BIFs</h3><pre><code class="stylus">body  foo: light(#eee)  foo: dark(#eee)  foo: dark(#333)  foo: darken(#eee, 50%)  foo: lighten(black, 50%)  foo: #eee - 50%  foo: black + 50%</code></pre><pre><code class="css">body {  foo: true;  foo: false;  foo: true;  foo: #777;  foo: #808080;  foo: #777;  foo: #808080;}</code></pre>]]></content>
      
      <categories>
          
          <category> css </category>
          
          <category> stylus </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Set up PowerShell Environment</title>
      <link href="/post/powershell/env/"/>
      <url>/post/powershell/env/</url>
      <content type="html"><![CDATA[<blockquote><p><a href="https://www.gngrninja.com/powershell-getting-started-series" target="_blank" rel="noopener">Getting Started</a></p></blockquote><pre><code class="powershell">Set-ExecutionPolicy RemoteSigned -Scope CurrentUser</code></pre>]]></content>
      
      <categories>
          
          <category> powershell </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>for each window</title>
      <link href="/post/js/for-each-window/"/>
      <url>/post/js/for-each-window/</url>
      <content type="html"><![CDATA[<pre><code class="js">            /**             * @callback winCallback             * @param {Window} win             */            /**             * 对于一个给定的window, 对其所有父window和子window执行callback_win回调             * @param {Window} win             * @param {winCallback} callback_win             */            function forEachWin(win, callback_win) {                callback_win = typeof callback_win === &quot;function&quot; ?                    callback_win :                    (function () {                    });                function forEachChildWin(parentWin, callback_win) {                    callback_win(parentWin);                    $(&quot;iframe&quot;, parentWin.document).each(function () {                        forEachChildWin(this.contentWindow, callback_win);                    });                }                while (win.parent !== win) {                    win = win.parent;                }                forEachChildWin(win, callback_win);            }</code></pre>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>string literal types</title>
      <link href="/post/typescript/string-literal-types/"/>
      <url>/post/typescript/string-literal-types/</url>
      <content type="html"><![CDATA[<p><a href="https://www.typescriptlang.org/docs/handbook/advanced-types.html#string-literal-types" target="_blank" rel="noopener">https://www.typescriptlang.org/docs/handbook/advanced-types.html#string-literal-types</a></p>]]></content>
      
      <categories>
          
          <category> typescript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>useful tips for jQuery</title>
      <link href="/post/js/jquery/useful/"/>
      <url>/post/js/jquery/useful/</url>
      <content type="html"><![CDATA[<p>move child under another parent</p><pre><code class="js">$(&quot;#child&quot;).detach().appendTo(&quot;parent&quot;);</code></pre><p>parse HTML to HTMLElement</p><pre><code class="js">jQuery.parseHTML( data [, context ] [, keepScripts ] )</code></pre><p>insert after (as sibling)</p><pre><code class="js">.after()</code></pre>]]></content>
      
      <categories>
          
          <category> js </category>
          
          <category> jquery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Using TypeScript in Node.js</title>
      <link href="/post/Node-js/using-typescript/"/>
      <url>/post/Node-js/using-typescript/</url>
      <content type="html"><![CDATA[<p><a href="https://segmentfault.com/a/1190000007574276" target="_blank" rel="noopener">https://segmentfault.com/a/1190000007574276</a></p><h2 id="Publishing-to-npm"><a href="#Publishing-to-npm" class="headerlink" title="Publishing to npm"></a>Publishing to npm</h2><p><a href="http://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html" target="_blank" rel="noopener">http://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html</a></p><p>in tsconfig.json:</p><pre><code class="json">{    &quot;compilerOptions&quot;: {        &quot;declaration&quot;: true,    },}</code></pre><p>in package.json:</p><pre><code class="json">{    &quot;name&quot;: &quot;awesome&quot;,    &quot;author&quot;: &quot;Vandelay Industries&quot;,    &quot;version&quot;: &quot;1.0.0&quot;,    &quot;main&quot;: &quot;./lib/main.js&quot;,    &quot;types&quot;: &quot;./lib/main.d.ts&quot;}</code></pre>]]></content>
      
      <categories>
          
          <category> Node.js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>PWA(Progressive Web App)</title>
      <link href="/post/web/progressive-web-apps/"/>
      <url>/post/web/progressive-web-apps/</url>
      <content type="html"><![CDATA[<p><a href="https://developers.google.com/web/progressive-web-apps/" target="_blank" rel="noopener">official site</a></p><p><a href="https://developer.mozilla.org/zh-CN/Apps/Progressive" target="_blank" rel="noopener">documentation</a></p><p><a href="https://segmentfault.com/a/1190000005641692" target="_blank" rel="noopener">quick guide</a></p><p><a href="https://lavas.baidu.com/" target="_blank" rel="noopener">lavas</a></p>]]></content>
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Web &gt; Responsive Layout</title>
      <link href="/post/css/responsive-layout/"/>
      <url>/post/css/responsive-layout/</url>
      <content type="html"><![CDATA[<p>Using <meta> tag</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries</a></p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>references for material design lite</title>
      <link href="/post/js/mdl/references/"/>
      <url>/post/js/mdl/references/</url>
      <content type="html"><![CDATA[<h1 id="Colors"><a href="#Colors" class="headerlink" title="Colors"></a>Colors</h1><p><a href="http://blog.jonathanargentiero.com/material-design-lite-color-classes-list/" target="_blank" rel="noopener">http://blog.jonathanargentiero.com/material-design-lite-color-classes-list/</a></p><h1 id="Material-Design-Guidelines"><a href="#Material-Design-Guidelines" class="headerlink" title="Material Design Guidelines"></a>Material Design Guidelines</h1><p><a href="https://material.io/guidelines/material-design/#" target="_blank" rel="noopener">https://material.io/guidelines/material-design/#</a></p><h1 id="Icons"><a href="#Icons" class="headerlink" title="Icons"></a>Icons</h1><p><a href="https://material.io/icons/" target="_blank" rel="noopener">https://material.io/icons/</a></p>]]></content>
      
      <categories>
          
          <category> js </category>
          
          <category> mdl </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>debug php</title>
      <link href="/post/php/debug/"/>
      <url>/post/php/debug/</url>
      <content type="html"><![CDATA[<p><a href="https://confluence.jetbrains.com/display/PhpStorm/Zero-configuration+Web+Application+Debugging+with+Xdebug+and+PhpStorm#Zero-configurationWebApplicationDebuggingwithXdebugandPhpStorm-1.InstallXdebug" target="_blank" rel="noopener">https://confluence.jetbrains.com/display/PhpStorm/Zero-configuration+Web+Application+Debugging+with+Xdebug+and+PhpStorm#Zero-configurationWebApplicationDebuggingwithXdebugandPhpStorm-1.InstallXdebug</a></p><p><a href="http://blog.csdn.net/zhyh1986/article/details/45172685" target="_blank" rel="noopener">http://blog.csdn.net/zhyh1986/article/details/45172685</a></p><p><a href="http://aboutcoder.com/2016/09/01/integrate-phpstorm-mamp-xdebug/" target="_blank" rel="noopener">http://aboutcoder.com/2016/09/01/integrate-phpstorm-mamp-xdebug/</a></p><pre><code>[Xdebug]zend_extension=&quot;D:\MAMP\bin\php\php7.1.5\ext\php_xdebug.dll&quot;xdebug.remote_enable=1xdebug.remote_host=localhostxdebug.remote_port=9000xdebug.idekey=&quot;PHPSTORM&quot;</code></pre>]]></content>
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Header in Web Page</title>
      <link href="/post/css/headers/"/>
      <url>/post/css/headers/</url>
      <content type="html"><![CDATA[<p>A useful library</p><p><a href="http://wicky.nillia.ms/headroom.js/" target="_blank" rel="noopener">http://wicky.nillia.ms/headroom.js/</a></p>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>WordPress Development using PhpStorm</title>
      <link href="/post/wordpress/develop/using-phpstorm/"/>
      <url>/post/wordpress/develop/using-phpstorm/</url>
      <content type="html"><![CDATA[<h1 id="WordPress-Development-using-PhpStorm"><a href="#WordPress-Development-using-PhpStorm" class="headerlink" title="WordPress Development using PhpStorm"></a>WordPress Development using PhpStorm</h1><blockquote><p>参考：</p><p><a href="https://confluence.jetbrains.com/display/PhpStorm/WordPress+Development+using+PhpStorm" target="_blank" rel="noopener">JetBrains &gt; WordPress Development using PhpStorm</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Arguments in Node.js</title>
      <link href="/post/Node-js/arguments/"/>
      <url>/post/Node-js/arguments/</url>
      <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/474e6d76f867" target="_blank" rel="noopener">https://www.jianshu.com/p/474e6d76f867</a></p>]]></content>
      
      <categories>
          
          <category> Node.js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>mouse events</title>
      <link href="/post/js/mouse-events/"/>
      <url>/post/js/mouse-events/</url>
      <content type="html"><![CDATA[<p>mouseleave mouseenter</p><p>​                    v s</p><p>mouseout      mouseover</p><p>测试浏览器：Google Chrome 版本 64.0.3282.140（正式版本） （64 位）</p><pre><code class="js">element.addEventListener(&#39;mouseleave&#39;,()=&gt;{console.log(&#39;mouseleave!&#39;)});element.addEventListener(&#39;mouseenter&#39;,()=&gt;{console.log(&#39;mouseenter!&#39;)})element.addEventListener(&#39;mouseout&#39;,()=&gt;{console.log(&#39;mouseout!&#39;)})element.addEventListener(&#39;mouseover&#39;,()=&gt;{console.log(&#39;mouseover!&#39;)})</code></pre><p>结果：</p><pre><code>mouseover!mouseenter!mouseout!mouseover!mouseout!mouseover!mouseout!mouseleave!</code></pre><p>结果显示：</p><ol><li>鼠标进入元素时，先触发mouseover，再触发mouseenter。</li><li>如果该元素有子元素，鼠标在子元素间移动时，会先触发mouseout，再触发mouseover，而不会触发mouseenter和mouseleave。</li><li>鼠标移出元素时，先触发mouseout，再触发mouseleave。</li></ol><p>总结：表示状态的对子元素敏感，先触发；表示动作的对子元素不敏感，后触发。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">mouseover, mouseout</th><th style="text-align:center">mouseenter, mouseleave</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">表示状态</td><td style="text-align:center">表示动作</td></tr><tr><td style="text-align:center">是否子元素敏感</td><td style="text-align:center">是</td><td style="text-align:center">否</td></tr><tr><td style="text-align:center">触发时间</td><td style="text-align:center">先</td><td style="text-align:center">后</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>customize vscode</title>
      <link href="/post/vscode/customize/"/>
      <url>/post/vscode/customize/</url>
      <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/greatbody/article/details/54581226" target="_blank" rel="noopener">配置完全手册</a></p>]]></content>
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>use jsdoc</title>
      <link href="/post/js/jsdoc/"/>
      <url>/post/js/jsdoc/</url>
      <content type="html"><![CDATA[<p><a href="usejsdoc.org">usejsdoc</a></p>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>JS Dev Tools</title>
      <link href="/post/js/js-dev-tools/"/>
      <url>/post/js/js-dev-tools/</url>
      <content type="html"><![CDATA[<h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3><p><a href="https://www.jianshu.com/p/42e11515c10f" target="_blank" rel="noopener">https://www.jianshu.com/p/42e11515c10f</a></p><p><a href="https://doc.webpack-china.org/guides/getting-started" target="_blank" rel="noopener">https://doc.webpack-china.org/guides/getting-started</a></p><h4 id="source-map"><a href="#source-map" class="headerlink" title="source-map"></a>source-map</h4><p><a href="https://segmentfault.com/a/1190000008315937" target="_blank" rel="noopener">https://segmentfault.com/a/1190000008315937</a></p><h4 id="css-modules"><a href="#css-modules" class="headerlink" title="css modules"></a>css modules</h4><p><a href="https://segmentfault.com/a/1190000004990977" target="_blank" rel="noopener">usage</a></p><h3 id="babel"><a href="#babel" class="headerlink" title="babel"></a>babel</h3><p><a href="http://babeljs.io/docs/setup/#installation" target="_blank" rel="noopener">http://babeljs.io/docs/setup/#installation</a></p><p><a href="http://www.ruanyifeng.com/blog/2016/01/babel.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/01/babel.html</a></p><p>babel可以将es6语法编译为es5语法，以兼容各种版本浏览器。</p><p>babel会将es6中的import和export语句编译为CommonJS规范中的exports和require。由于Node.js不支持es6的import和export，而支持CommonJS规范的语法，从而经过babel编译后可以在Node.js中运行。</p><p>但是很多浏览器原生并不支持任何模块功能（详见<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/import#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9" target="_blank" rel="noopener">import的浏览器兼容</a>）。因此需要在html中引入CommonJS规范或AMD规范（例如RequireJS）的js库（关于它们的区别，可见<a href="http://blog.csdn.net/crystal6918/article/details/74906757" target="_blank" rel="noopener">CommonJS、requirejs、ES6的对比</a>）。或者先用webpack等打包工具打包后再发布。</p><h3 id="判断是否在调试环境（防止调试）"><a href="#判断是否在调试环境（防止调试）" class="headerlink" title="判断是否在调试环境（防止调试）"></a>判断是否在调试环境（防止调试）</h3><p><a href="https://stackoverflow.com/questions/7798748/find-out-whether-chrome-console-is-open" target="_blank" rel="noopener">https://stackoverflow.com/questions/7798748/find-out-whether-chrome-console-is-open</a></p><h3 id="前端加密"><a href="#前端加密" class="headerlink" title="前端加密"></a>前端加密</h3><p><a href="http://div.io/topic/1220" target="_blank" rel="noopener">http://div.io/topic/1220</a></p><p><a href="https://developers.google.com/closure/compiler/" target="_blank" rel="noopener">google closure compiler</a></p><h3 id="screenful"><a href="#screenful" class="headerlink" title="screenful"></a>screenful</h3><p><a href="https://github.com/sindresorhus/screenfull.js" target="_blank" rel="noopener">https://github.com/sindresorhus/screenfull.js</a></p><h3 id="混淆工具"><a href="#混淆工具" class="headerlink" title="混淆工具"></a>混淆工具</h3><p><a href="https://www.npmjs.com/package/uglify-js" target="_blank" rel="noopener">uglify-js</a></p>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Simple implementation for MVVM</title>
      <link href="/post/js/simple-mvvm/"/>
      <url>/post/js/simple-mvvm/</url>
      <content type="html"><![CDATA[<blockquote><p>转载于<a href="https://zhuanlan.zhihu.com/p/24475845" target="_blank" rel="noopener">250行实现一个简单的MVVM</a></p></blockquote><p>MVVM这两年在前端届掀起了一股热潮，火热的Vue和Angular带给了开发者无数的便利，本文将实现一个简单的MVVM，用200多行代码探索MVVM的秘密。您可以<a href="https://link.zhihu.com/?target=https%3A//jsbin.com/juqeduf/edit%3Fconsole%2Coutput" target="_blank" rel="noopener">先点击本文的JS Bin查看效果</a>，代码使用ES6，所以你可能需要转码。</p><h1 id="什么是MVVM？"><a href="#什么是MVVM？" class="headerlink" title="什么是MVVM？"></a>什么是MVVM？</h1><p>MVVM是一种程序架构设计。把它拆开来看应该是Model-View-ViewModel。</p><h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><p>Model指的是数据层，是纯净的数据。对于前端来说，它往往是一个简单的对象。例如：</p><pre><code class="js">{  name: &#39;mirone&#39;,  age: 20,  friends: [&#39;singleDogA&#39;, &#39;singleDogB&#39;],  details: {    type: &#39;notSingleDog&#39;,    tags: [&#39;fff&#39;, &#39;sox&#39;]  }}</code></pre><p>数据层是我们需要渲染后呈现给用户的数据，数据层本身是可变的。数据层不应该承担逻辑操作和计算的功能。</p><h2 id="View"><a href="#View" class="headerlink" title="View"></a>View</h2><p>View指视图层，是直接呈现给用户的部分，简单的来说，对于前端就是HTML。例如上面的数据层，它对应的视图层可能是：</p><pre><code>&lt;div&gt;  &lt;p&gt;    &lt;b&gt;name: &lt;/b&gt;    &lt;span&gt;mirone&lt;/span&gt;  &lt;/p&gt;  &lt;p&gt;    &lt;b&gt;age: &lt;/b&gt;    &lt;span&gt;20&lt;/span&gt;  &lt;/p&gt;  &lt;ul&gt;    &lt;li&gt;singleDogA&lt;/li&gt;    &lt;li&gt;singleDogB&lt;/li&gt;  &lt;/ul&gt;  &lt;div&gt;    &lt;p&gt;notSingleDog&lt;/p&gt;    &lt;ul&gt;      &lt;li&gt;fff&lt;/li&gt;      &lt;li&gt;sox&lt;/li&gt;    &lt;/ul&gt;  &lt;/div&gt;&lt;/div&gt;</code></pre><p>当然视图层是可变的，你完全可以在其中随意添加元素。这不会改变数据层，只会改变视图层呈现数据的方式。视图层应该和数据层完全分离。</p><h2 id="ViewModel"><a href="#ViewModel" class="headerlink" title="ViewModel"></a>ViewModel</h2><p>既然视图层应该和数据层分离，那么我们就需要设计一种结构，让它们建立起某种联系。当我们对Model进行修改的时候，ViewModel就会把修改自动同步到View层去。同样当我们修改View，Model同样被ViewModel自动修改。</p><p>可以看出，如何设计能够高效自动同步View与Model的ViewModel是整个MVVM框架的核心和难点。</p><h1 id="MVVM的原理"><a href="#MVVM的原理" class="headerlink" title="MVVM的原理"></a>MVVM的原理</h1><h2 id="差异"><a href="#差异" class="headerlink" title="差异"></a>差异</h2><p>不同的框架对于MVVM的实现是不同的。</p><h3 id="数据劫持"><a href="#数据劫持" class="headerlink" title="数据劫持"></a>数据劫持</h3><p>Vue的实现方式，对数据（Model）进行劫持，当数据发生变动时，数据会触发劫持时绑定的方法，对视图进行更新。</p><h3 id="脏检查机制"><a href="#脏检查机制" class="headerlink" title="脏检查机制"></a>脏检查机制</h3><p>Angular的实现方式，当发生了某种事件（例如输入），Angular会检查新的数据结构和之前的数据结构是否发生了变动，来决定是否更新视图。</p><h3 id="发布订阅模式"><a href="#发布订阅模式" class="headerlink" title="发布订阅模式"></a>发布订阅模式</h3><p>Knockout的实现方式，实现了一个发布订阅器，解析时会在对应视图节点绑定订阅器，而在数据上绑定发布器，当修改数据时，就出发了发布器，视图收到后进行对应更新。</p><h2 id="相同点"><a href="#相同点" class="headerlink" title="相同点"></a>相同点</h2><p>但是还是有很多相同点的，它们都有三个步骤：</p><ul><li>解析模版</li><li>解析数据</li><li>绑定模版与数据</li></ul><h3 id="解析模版"><a href="#解析模版" class="headerlink" title="解析模版"></a>解析模版</h3><p>何谓模版？我们可以看一下主流MVVM的模版：</p><pre><code>&lt;!-- Vue --&gt;&lt;div id=&quot;mobile-list&quot;&gt;  &lt;h1 v-text=&quot;title&quot;&gt;&lt;/h1&gt;  &lt;ul&gt;    &lt;li v-for=&quot;item in brands&quot;&gt;      &lt;b v-text=&quot;item.name&quot;&gt;&lt;/b&gt;      &lt;span v-show=&quot;showRank&quot;&gt;Rank: {{item.rank}}&lt;/span&gt;    &lt;/li&gt;  &lt;/ul&gt;&lt;/div&gt;&lt;!-- Angular --&gt;&lt;ul&gt;  &lt;li ng-repeat=&quot;phone in phones&quot;&gt;    {{phone.name}}    &lt;p&gt;{{phone.snippet}}&lt;/p&gt;  &lt;/li&gt;&lt;/ul&gt;&lt;!-- Knockout --&gt;&lt;tbody data-bind=&quot;foreach: seats&quot;&gt;  &lt;tr&gt;    &lt;td data-bind=&quot;text: name&quot;&gt;&lt;/td&gt;    &lt;td data-bind=&quot;text: meal().mealName&quot;&gt;&lt;/td&gt;    &lt;td data-bind=&quot;text: meal().price&quot;&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;/tbody&gt;</code></pre><p>可以看到它们都定义了自己的模版关键字，这一模块的作用就是根据这些关键字解析模版，将模版对应到期望的数据结构。</p><h3 id="解析数据"><a href="#解析数据" class="headerlink" title="解析数据"></a>解析数据</h3><p>Model中的数据经过劫持或绑定发布器来解析。数据解析器的编写要考虑VM的实现方式，但是无论如何解析数据只要做好一件事：定义数据变动时要通知的对象。解析数据时应保证数据解析后的一致性，对于每种数据解析后暴露的接口应该保持一致。</p><h3 id="绑定模版与数据"><a href="#绑定模版与数据" class="headerlink" title="绑定模版与数据"></a>绑定模版与数据</h3><p>这一部分定义了数据结构以何种方式和模版进行绑定，就是传说中的“双向绑定”。绑定之后我们直接对数据进行操作时，应用就能自动更新视图了。数据和模版往往是多对多的关系，而且不同的模版更新数据的方式往往不同。例如有的是改变标签的文本节点，有的是改变标签的className。</p><h1 id="动手实现MVVM"><a href="#动手实现MVVM" class="headerlink" title="动手实现MVVM"></a>动手实现MVVM</h1><p>经过一番分析，来动手实现MVVM吧。</p><h2 id="期望效果"><a href="#期望效果" class="headerlink" title="期望效果"></a>期望效果</h2><p>对于我的MVVM，我希望对应一个数据结构：</p><pre><code>let data = {  title: &#39;todo list&#39;,  user: &#39;mirone&#39;,  todos: [    {      creator: &#39;mirone&#39;,      content: &#39;write mvvm&#39;      done: &#39;undone&#39;,      date: &#39;2016-11-17&#39;,      members: [        {          name: &#39;kaito&#39;        }      ]    }  ]}</code></pre><p>我可以对应的编写模版：</p><pre><code>&lt;div id=&quot;root&quot;&gt;  &lt;h1 data-model=&quot;title&quot;&gt;&lt;/h1&gt;  &lt;div&gt;    &lt;div data-model=&quot;user&quot;&gt;&lt;/div&gt;    &lt;ul data-list=&quot;todos&quot;&gt;      &lt;li data-list-item=&quot;todos&quot;&gt;        &lt;p data-class=&quot;todos:done&quot; data-model=&quot;todos:creator&quot;&gt;&lt;/p&gt;        &lt;p data-model=&quot;todos:date&quot;&gt;&lt;/p&gt;        &lt;p data-model=&quot;todos:content&quot;&gt;&lt;/p&gt;        &lt;ul data-list=&quot;todos:members&quot;&gt;          &lt;li data-list-item=&quot;todos:members&quot;&gt;            &lt;span data-model=&quot;todos:members:name&quot;&gt;&lt;/span&gt;          &lt;/li&gt;        &lt;/ul&gt;      &lt;/li&gt;    &lt;/ul&gt;  &lt;/div&gt;&lt;/div&gt;</code></pre><p>然后通过调用：</p><pre><code>new Parser(&#39;#root&#39;, data)</code></pre><p>就可以完成mvvm的绑定，之后可以直接操作data对象来对View进行更改。</p><h2 id="解析模版-1"><a href="#解析模版-1" class="headerlink" title="解析模版"></a>解析模版</h2><p>模版的解析其实是一个树的遍历过程。</p><h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><p>众所周知，DOM是一个树状结构，这也是为什么它被称为“DOM树”。对于树的遍历，只要递归，便能很轻松的完成一个深度优先遍历，请看代码：</p><pre><code>function scan(node) {  console.log(node)  for(let i = 0; i &lt; node.children.length; i++) {    const _thisNode  = node.children[i]    console.log(_thisNode)    if(_thisNode.children.length) {      scan(_thisNode)    }  }}</code></pre><p>这个函数遍历了一个DOM节点，依次打印遍历得到的节点。</p><h3 id="遍历不同结构"><a href="#遍历不同结构" class="headerlink" title="遍历不同结构"></a>遍历不同结构</h3><p>知道了如何遍历一个DOM树，那么我们如何获取需要分析的DOM树？根据之前的构想，我们需要这么几种标识：</p><ul><li>data-model——用于将DOM的文本节点替换为制定内容</li><li>data-class——用于将 DOM的className替换为制定内容</li><li>data-list——用于标识接下来将出现一个列表，列表为制定结构</li><li>data-list-item——用于标识列表项的内部结构</li><li>data-event——用于为DOM节点绑定指定事件</li></ul><p>简单的归类一下：data-model、data-class和data-event应该是一类，它们都只影响当前节点；而data-list和data-item作为列表应该要单独考虑。那么我们可以这样遍历：</p><pre><code> function scan(node) {  if(!node.getAttribute(&#39;data-list&#39;)) {    for(let i = 0; i &lt; node.children.length; i++) {      const _thisNode = node.children[i]      parseModel(_thisNode)      parseClass(_thisNode)      parseEvent(_thisNode)      if(_thisNode.children.length) {        scan(_thisNode)      }    }  } else {    parseList(node)  }}function parseModel(node) {  //TODO:解析Model节点}function parseClass(node) {  //TODO:解析className}function parseEvent(node) {  //TODO:解析事件}function parseList(node) {  //TODO: 解析列表}</code></pre><p>这样我们就搭好了遍历器的大概框架</p><h3 id="不同结构的处理方法"><a href="#不同结构的处理方法" class="headerlink" title="不同结构的处理方法"></a>不同结构的处理方法</h3><p>parseModel，parseClass和parseEvent的处理方式比较相似，唯一值得注意的就是对于嵌套元素的处理，回忆一下我们的模版设计：</p><pre><code>&lt;!--遇到嵌套部分--&gt;&lt;div data-model=&quot;todos:date&quot;&gt;&lt;/div&gt;</code></pre><p>这里的todos:date其实大大方便了我们解析模版，因为它展示了当前数据在Model结构中的位置。</p><pre><code>//event要有一个eventList,大概结构为：const eventList = {  typeWriter: {    type: &#39;input&#39;, //事件的种类    fn: function() {      //事件的处理函数，函数的this代表函数绑定的DOM节点    }  }}function parseEvent(node) {  if(node.getAttribute(&#39;data-event&#39;)) {    const eventName = node.getAttribute(&#39;data-event&#39;)    node.addEventListener(eventList[eventName].type, eventList[eventName].fn.bind(node))  }}//根据在模版中的位置解析模版，这里的Path是一个数组，代表了当前数据在Model中的位置function parseData(str, node) {  const _list = str.split(&#39;:&#39;)  let _data,    _path  let p = []  _list.forEach((key, index) =&gt; {    if(index === 0) {      _data = data[key]      p.push(key)    } else {      _path = node.path[index-1]      p.push(_path)      _data = _data[_path][key]      p.push(key)    }  })  return {    path: p,    data: _data  }}function parseModel(node) {  if(node.getAttribute(&#39;data-model&#39;)) {    const modelName = node.getAttribute(&#39;data-model&#39;)    const _data = parseData(modelName, node)    if(node.tagName === &#39;INPUT&#39;) {      node.value = _data.data    } else {      node.innerText = _data.data    }  }}function parseClass(node) {  if(node.getAttribute(&#39;data-class&#39;)) {    const className = node.getAttribute(&#39;data-class&#39;)    const _data = parseData(className, node)    if(!node.classList.contains(_data.data)) {      node.classList.add(_data.data)    }  }}</code></pre><p>接下来解析列表，我们遇到列表时，应该先递归找出列表项的结构</p><pre><code> parseListItem(node) {  let target  !function getItem(node) {    for(let i = 0; i &lt; node.children.length; i++) {      const _thisNode = node.children[i]      if(node.path) {        _thisNode.path = node.path.slice()      }      parseEvent(_thisNode)      parseClass(_thisNode)      parseModel(_thisNode)      if(_thisNode.getAttribute(&#39;data-list-item&#39;)) {        target = _thisNode      } else {        getItem(_thisNode)      }     }  }(node)  return target}</code></pre><p>之后在用这个列表项来按需拷贝出一定数量的列表项，并填充数据</p><pre><code>function parseList(node) {  const _item = parseListItem(node)  const _list = node.getAttribute(&#39;data-list&#39;)  const _listData = parseData(_list, node)  _listData.data.forEach((_dataItem, index) =&gt; {    const _copyItem = _item.cloneNode(true)    if(node.path) {      _copyItem.path = node.path.slice()    }    if(!_copyItem.path) {      _copyItem.path = []    }    _copyItem.path.push(index)    scan(_copyItem)    node.insertBefore(_copyItem, _item)  })  node.removeChild(_item)}</code></pre><p>这样我们就完成了模版的渲染，scan函数会扫描模版对模版进行渲染</p><h2 id="解析数据-1"><a href="#解析数据-1" class="headerlink" title="解析数据"></a>解析数据</h2><p>解析了模版之后，我们就要研究如何进行数据解析了，这里我采用劫持数据的方法来进行。</p><h3 id="普通对象的劫持"><a href="#普通对象的劫持" class="headerlink" title="普通对象的劫持"></a>普通对象的劫持</h3><p>如何劫持数据？一般对数据的劫持都是通过Object.defineProperty方法进行的，先看一个小例子：</p><pre><code> var obj = {  name: &#39;mi&#39;}function observe(obj, key) {  let old = obj[key]  Object.defineProperty(obj, key, {    enumerable: true,    configurable: true,    get: function() {      return old    },    set: function(now) {      if(now !== old) {        console.log(`${old} ---&gt; ${now}`)        old = now      }    }  })}observe(obj, &#39;name&#39;)obj.name = &#39;mirone&#39;//输出结果：//&quot;mi ---&gt; mirone&quot;</code></pre><p>这样我们就通过object.defineProperty进行了数据劫持，如果我们想自定义劫持数据时发生的操作，只要添加一个回调函数参数即可：</p><pre><code>function observer(obj, k, callback) {  let old = obj[k]    Object.defineProperty(obj, k, {    enumerable: true,    configurable: true,    get: function() {      return old    },    set: function(now) {      if(now !== old) {        callback(old, now)      }      old = now    }  })}</code></pre><h3 id="嵌套对象的劫持"><a href="#嵌套对象的劫持" class="headerlink" title="嵌套对象的劫持"></a>嵌套对象的劫持</h3><p>对于对象中的对象，我么还需要多进行一个步骤，使用递归来劫持对象中的对象：</p><pre><code>//实现一个observeAllKey函数，劫持该对象的所有属性function observeAllKey(obj, callback) {  Object.keys(obj).forEach(function(key){    observer(obj, key, callback)  })}function observer(obj, k, callback) {  let old = obj[k]  if (old.toString() === &#39;[object Object]&#39;) {    observeAllKey(old, callback)  } else {    //...同前文，省略  }}</code></pre><h3 id="对象中数组的劫持"><a href="#对象中数组的劫持" class="headerlink" title="对象中数组的劫持"></a>对象中数组的劫持</h3><p>对于对象中的数组，我们使用重写数组的prototype的方法来劫持它</p><pre><code>function observeArray(arr, callback) {  const oam = [&#39;push&#39;, &#39;pop&#39;, &#39;shift&#39;, &#39;unshift&#39;, &#39;splice&#39;, &#39;sort&#39;, &#39;reverse&#39;]  const arrayProto = Array.prototype  const hackProto = Object.create(Array.prototype)  oam.forEach(function(method){    Object.defineProperty(hackProto, method, {      writable: true,      enumerable: true,      configurable: true,      value: function(...arg) {        let me = this        let old = arr.slice()        let now = arrayProto[method].call(me, ...arg)        callback(old, me, ...arg)        return now      },    })  })  arr.__proto__ = hackProto}</code></pre><p>写完劫持数组的函数后，将它添加进主函数：</p><pre><code>function observer(obj, k, callback) {  let old = obj[k]  if(Object.prototype.toString.call(old) === &#39;[object Array]&#39;) {    observeArray(old, callback)  } else if (old.toString() === &#39;[object Object]&#39;) {    observeAllKey(old, callback)  } else {    //...  }}</code></pre><h3 id="处理路径参数"><a href="#处理路径参数" class="headerlink" title="处理路径参数"></a>处理路径参数</h3><p>之前我们所有的方法都是面对单个key值的，回想一下我们的模版，有很多例如todos:todo:member这样的路径，我们应该允许传入一个路径数组，根据路径数组来监听指定的对象数据</p><pre><code>function observePath(obj, path, callback) {  let _path = obj  let _key  path.forEach((p, index) =&gt; {    if(parseInt(p) === p) {      p = parseInt(p)    }    if(index &lt; path.length - 1) {      _path = _path[p]    } else {      _key = p    }  })  observer(_path, _key, callback)}</code></pre><p>之后再将它添加进主函数：</p><pre><code>function observer(obj, k, callback) {  if(Object.prototype.toString.call(k) === &#39;[object Array]&#39;) {    observePath(obj, k, callback)  } else {    let old = obj[k]    if(Object.prototype.toString.call(old) === &#39;[object Array]&#39;) {      observeArray(old, callback)    } else if (old.toString() === &#39;[object Object]&#39;) {      observeAllKey(old, callback)    } else {      //...    }  }}</code></pre><p>这样，我们就完成了监听函数。</p><h2 id="多对一监视的实现"><a href="#多对一监视的实现" class="headerlink" title="多对一监视的实现"></a>多对一监视的实现</h2><p>有可能绑定某个数据结构的节点不止一个，有时我们需要修改完成时同时通知所有节点，那么我们还需要一个单独的模块负责通知所有节点，我们称之为Register模块，负责针对不同模块注册不同的一个或多个回调函数。</p><h3 id="监视者的实现"><a href="#监视者的实现" class="headerlink" title="监视者的实现"></a>监视者的实现</h3><pre><code>class Register {  constructor() {    //存放所有回调对象，回调对象由三个key组成：obj, key, fn，其中fn应该是一个数组，放着所有发生变化时要执行的回调函数    this.routes = []  }  //添加一个回调  regist(obj, k, fn) {    const _i = this.routes.find(function(el) {      if((el.key === k || el.key.toString() === k.toString())         &amp;&amp; Object.is(el.obj, obj)) {        return el      }    })    if(_i) {      //如果已经存在该obj和key组成的对象      _i.fn.push(fn)    } else {      //如果尚不存在      this.routes.push({        obj: obj,        key: k,        fn: [fn]      })    }  }  //解析结束时调用，绑定所有回调  build() {    this.routes.forEach((route) =&gt; {      observer(route.obj, route.key, route.fn)    })  }}</code></pre><h3 id="observer模块的修改"><a href="#observer模块的修改" class="headerlink" title="observer模块的修改"></a>observer模块的修改</h3><p>由于现在一个key可能对应多个回调操作了，需要对observer进行修改：</p><pre><code>function observer(obj, k, callback) {  //...与前文相同  if(now !== old) {    callback.forEach((fn) =&gt; {      fn(old, now)    })  }}function observerArray(arr, callback) {  //...与前文相同  //将原来的callback(old, this, ...arg)替换为  callback.forEach((fn) =&gt; {    fn(old, this, ...arg)  })}</code></pre><h2 id="绑定模版与数据-1"><a href="#绑定模版与数据-1" class="headerlink" title="绑定模版与数据"></a>绑定模版与数据</h2><p>现在，我们要在解析过程中添加对数据的监视了，还记得之前的parse系列函数吗？</p><pre><code>const register = new Register()function parseModel(node) {  if(node.getAttribute(&#39;data-model&#39;)) {    //...之前逻辑不变    register.regist(data, _data.path, function(old, now) {      if(node.tagName === &#39;INPUT&#39;) {        node.value = now      } else {        node.innerText = now      }      //添加console便于调试      console.log(`${old} ---&gt; ${now}`)    })  }}function parseClass(node) {  if(node.getAttribute(&#39;data-class&#39;)) {    //...    register.regist(data, _data.path, function(old, now) {      node.classList.remove(old)      node.classList.add(now)      console.log(`${old} ---&gt; ${now}`)    })  }}//当列表发生变化时，为了简单直接重新渲染了当前列表function parseList(node) {  //...  register.regist(data, _listData.path, () =&gt; {    while(node.firstChild) {      node.removeChild(node.firstChild)    }    const _listData = parseData(_list, node)    node.appendChild(_item)    _listData.data.forEach((_dataItem, index) =&gt; {      const _copyItem = _item.cloneNode(true)      if(node.path) {        _copyItem.path = node.path.slice()      }      if(!_copyItem.path) {        _copyItem.path = []      }      _copyItem.path.push(index)      scan(_copyItem)      node.insertBefore(_copyItem, _item)    })    node.removeChild(_item)  })}//当模版解析结束后绑定所有事件register.build()</code></pre><p>至此我们就基本完成了一个简单的MVVM，之后我进行了一点细微的细节优化，源码放在<a href="https://gist.github.com/Saul-Mirone/c356e18f0199482f7671c3442fe5c153" target="_blank" rel="noopener">我的Gist上</a>。各位也可以去<a href="https://link.zhihu.com/?target=https%3A//jsbin.com/juqeduf/edit%3Fconsole%2Coutput" target="_blank" rel="noopener">本教程的JSBin</a>查看效果。水平有限，欢迎吐槽。</p>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>understand &#39;this&#39; in JS</title>
      <link href="/post/js/this-in-js/"/>
      <url>/post/js/this-in-js/</url>
      <content type="html"><![CDATA[<h1 id="js中的this指向"><a href="#js中的this指向" class="headerlink" title="js中的this指向"></a>js中的this指向</h1><h2 id="理解this指向"><a href="#理解this指向" class="headerlink" title="理解this指向"></a>理解this指向</h2><h3 id="理解function中的this指向"><a href="#理解function中的this指向" class="headerlink" title="理解function中的this指向"></a>理解function中的this指向</h3><h4 id="对象中的function"><a href="#对象中的function" class="headerlink" title="对象中的function"></a>对象中的function</h4><p>example 1:</p><pre><code class="js">var parent = {    value:&#39;parent.value&#39;,    getValue(){        return this.value; // &#39;parent.value&#39;    },    child:{        value:&#39;child.value&#39;,        getValue(){            return this.value; // &#39;child.value&#39;        }    }}</code></pre><p>example 2.1:</p><pre><code class="js">var parent = {    value:&#39;parent.value&#39;,    getValue(){        return this.value; // &#39;parent.value&#39;    }}var child = {    value:&#39;child.value&#39;,    getValue(){        return this.value; // &#39;child.value&#39;    },    functionOfParent: parent.getValue // &#39;child.value&#39;}parent.child = child;parent.getValue()// &quot;parent.value&quot;parent.child.getValue()// &quot;child.value&quot;parent.child.functionOfParent()// &quot;child.value&quot;</code></pre><p>example 2.2:</p><p>use a common function in different objects</p><pre><code class="js">function commonGetValue(){    return this.value; // this is binded when this function is called}var parent = {    value:&#39;parent.value&#39;,    getValue: commonGetValue, // &#39;parent.value&#39;    child:{        value:&#39;child.value&#39;,        getValue: commonGetValue // &#39;child.value&#39;    }}parent.getValue()// &quot;parent.value&quot;parent.child.getValue()// &quot;child.value&quot;commonGetValue();// return undefined, or some value if &#39;this.value&#39; is assigned before, or throw an Exception because &#39;this&#39; may be null</code></pre><p><strong><code>对example 2.1 2.2的解释</code></strong> function中的this只是一个代词，只有在调用时，才知道this绑定的是谁</p><h3 id="理解箭头函数（Lambda函数）的this"><a href="#理解箭头函数（Lambda函数）的this" class="headerlink" title="理解箭头函数（Lambda函数）的this"></a>理解箭头函数（Lambda函数）的this</h3><p>关于js中的箭头函数，例如：<code>(arg0, arg1)=&gt;{ return arg0 + arg1; }</code>，可详见<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noopener">mozilla官方文档 &gt; JavaScript &gt; 箭头函数</a>。</p><p>特别需要指出，文档中说明：</p><blockquote><p><strong>箭头函数表达式</strong>不绑定自己的this，arguments，super或 new.target。这些函数表达式最适合用于非方法函数，并且它们不能用作构造函数。</p></blockquote><h4 id="不绑定this"><a href="#不绑定this" class="headerlink" title="不绑定this"></a>不绑定this</h4><p>箭头函数不会创建自己的<code>this</code>；它使用封闭执行上下文的<code>this</code>值。因此，在下面的代码中，传递给<code>setInterval</code>的函数内的<code>this</code>与封闭函数中的<code>this</code>值相同：</p><pre><code class="js">function Person(){  this.age = 0;  setInterval(() =&gt; {    this.age++; // |this| 正确地指向person 对象  }, 1000);}var p = new Person();</code></pre><p>由于 <code>this</code> 已经在词法层面完成了绑定，通过 <code>call()</code> 或 <code>apply()</code> 方法调用一个箭头函数时，只是传入了参数而已，不能绑定this，对 <code>this</code> 并没有什么影响：</p><pre><code>var adder = {  base : 1,  add : function(a) {    var f = v =&gt; v + this.base;    return f(a);  },  addThruCall: function(a) {    var f = v =&gt; v + this.base;    var b = {      base : 2    };    return f.call(b, a);  }};console.log(adder.add(1));         // 输出 2console.log(adder.addThruCall(1)); // 仍然输出 2（而不是3 ——译者注）</code></pre><h4 id="不绑定arguments"><a href="#不绑定arguments" class="headerlink" title="不绑定arguments"></a>不绑定arguments</h4><p>箭头函数不绑定<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/arguments" target="_blank" rel="noopener">Arguments 对象</a>。因此，在本示例中，参数只是在封闭范围内引用相同的名称：</p><pre><code>var arguments = 42;var arr = () =&gt; arguments;arr(); // 42function foo() {  var f = (i) =&gt; arguments[0]+i;   // foo函数的间接参数绑定  return f(2);}foo(1); // 3</code></pre><p>在大多数情况下，使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Rest_parameters" target="_blank" rel="noopener">剩余参数</a>是使用<code>arguments</code>对象的好选择。</p><pre><code>function foo() {   var f = (...args) =&gt; args[0];   return f(2); }foo(1); // 2</code></pre><blockquote><p>以上’不绑定this’和’不绑定arguments’两节整理自<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noopener">mozilla官方文档 &gt; JavaScript &gt; 箭头函数</a></p></blockquote><p>example 1:</p><pre><code class="js">var parent = {    value:&#39;parent.value&#39;,    getValue: () =&gt; this.value,    child:{        value:&#39;child.value&#39;,        getValue: () =&gt; this.value    }}parent.getValue();parent.child.getValue();// both return undefined (unless global &#39;this.value&#39; is assigned before)</code></pre><p>example 2.1:</p><pre><code class="js">var parent = {    value:&#39;parent.value&#39;,    getValue(){        return this.value; // &#39;parent.value&#39;    },    getValueThruArrow(){        return (()=&gt;this.value)(); // &#39;parent.value&#39;    }}var child = {    value:&#39;child.value&#39;,    getValue(){        return this.value; // &#39;child.value&#39;    },    functionOfParent: parent.getValue, // &#39;child.value&#39;    functionThruArrowOfParent: parent.getValueThruArrow // &#39;parent&#39;}parent.child = child;parent.getValue()// &quot;parent.value&quot;parent.getValueThruArrow()// &quot;parent.value&quot;parent.child.getValue()// &quot;child.value&quot;parent.child.functionOfParent()// &quot;child.value&quot;parent.child.functionThruArrowOfParent()// &quot;child.value&quot;</code></pre><p>example 2.2:</p><pre><code class="js">const commonArrowToGetValue = ()=&gt;this.value;function commonGetValueThruArrow(){    return (()=&gt;this.value)(); // this is binded when this function is called}var parent = {    value:&#39;parent.value&#39;,    arrowToGetValue: commonArrowToGetValue,    getValueThruArrow: commonGetValueThruArrow, // &#39;parent.value&#39;    child:{        value:&#39;child.value&#39;,        arrowToGetValue: commonArrowToGetValue,        getValueThruArrow: commonGetValueThruArrow // &#39;child.value&#39;    }}parent.getValueThruArrow()// &quot;parent.value&quot;parent.arrowToGetValue()// undefinedparent.child.getValueThruArrow()// &quot;child.value&quot;parent.child.arrowToGetValue()// undefinedcommonGetValueThruArrow()// undefinedcommonGetValueThruArrow()// undefined// &#39;undefined&#39; above means: return undefined, or some value if &#39;this.value&#39; is assigned before, or throw an Exception because &#39;this&#39; may be null</code></pre><p><strong><code>对example 2.1 2.2的解释</code></strong> 可以这样理解：箭头函数一旦创建，其中this指向便被确定。(…)=&gt;{…} 语法相对于创建了一个箭头函数，每次调用就会创建一个新的箭头函数，并在这时预先“绑定”其中的this。因此如果一个箭头函数放在一个function中，则每次调用这个function，则都会创建一个箭头函数，绑定这个function的this。</p><h2 id="改变this指向"><a href="#改变this指向" class="headerlink" title="改变this指向"></a>改变this指向</h2><p>js为Function类提供了三种方法，从而能够在调用该函数时同时设置this的指向：</p><ul><li>call</li><li>apply</li><li>bind</li></ul><p>这三种函数的使用方法为：</p><p>//TODO </p><pre><code class="js"></code></pre><h3 id="使用bind正确地创建函数别名"><a href="#使用bind正确地创建函数别名" class="headerlink" title="使用bind正确地创建函数别名"></a>使用bind正确地创建函数别名</h3><h4 id="需要特定this值的函数的别名"><a href="#需要特定this值的函数的别名" class="headerlink" title="需要特定this值的函数的别名"></a>需要特定this值的函数的别名</h4><pre><code class="js">const id = document.getElementById;id(&#39;someid&#39;).innerText=&quot;text&quot;;</code></pre><p>以上代码会throw an error:<code>Uncaught TypeError: Illegal invocation</code>.</p><p>因为document.getElementById调用时要求this是document. 以下是解决方法。</p><blockquote><p>解决方法引自 <a href="https://stackoverflow.com/a/18993841" target="_blank" rel="noopener">https://stackoverflow.com/a/18993841</a></p></blockquote><pre><code class="js">var id = document.getElemenyById.bind( document );</code></pre><h4 id="为需要特定this值的函数创建快捷调用"><a href="#为需要特定this值的函数创建快捷调用" class="headerlink" title="为需要特定this值的函数创建快捷调用"></a>为需要特定this值的函数创建快捷调用</h4><blockquote><p>引自 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Example:_Creating_shortcuts" target="_blank" rel="noopener">MDN web docs &gt; Function.prototype.bind() &gt; 快捷调用</a></p></blockquote><p><code>在你想要为一个需要特定的 this 值的函数创建一个捷径（shortcut）的时候，bind()</code> 方法也很好用。</p><p>你可以用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/slice" target="_blank" rel="noopener"><code>Array.prototype.slice</code></a> 来将一个类似于数组的对象（array-like object）转换成一个真正的数组，就拿它来举例子吧。你可以创建这样一个捷径：</p><pre><code>var slice = Array.prototype.slice;// ...slice.apply(arguments);</code></pre><p>用 <code>bind()</code>可以使这个过程变得简单。在下面这段代码里面，<code>slice</code> 是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype" target="_blank" rel="noopener"><code>Function.prototype</code></a> 的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply" target="_blank" rel="noopener"><code>apply()</code></a> 方法的绑定函数，并且将 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype" target="_blank" rel="noopener"><code>Array.prototype</code></a>的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/slice" target="_blank" rel="noopener"><code>slice()</code></a> 方法作为 <code>this</code> 的值。这意味着我们压根儿用不着上面那个 <code>apply()</code>调用了。</p><pre><code>// same as &quot;slice&quot; in the previous examplevar unboundSlice = Array.prototype.slice;var slice = Function.prototype.apply.bind(unboundSlice);// ...slice(arguments);</code></pre>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Constructor in ES5</title>
      <link href="/post/js/constructor-in-js5/"/>
      <url>/post/js/constructor-in-js5/</url>
      <content type="html"><![CDATA[<h1 id="构造与原型混合模式创建对象"><a href="#构造与原型混合模式创建对象" class="headerlink" title="构造与原型混合模式创建对象"></a>构造与原型混合模式创建对象</h1><p>我们结合原型模式在共享方法属性以及构造函数模式在实例方法属性方面的优势，使用以下的方法创建对象：</p><pre><code class="js">//我们希望每个stu拥有属于自己的name和age属性function Student(name, age) {  this.name = name;  this.age = age;}//所有的stu应该共享一个alertName()方法Student.prototype = {  constructor : Student,  alertName : function() {                alert(this.name);              }}var stu1 = new Student(&quot;Jim&quot;, 20);var stu2 = new Student(&quot;Tom&quot;, 21);stu1.alertName();  //Jim  实例属性stu2.alertName();  //Tom  实例属性alert(stu1.alertName == stu2.alertName);  //true  共享函数12345678910111213141516171819202122</code></pre><p>以上，在构造函数中定义实例属性，在原型中定义共享属性的模式，是目前使用最广泛的方式。通常情况下，我们都会默认使用这种方式来定义引用类型变量。</p>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>config Node.js</title>
      <link href="/post/Node-js/config/"/>
      <url>/post/Node-js/config/</url>
      <content type="html"><![CDATA[<h2 id="使用淘宝镜像"><a href="#使用淘宝镜像" class="headerlink" title="使用淘宝镜像"></a>使用<a href="npm.taobao.org/">淘宝镜像</a></h2><h2 id="windows-build-tools"><a href="#windows-build-tools" class="headerlink" title="windows-build-tools"></a>windows-build-tools</h2><pre><code class="bash">cnpm install --global --production windows-build-tools</code></pre><h2 id="Canvas"><a href="#Canvas" class="headerlink" title="Canvas"></a>Canvas</h2><p><a href="https://github.com/Automattic/node-canvas/wiki/Installation---Windows" target="_blank" rel="noopener">https://github.com/Automattic/node-canvas/wiki/Installation---Windows</a></p>]]></content>
      
      <categories>
          
          <category> Node.js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>C profiling tools</title>
      <link href="/post/c/profiling/tools/"/>
      <url>/post/c/profiling/tools/</url>
      <content type="html"><![CDATA[<p><a href="https://stackoverflow.com/questions/1777556/alternatives-to-gprof/1779343#1779343" target="_blank" rel="noopener">https://stackoverflow.com/questions/1777556/alternatives-to-gprof/1779343#1779343</a></p><p><a href="https://stackoverflow.com/questions/406760/whats-your-most-controversial-programming-opinion/1562802#1562802" target="_blank" rel="noopener">https://stackoverflow.com/questions/406760/whats-your-most-controversial-programming-opinion/1562802#1562802</a></p><p><a href="https://stackoverflow.com/questions/375913/how-can-i-profile-c-code-running-in-linux/378024#378024" target="_blank" rel="noopener">https://stackoverflow.com/questions/375913/how-can-i-profile-c-code-running-in-linux/378024#378024</a></p><p><a href="https://stackoverflow.com/questions/926266/performance-optimization-strategies-of-last-resort/927773#927773" target="_blank" rel="noopener">https://stackoverflow.com/questions/926266/performance-optimization-strategies-of-last-resort/927773#927773</a></p><p><a href="http://blog.csdn.net/stanjiang2010/article/details/5655143" target="_blank" rel="noopener">http://blog.csdn.net/stanjiang2010/article/details/5655143</a></p>]]></content>
      
      <categories>
          
          <category> c </category>
          
          <category> profiling </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>C &gt; compile C on Win64 using MinGW-W64</title>
      <link href="/post/c/MinGW-W64/"/>
      <url>/post/c/MinGW-W64/</url>
      <content type="html"><![CDATA[<h1 id="MinGW-W64"><a href="#MinGW-W64" class="headerlink" title="MinGW-W64"></a>MinGW-W64</h1><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p><a href="http://mingw-w64.org/doku.php/download/mingw-builds" target="_blank" rel="noopener">Download Link</a></p><p>Architecture : x86_64</p><p>Exception : sjlj</p><p><a href="http://rsreland.net/archives/1760" target="_blank" rel="noopener">http://rsreland.net/archives/1760</a></p>]]></content>
      
      <categories>
          
          <category> c </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>1 introduction of Vue.js</title>
      <link href="/post/js/vue/1-Introduction/"/>
      <url>/post/js/vue/1-Introduction/</url>
      <content type="html"><![CDATA[<h3 id="绑定数据的方法"><a href="#绑定数据的方法" class="headerlink" title="绑定数据的方法"></a>绑定数据的方法</h3><h4 id="文本插值"><a href="#文本插值" class="headerlink" title="文本插值"></a>文本插值</h4><pre><code class="html">&lt;div id=&quot;app&quot;&gt;  {{ message }}&lt;/div&gt;</code></pre><pre><code class="javascript">var app = new Vue({  el: &#39;#app&#39;,  data: {    message: &#39;Hello Vue!&#39;  }})</code></pre><p>如果有<code>v-once</code>指令，则绑定不会更新</p><pre><code class="html">&lt;span v-once&gt;这个将不会改变: {{ msg }}&lt;/span&gt;</code></pre><p>双大括号会将数据解释为普通文本，而非 HTML 代码。为了输出真正的 HTML，你需要使用 <code>v-html</code> 指令：</p><pre><code class="html">&lt;p&gt;Using mustaches: {{ rawHtml }}&lt;/p&gt;&lt;p&gt;Using v-html directive: &lt;span v-html=&quot;rawHtml&quot;&gt;&lt;/span&gt;&lt;/p&gt;</code></pre><h4 id="v-bind-domproperty-”property”"><a href="#v-bind-domproperty-”property”" class="headerlink" title="v-bind:domproperty=”property”"></a>v-bind:domproperty=”property”</h4><pre><code class="html">&lt;div id=&quot;app-2&quot;&gt;  &lt;span v-bind:title=&quot;message&quot;&gt;    鼠标悬停几秒钟查看此处动态绑定的提示信息！  &lt;/span&gt;&lt;/div&gt;</code></pre><pre><code class="javascript">var app2 = new Vue({  el: &#39;#app-2&#39;,  data: {    message: &#39;页面加载于 &#39; + new Date().toLocaleString()  }})</code></pre><h5 id="v-bind-缩写"><a href="#v-bind-缩写" class="headerlink" title="v-bind 缩写"></a>v-bind 缩写</h5><pre><code class="html">&lt;!-- 完整语法 --&gt;&lt;a v-bind:href=&quot;url&quot;&gt;...&lt;/a&gt;&lt;!-- 缩写 --&gt;&lt;a :href=&quot;url&quot;&gt;...&lt;/a&gt;</code></pre><h5 id="v-bind-class"><a href="#v-bind-class" class="headerlink" title="v-bind:class"></a>v-bind:class</h5><h6 id="对象语法"><a href="#对象语法" class="headerlink" title="对象语法"></a>对象语法</h6><blockquote><p> see <a href="https://cn.vuejs.org/v2/guide/class-and-style.html#%E5%AF%B9%E8%B1%A1%E8%AF%AD%E6%B3%95" target="_blank" rel="noopener">here</a></p></blockquote><h6 id="数组语法"><a href="#数组语法" class="headerlink" title="数组语法"></a>数组语法</h6><blockquote><p> see <a href="https://cn.vuejs.org/v2/guide/class-and-style.html#%E6%95%B0%E7%BB%84%E8%AF%AD%E6%B3%95" target="_blank" rel="noopener">here</a></p></blockquote><h4 id="v-if-”property”"><a href="#v-if-”property”" class="headerlink" title="v-if=”property”"></a>v-if=”property”</h4><h4 id="v-for-”element-in-array”"><a href="#v-for-”element-in-array”" class="headerlink" title="v-for=”element in array”"></a>v-for=”element in array”</h4><h4 id="v-on-click-”functionName”"><a href="#v-on-click-”functionName”" class="headerlink" title="v-on:click=”functionName”"></a>v-on:click=”functionName”</h4><pre><code class="html">&lt;div id=&quot;app-5&quot;&gt;  &lt;p&gt;{{ message }}&lt;/p&gt;  &lt;button v-on:click=&quot;reverseMessage&quot;&gt;逆转消息&lt;/button&gt;&lt;/div&gt;</code></pre><pre><code class="javascript">var app5 = new Vue({  el: &#39;#app-5&#39;,  data: {    message: &#39;Hello Vue.js!&#39;  },  methods: {    reverseMessage: function () {      this.message = this.message.split(&#39;&#39;).reverse().join(&#39;&#39;)    }  }})</code></pre><h5 id="v-on-缩写"><a href="#v-on-缩写" class="headerlink" title="v-on 缩写"></a>v-on 缩写</h5><pre><code class="html">&lt;!-- 完整语法 --&gt;&lt;a v-on:click=&quot;doSomething&quot;&gt;...&lt;/a&gt;&lt;!-- 缩写 --&gt;&lt;a @click=&quot;doSomething&quot;&gt;...&lt;/a&gt;</code></pre><h4 id="v-model-”property”"><a href="#v-model-”property”" class="headerlink" title="v-model=”property”"></a>v-model=”property”</h4><p>能轻松实现表单输入和应用状态之间的双向绑定。</p><pre><code class="html">&lt;div id=&quot;app-6&quot;&gt;  &lt;p&gt;{{ message }}&lt;/p&gt;  &lt;input v-model=&quot;message&quot;&gt;&lt;/div&gt;</code></pre><pre><code class="javascript">var app6 = new Vue({  el: &#39;#app-6&#39;,  data: {    message: &#39;Hello Vue!&#39;  }})</code></pre><h3 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h3><pre><code class="html">&lt;div id=&quot;example&quot;&gt;  &lt;p&gt;Original message: &quot;{{ message }}&quot;&lt;/p&gt;  &lt;p&gt;Computed reversed message: &quot;{{ reversedMessage }}&quot;&lt;/p&gt;&lt;/div&gt;</code></pre><pre><code class="javascript">var vm = new Vue({  el: &#39;#example&#39;,  data: {    message: &#39;Hello&#39;  },  computed: {    // 计算属性的 getter    reversedMessage: function () {      // `this` 指向 vm 实例      return this.message.split(&#39;&#39;).reverse().join(&#39;&#39;)    }  }})</code></pre><p>计算属性默认只有 getter ，不过在需要时你也可以提供一个 setter ：</p><pre><code class="javascript">// ...computed: {  fullName: {    // getter    get: function () {      return this.firstName + &#39; &#39; + this.lastName    },    // setter    set: function (newValue) {      var names = newValue.split(&#39; &#39;)      this.firstName = names[0]      this.lastName = names[names.length - 1]    }  }}// ...</code></pre><h3 id="侦听器"><a href="#侦听器" class="headerlink" title="侦听器"></a>侦听器</h3><p><code>watch</code></p><p> Vue 通过 <code>watch</code> 选项提供了一个更通用的方法，来响应数据的变化。当需要在数据变化时执行异步或开销较大的操作时，这个方式是最有用的。</p><pre><code class="html">&lt;div id=&quot;watch-example&quot;&gt;  &lt;p&gt;    Ask a yes/no question:    &lt;input v-model=&quot;question&quot;&gt;  &lt;/p&gt;  &lt;p&gt;{{ answer }}&lt;/p&gt;&lt;/div&gt;</code></pre><pre><code class="html">&lt;!-- 因为 AJAX 库和通用工具的生态已经相当丰富，Vue 核心代码没有重复 --&gt;&lt;!-- 提供这些功能以保持精简。这也可以让你自由选择自己更熟悉的工具。 --&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/axios@0.12.0/dist/axios.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/lodash@4.13.1/lodash.min.js&quot;&gt;&lt;/script&gt;&lt;script&gt;var watchExampleVM = new Vue({  el: &#39;#watch-example&#39;,  data: {    question: &#39;&#39;,    answer: &#39;I cannot give you an answer until you ask a question!&#39;  },  watch: {    // 如果 `question` 发生改变，这个函数就会运行    question: function (newQuestion) {      this.answer = &#39;Waiting for you to stop typing...&#39;      this.getAnswer()    }  },  methods: {    // `_.debounce` 是一个通过 Lodash 限制操作频率的函数。    // 在这个例子中，我们希望限制访问 yesno.wtf/api 的频率    // AJAX 请求直到用户输入完毕才会发出。想要了解更多关于    // `_.debounce` 函数 (及其近亲 `_.throttle`) 的知识，    // 请参考：https://lodash.com/docs#debounce    getAnswer: _.debounce(      function () {        if (this.question.indexOf(&#39;?&#39;) === -1) {          this.answer = &#39;Questions usually contain a question mark. ;-)&#39;          return        }        this.answer = &#39;Thinking...&#39;        var vm = this        axios.get(&#39;https://yesno.wtf/api&#39;)          .then(function (response) {            vm.answer = _.capitalize(response.data.answer)          })          .catch(function (error) {            vm.answer = &#39;Error! Could not reach the API. &#39; + error          })      },      // 这是我们为判定用户停止输入等待的毫秒数      500    )  }})&lt;/script&gt;</code></pre><p>在这个示例中，使用 <code>watch</code> 选项允许我们执行异步操作 (访问一个 API)，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。</p><p>除了 <code>watch</code> 选项之外，您还可以使用命令式的 <a href="https://cn.vuejs.org/v2/api/#vm-watch" target="_blank" rel="noopener">vm.$watch API</a>。</p>]]></content>
      
      <categories>
          
          <category> js </category>
          
          <category> vue </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>unicode in JS</title>
      <link href="/post/js/unicode/"/>
      <url>/post/js/unicode/</url>
      <content type="html"><![CDATA[<h2 id="Unicode-Terms"><a href="#Unicode-Terms" class="headerlink" title="Unicode Terms"></a>Unicode Terms</h2><p><img src="https://dmitripavlutin.com/content/images/2016/09/Unicode-terms.png" alt="Unicode basic terms"></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://dmitripavlutin.com/what-every-javascript-developer-should-know-about-unicode" target="_blank" rel="noopener">What every JavaScript developer should know about Unicode</a></p><h2 id="Common-Unicode-Examples"><a href="#Common-Unicode-Examples" class="headerlink" title="Common Unicode Examples"></a>Common Unicode Examples</h2><p>run JavaScript in <a href="repl.it">repl.it</a></p><p><img src="https://dmitripavlutin.com/content/images/2016/10/Unicode.png" alt="Unicode escape sequences JavaScript"></p><ol><li>Regular</li></ol><pre><code>Green</code></pre><ol start="2"><li>surrogate pairs</li></ol><pre><code>\u{1F607}\uD83D\uDE07😇</code></pre><pre><code>\u{1D6C0}&#39;\ud835\udec0&#39;𝛀</code></pre><pre><code class="javascript">var niceEmoticon = &#39;\u{1F607}&#39;;  console.log(niceEmoticon);   // =&gt; &#39;😇&#39;  var spNiceEmoticon = &#39;\uD83D\uDE07&#39;  console.log(spNiceEmoticon); // =&gt; &#39;😇&#39;  console.log(niceEmoticon === spNiceEmoticon); // =&gt; true</code></pre><ol start="3"><li>combining marks</li></ol><pre><code>cafe\u0327\u0301cafe\u0301café</code></pre><pre><code class="javascript">var drink = &#39;cafe\u0301&#39;;  console.log(drink);                    // =&gt; &#39;café&#39;  console.log(drink.length);             // =&gt; 5  console.log(drink.normalize())         // =&gt; &#39;café&#39;  console.log(drink.normalize().length); // =&gt; 4  </code></pre><pre><code class="javascript">var drink = &#39;cafe\u0327\u0301&#39;;  console.log(drink);                    // =&gt; &#39;cafȩ́&#39;  console.log(drink.length);             // =&gt; 6  console.log(drink.normalize());        // =&gt; &#39;cafȩ́&#39;  console.log(drink.normalize().length); // =&gt; 5  </code></pre>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>11 Categories, Tags, &amp; Custom Taxonomies</title>
      <link href="/post/wordpress/develop/theme/Basics/11-Categories-Tags-Custom-Taxonomies/"/>
      <url>/post/wordpress/develop/theme/Basics/11-Categories-Tags-Custom-Taxonomies/</url>
      <content type="html"><![CDATA[<h1 id="Categories-Tags-amp-Custom-Taxonomies"><a href="#Categories-Tags-amp-Custom-Taxonomies" class="headerlink" title="Categories, Tags, &amp; Custom Taxonomies"></a>Categories, Tags, &amp; Custom Taxonomies</h1><p><a href="https://developer.wordpress.org/themes/basics/categories-tags-custom-taxonomies/#" target="_blank" rel="noopener">https://developer.wordpress.org/themes/basics/categories-tags-custom-taxonomies/#</a></p>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
          <category> theme </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>10 Conditional Tags</title>
      <link href="/post/wordpress/develop/theme/Basics/10-Conditional-Tags/"/>
      <url>/post/wordpress/develop/theme/Basics/10-Conditional-Tags/</url>
      <content type="html"><![CDATA[<h1 id="Conditional-Tags"><a href="#Conditional-Tags" class="headerlink" title="Conditional Tags"></a>Conditional Tags</h1><p>You can use <code>Conditional Tags</code> with <code>if else</code> to alter the display of content depending on the conditions that the current page matches.</p><p>For example:</p><pre><code class="php">if ( is_user_logged_in() ):    echo &#39;Welcome, registered user!&#39;;else:    echo &#39;Welcome, visitor!&#39;;endif;</code></pre><p>For a Conditional Tag to modify your data, the information must already have been retrieved from your database, i.e. the query must have already run. If you use a Conditional Tag before there is data, there’ll be nothing to ask the if/else statement about.</p><p>It’s important to note that WordPress loads <code>functions.php</code> before the query is run, so if you simply include a Conditional Tag in that file, it won’t work.</p><p><strong>Two ways to implement Conditional Tags:</strong></p><ul><li>place it in a Template File</li><li>create a function out of it in <code>functions.php</code>that hooks into an action/filter that triggers at a later point</li></ul><h2 id="Common-Conditional-Tags"><a href="#Common-Conditional-Tags" class="headerlink" title="Common Conditional Tags"></a>Common Conditional Tags</h2><p>Below are some common conditional tags for:</p><h3 id="The-Main-Page"><a href="#The-Main-Page" class="headerlink" title="The Main Page"></a>The Main Page</h3><p><a href="https://developer.wordpress.org/reference/functions/is_home/" target="_blank" rel="noopener">is_home()</a></p><p>This condition returns true when the main blog page is being displayed, usually in standard reverse chronological order. If your home page has been set to a Static Page instead, then this will only prove true on the page which you set as the “Posts page” in Settings &gt; Reading.</p><h3 id="The-Front-Page"><a href="#The-Front-Page" class="headerlink" title="The Front Page"></a>The Front Page</h3><p><a href="https://developer.wordpress.org/reference/functions/is_front_page/" target="_blank" rel="noopener">is_front_page()</a></p><p>This condition returns true when the front page of the site is displayed, regardless of whether it is set to show posts or a static page.</p><p>Returns true when:</p><ol><li>the main blog page is being displayed <strong>and</strong></li><li>the Settings &gt; Reading -&gt; <em>Front page displays</em> option is set to <em>Your latest posts</em></li></ol><p><strong>OR</strong></p><ol><li>when Settings &gt; Reading -&gt; <em>Front page displays</em> is set to <em>A static page</em> <strong>and</strong></li><li>the Front Page value is the current Page being displayed.</li></ol><h3 id="The-Administration-Panels"><a href="#The-Administration-Panels" class="headerlink" title="The Administration Panels"></a>The Administration Panels</h3><p><a href="https://developer.wordpress.org/reference/functions/is_admin/" target="_blank" rel="noopener">is_admin()</a></p><p>This condition returns true when the Dashboard or the administration panels are being displayed.</p><h3 id="A-Single-Post-Page"><a href="#A-Single-Post-Page" class="headerlink" title="A Single Post Page"></a>A Single Post Page</h3><p><a href="https://developer.wordpress.org/reference/functions/is_single/" target="_blank" rel="noopener">is_single()</a></p><p>Returns true when any single Post (or attachment, or custom Post Type) is being displayed. This condition returns false if you are on a page.</p><p><strong>is_single( ’17’ )</strong></p><p><a href="https://developer.wordpress.org/reference/functions/is_single/" target="_blank" rel="noopener">is_single()</a> can also check for certain posts by ID and other parameters. The above example proves true when Post 17 is being displayed as a single Post.</p><p><strong>is_single( ‘Irish Stew’ )</strong></p><p>Parameters include Post titles, as well. In this case, it proves true when the Post with title “Irish Stew” is being displayed as a single Post.</p><p><strong>is_single( ‘beef-stew’ )</strong></p><p>Proves true when the Post with Post Slug “beef-stew” is being displayed as a single Post.</p><p><strong>is_single( array( 17, ‘beef-stew’, ‘Irish Stew’ ) )</strong></p><p>Returns true when the single post being displayed is either post ID 17, or the post_name is “beef-stew”, or the post_title is “Irish Stew”.</p><p><strong>is_single( array( 17, 19, 1, 11 ) )</strong></p><p>Returns true when the single post being displayed is either post ID = 17, post ID = 19, post ID = 1 or post ID = 11.</p><p><strong>is_single( array( ‘beef-stew’, ‘pea-soup’, ‘chilli’ ) )</strong></p><p>Returns true when the single post being displayed is either the post_name “beef-stew”, post_name “pea-soup” or post_name “chilli”.</p><p><strong>is_single( array( ‘Beef Stew’, ‘Pea Soup’, ‘Chilli’ ) )</strong></p><p>Returns true when the single post being displayed is either the post_title is “Beef Stew”, post_title is “Pea Soup” or post_title is “Chilli”.</p><p>Note: This function does not distinguish between the post ID, post title, or post name. A post named “17” would be displayed if a post ID of 17 was requested. Presumably the same holds for a post with the slug “17”.</p><h3 id="A-Single-Post-Page-or-Attachment"><a href="#A-Single-Post-Page-or-Attachment" class="headerlink" title="A Single Post, Page, or Attachment"></a>A Single Post, Page, or Attachment</h3><p><strong>is_singular()</strong></p><p>Returns true for any is_single, is_page, and is_attachment. It does allow testing for post types.</p><h3 id="A-Sticky-Post"><a href="#A-Sticky-Post" class="headerlink" title="A Sticky Post"></a>A Sticky Post</h3><p><a href="https://developer.wordpress.org/reference/functions/is_sticky/" target="_blank" rel="noopener">is_sticky()</a></p><p>Returns true if the “Stick this post to the front page” check box has been checked for the current post. In this example, no post ID argument is given, so the post ID for the Loop post is used.</p><p><strong>is_sticky( ’17’ )</strong><br>Returns true when Post 17 is considered a sticky post.</p><h3 id="A-Post-Type"><a href="#A-Post-Type" class="headerlink" title="A Post Type"></a>A Post Type</h3><p><a href="https://developer.wordpress.org/reference/functions/get_post_type/" target="_blank" rel="noopener">get_post_type()</a></p><p>You can test to see if the current post is of a certain type by including <a href="https://developer.wordpress.org/reference/functions/get_post_type/" target="_blank" rel="noopener">get_post_type()</a> in your conditional. It’s not really a conditional tag, but it returns the <a href="https://developer.wordpress.org/reference/functions/register_post_type/" target="_blank" rel="noopener">registered post type</a> of the current post.</p><p><strong>if ( ‘book’ == get_post_type() ) …</strong></p><p><a href="https://developer.wordpress.org/reference/functions/post_type_exists/" target="_blank" rel="noopener">post_type_exists()</a></p><p>Returns true if a given post type is a registered post type. This does not test if a post is a certain post_type. Note: This function replaces a function called is_post_type which existed briefly in 3.0 development.</p><h3 id="A-Post-Type-is-Hierarchical"><a href="#A-Post-Type-is-Hierarchical" class="headerlink" title="A Post Type is Hierarchical"></a>A Post Type is Hierarchical</h3><p><a href="https://developer.wordpress.org/reference/functions/is_post_type_hierarchical/" target="_blank" rel="noopener">is_post_type_hierarchical( $post_type )</a></p><p>Returns true if this $post_type has been set with hierarchical support when registered.</p><p><strong>is_post_type_hierarchical( ‘book’ )</strong></p><p>Returns true if the book post type was registered as having support for hierarchical.</p><p><a href="https://developer.wordpress.org/themes/basics/conditional-tags/#top" target="_blank" rel="noopener">Top ↑</a></p><h3 id="A-Post-Type-Archive"><a href="#A-Post-Type-Archive" class="headerlink" title="A Post Type Archive"></a>A Post Type Archive</h3><p><a href="https://developer.wordpress.org/reference/functions/is_post_type_archive/" target="_blank" rel="noopener">is_post_type_archive()</a></p><p>Returns true on any post type archive.</p><p><strong>is_post_type_archive( $post_type )</strong></p><p>Returns true if on a post type archive page that matches $post_type (can be a single post type or an array of post types).</p><p>To turn on post type archives, use ‘has_archive’ =&gt; true, when <a href="https://make.wordpress.org/docs/plugin-developer-handbook/9-custom-post-types-and-taxonomies/registering-custom-post-types/" target="_blank" rel="noopener">registering the post type</a>.</p><h3 id="A-Comments-Popup"><a href="#A-Comments-Popup" class="headerlink" title="A Comments Popup"></a>A Comments Popup</h3><p><a href="https://developer.wordpress.org/reference/functions/is_comments_popup/" target="_blank" rel="noopener">is_comments_popup()</a></p><p>When in Comments Popup window.</p><h3 id="Any-Page-Containing-Posts"><a href="#Any-Page-Containing-Posts" class="headerlink" title="Any Page Containing Posts"></a>Any Page Containing Posts</h3><p><a href="https://developer.wordpress.org/reference/functions/comments_open/" target="_blank" rel="noopener">comments_open()</a></p><p>When comments are allowed for the current Post being processed in the <a href="https://make.wordpress.org/docs/theme-developer-handbook/part-one-theme-basics/the-loop/" target="_blank" rel="noopener">WordPress Loop</a>.</p><p><a href="https://developer.wordpress.org/reference/functions/pings_open/" target="_blank" rel="noopener">pings_open()</a></p><p>When pings are allowed for the current Post being processed in the WordPress Loop.</p><h3 id="A-“PAGE”-Page"><a href="#A-“PAGE”-Page" class="headerlink" title="A “PAGE” Page"></a>A “PAGE” Page</h3><p>This section refers to WordPress <a href="https://make.wordpress.org/docs/theme-developer-handbook/part-one-theme-basics/page-templates/" target="_blank" rel="noopener">Pages</a>, not any generic webpage from your blog, or in other words to the built in <em>post_type</em> ‘page’.</p><p><a href="https://developer.wordpress.org/reference/functions/is_page/" target="_blank" rel="noopener">is_page()</a></p><p>When any Page is being displayed.</p><p><strong>is_page( ’42’ )</strong></p><p>When Page 42 (ID) is being displayed.</p><p><strong>is_page( ‘About Me And Joe’ )</strong></p><p>When the Page with a <em>post_title</em> of “About Me And Joe” is being displayed.</p><p><strong>is_page( ‘about-me’ )</strong></p><p>When the Page with a <em>post_name</em> (slug) of “about-me” is being displayed.</p><p><strong>is_page( array( 42, ‘about-me’, ‘About Me And Joe’ ) )</strong></p><p>Returns true when the Pages displayed is either <em>post ID</em>= 42, or <em>post_name</em> is “about-me”, or <em>post_title</em> is “About Me And Joe”.</p><p><strong>is_page( array( 42, 54, 6 ) )</strong></p><p>Returns true when the Pages displayed is either <em>post ID</em>= 42, or <em>post ID</em> = 54, or <em>post ID</em> = 6.</p><h4 id="Testing-for-Paginated-Pages"><a href="#Testing-for-Paginated-Pages" class="headerlink" title="Testing for Paginated Pages"></a>Testing for Paginated Pages</h4><p>You can use this code to check whether you’re on the nth page in a Post or Page that has been divided into pages using the <code>&lt;!--nextpage--&gt;</code> QuickTag. This can be useful, for example, if you wish to display meta-data only on the first page of a post divided into several pages.</p><h5 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h5><pre><code class="php">&lt;?php  $paged = $wp_query-&gt;get( &#39;page&#39; );  if ( ! $paged || $paged &lt; 2 ) {    // This is not a paginated page (or it&#39;s simply the first page of a paginated page/post)    } else {    // This is a paginated page.} ?&gt;</code></pre><h5 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h5><pre><code class="php">&lt;?php $paged = get_query_var( &#39;page&#39; ) ? get_query_var( &#39;page&#39; ) : false;    if ( $paged == false )  {    // This is not a paginated page (or it&#39;s simply the first page of a paginated page/post) }  else  {    // This is a paginated page.    }?&gt;</code></pre><h4 id="Testing-for-Sub-Pages"><a href="#Testing-for-Sub-Pages" class="headerlink" title="Testing for Sub-Pages"></a>Testing for Sub-Pages</h4><p>There is <strong>no</strong> <code>is_subpage()</code> function, but you can test this with a little code:</p><h5 id="Snippet-1"><a href="#Snippet-1" class="headerlink" title="Snippet 1"></a>Snippet 1</h5><pre><code class="php">&lt;?php  global $post; // if outside the loop   if ( is_page() &amp;&amp; $post-&gt;post_parent ) {    // This is a subpage          } else {    // This is not a subpage    }?&gt;</code></pre><p>You can create your own is_subpage() function using the code in Snippet 2. Add it to your functions.php file. It tests for a parent page in the same way as Snippet 1, but will return the ID of the page parent if there is one, or false if there isn’t.</p><h5 id="Snippet-2"><a href="#Snippet-2" class="headerlink" title="Snippet 2"></a>Snippet 2</h5><pre><code class="php">function is_subpage() {    global $post;                              // load details about this page    if ( is_page() &amp;&amp; $post-&gt;post_parent ) {   // test to see if the page has a parent        return $post-&gt;post_parent;             // return the ID of the parent post    } else {                                   // there is no parent so ...        return false;                          // ... the answer to the question is false    }}</code></pre><p>It is advisable to use a function like that in Snippet 2, rather than using the simple test like Snippet 1, if you plan to test for sub-pages frequently.</p><p>To test if the parent of a page is a specific page, for instance “About” (page id pid 2 by default), we can use the tests in Snippet 3. These tests check to see if we are looking at the page in question, as well as if we are looking at any child pages. This is useful for setting variables specific to different sections of a web site, so a different banner image, or a different heading.</p><h5 id="Snippet-3"><a href="#Snippet-3" class="headerlink" title="Snippet 3"></a>Snippet 3</h5><pre><code class="php">&lt;?php if ( is_page( &#39;about&#39; ) || &#39;2&#39; == $post-&gt;post_parent ) {    // the page is &quot;About&quot;, or the parent of the page is &quot;About&quot;    $bannerimg = &#39;about.jpg&#39;;} elseif ( is_page( &#39;learning&#39; ) || &#39;56&#39; == $post-&gt;post_parent ) {    $bannerimg = &#39;teaching.jpg&#39;;} elseif ( is_page( &#39;admissions&#39; ) || &#39;15&#39; == $post-&gt;post_parent ) {    $bannerimg = &#39;admissions.jpg&#39;;} else {    $bannerimg = &#39;home.jpg&#39;; // just in case we are at an unclassified page, perhaps the home page}?&gt;</code></pre><p>Snippet 4 is a function that allows you to carry out the tests above more easily. This function will return true if we are looking at the page in question (so “About”) or one of its sub pages (so a page with a parent with ID “2”).</p><h5 id="Snippet-4"><a href="#Snippet-4" class="headerlink" title="Snippet 4"></a>Snippet 4</h5><pre><code class="php">function is_tree( $pid ) {      // $pid = The ID of the page we&#39;re looking for pages underneath    global $post;               // load details about this page    if ( is_page($pid) )        return true;            // we&#39;re at the page or at a sub page    $anc = get_post_ancestors( $post-&gt;ID );    foreach ( $anc as $ancestor ) {        if( is_page() &amp;&amp; $ancestor == $pid ) {            return true;        }    }    return false;  // we aren&#39;t at the page, and the page is not an ancestor}</code></pre><p>Add Snippet 4 to your functions.php file, and call is_tree( ‘id’ ) to see if the current page is the page, or is a sub page of the page. In Snippet 3, is_tree( ‘2’ ) would replace “is_page( ‘about’ ) || ‘2’ == $post-&gt;post_parent” inside the first if tag.</p><p>Note that if you have more than one level of pages the parent page is the one directly above and not the one at the very top of the hierarchy.</p><h3 id="Is-a-Page-Template"><a href="#Is-a-Page-Template" class="headerlink" title="Is a Page Template"></a>Is a Page Template</h3><p>Allows you to determine whether or not you are in a page template or if a specific page template is being used.</p><p><a href="https://developer.wordpress.org/reference/functions/is_page_template/" target="_blank" rel="noopener">is_page_template()</a></p><p>Is a Page Template being used?</p><p><strong>is_page_template( ‘about.php’ )</strong></p><p>Is Page Template ‘about’ being used? Note that unlike other conditionals, if you want to specify a particular Page Template, you need to use the filename, such as about.php or my_page_template.php.</p><p>Note: if the file is in a subdirectory you must include this as well. Meaning that this should be the filepath in relation to your theme as well as the filename, for example ‘page-templates/about.php’.</p><h3 id="A-Category-Page"><a href="#A-Category-Page" class="headerlink" title="A Category Page"></a>A Category Page</h3><p><a href="https://developer.wordpress.org/reference/functions/is_category/" target="_blank" rel="noopener">is_category()</a></p><p>When a Category archive page is being displayed.</p><p><strong>is_category( ‘9’ )</strong></p><p>When the archive page for Category 9 is being displayed.</p><p><strong>is_category( ‘Stinky Cheeses’ )</strong></p><p>When the archive page for the Category with Name “Stinky Cheeses” is being displayed.</p><p><strong>is_category( ‘blue-cheese’ )</strong></p><p>When the archive page for the Category with Category Slug “blue-cheese” is being displayed.</p><p><strong>is_category( array( 9, ‘blue-cheese’, ‘Stinky Cheeses’ ) )</strong></p><p>Returns true when the category of posts being displayed is either term_ID 9, or slug “blue-cheese”, or name “Stinky Cheeses”.</p><p><strong>in_category( ‘5’ )</strong></p><p>Returns true if the current post is in the specified category id.</p><p><strong>in_category( array( 1, 2, 3 ) )</strong></p><p>Returns true if the current post is in either category 1, 2, or 3.</p><p><strong>! in_category( array( 4, 5, 6 ) )</strong></p><p>Returns true if the current post is NOT in either category 4, 5, or 6. Note the ! at the beginning.</p><p>Note: Be sure to check your spelling when testing. There’s a big difference between “is” or “in”.</p><p>See also <a href="https://developer.wordpress.org/reference/functions/is_archive/" target="_blank" rel="noopener">is_archive()</a> and <a href="https://make.wordpress.org/docs/theme-developer-handbook/part-one-theme-basics/template-hierarchy/#category" target="_blank" rel="noopener">Category Templates</a>.</p><h3 id="A-Tag-Page"><a href="#A-Tag-Page" class="headerlink" title="A Tag Page"></a>A Tag Page</h3><p><a href="https://developer.wordpress.org/reference/functions/is_tag/" target="_blank" rel="noopener">is_tag()</a></p><p>When any Tag archive page is being displayed.</p><p><strong>is_tag( ‘mild’ )</strong></p><p>When the archive page for tag with the slug of ‘mild’ is being displayed.</p><p><strong>is_tag( array( ‘sharp’, ‘mild’, ‘extreme’ ) )</strong></p><p>Returns true when the tag archive being displayed has a slug of either “sharp”, “mild”, or “extreme”.</p><p><strong>has_tag()</strong></p><p>When the current post has a tag. Must be used inside The Loop.</p><p><strong>has_tag( ‘mild’ )</strong></p><p>When the current post has the tag ‘mild’.</p><p><strong>has_tag( array( ‘sharp’, ‘mild’, ‘extreme’ ) )</strong></p><p>When the current post has any of the tags in the array.</p><p>See also <a href="https://developer.wordpress.org/reference/functions/is_archive/" target="_blank" rel="noopener">is_archive()</a> and <a href="https://make.wordpress.org/docs/theme-developer-handbook/part-one-theme-basics/template-hierarchy/#tag" target="_blank" rel="noopener">Tag Templates</a>.</p><h3 id="A-Taxonomy-Page"><a href="#A-Taxonomy-Page" class="headerlink" title="A Taxonomy Page"></a>A Taxonomy Page</h3><p><a href="https://developer.wordpress.org/reference/functions/is_tax/" target="_blank" rel="noopener">is_tax()</a></p><p>When any Taxonomy archive page is being displayed.</p><p><strong>is_tax( ‘flavor’ )</strong></p><p>When a Taxonomy archive page for the flavor taxonomy is being displayed.</p><p><strong>is_tax( ‘flavor’, ‘mild’)</strong></p><p>When the archive page for the flavor taxonomy with the slug of ‘mild’ is being displayed.</p><p><strong>is_tax( ‘flavor’, array( ‘sharp’, ‘mild’, ‘extreme’ ) )</strong></p><p>Returns true when the flavor taxonomy archive being displayed has a slug of either “sharp”, “mild”, or “extreme”.</p><p><strong>has_term()</strong></p><p>Check if the current post has any of given terms. The first parameter should be an empty string. It expects a taxonomy slug/name as a second parameter.</p><p><strong>has_term( ‘green’, ‘color’ )</strong></p><p>When the current post has the term ‘green’ from taxonomy ‘color’.</p><p><strong>has_term( array( ‘green’, ‘orange’, ‘blue’ ), ‘color’ )</strong></p><p>When the current post has any of the terms in the array.</p><p>See also <a href="https://developer.wordpress.org/reference/functions/is_archive/" target="_blank" rel="noopener">is_archive()</a>.</p><h3 id="A-Registered-Taxonomy"><a href="#A-Registered-Taxonomy" class="headerlink" title="A Registered Taxonomy"></a>A Registered Taxonomy</h3><p><a href="https://developer.wordpress.org/reference/functions/taxonomy_exists/" target="_blank" rel="noopener">taxonomy_exists()</a></p><p>When a particular taxonomy is registered via <a href="https://developer.wordpress.org/reference/functions/register_taxonomy/" target="_blank" rel="noopener">register_taxonomy()</a>. Formerly <a href="https://developer.wordpress.org/reference/functions/is_taxonomy/" target="_blank" rel="noopener">is_taxonomy()</a>, which was deprecated in Version 3.0</p><h3 id="An-Author-Page"><a href="#An-Author-Page" class="headerlink" title="An Author Page"></a>An Author Page</h3><p><a href="https://developer.wordpress.org/reference/functions/is_author/" target="_blank" rel="noopener">is_author()</a></p><p>When any Author page is being displayed.</p><p><strong>is_author( ‘4’ )</strong></p><p>When the archive page for Author number (ID) 4 is being displayed.</p><p><strong>is_author( ‘Vivian’ )</strong></p><p>When the archive page for the Author with Nickname “Vivian” is being displayed.</p><p><strong>is_author( ‘john-jones’ )</strong></p><p>When the archive page for the Author with Nicename “john-jones” is being displayed.</p><p><strong>is_author( array( 4, ‘john-jones’, ‘Vivian’ ) )</strong></p><p>When the archive page for the author is either user ID 4, or user_nicename “john-jones”, or nickname “Vivian”.</p><p>See also <a href="https://developer.wordpress.org/reference/functions/is_archive/" target="_blank" rel="noopener">is_archive()</a> and <a href="https://make.wordpress.org/docs/theme-developer-handbook/part-one-theme-basics/template-hierarchy/#author-display" target="_blank" rel="noopener">Author Templates</a>.</p><h3 id="A-Multi-author-Site"><a href="#A-Multi-author-Site" class="headerlink" title="A Multi-author Site"></a>A Multi-author Site</h3><p><a href="https://developer.wordpress.org/reference/functions/is_multi_author/" target="_blank" rel="noopener">is_multi_author()</a></p><p>When more than one author has published posts for a site. Available with Version 3.2.</p><h3 id="A-Date-Page"><a href="#A-Date-Page" class="headerlink" title="A Date Page"></a>A Date Page</h3><p><a href="https://developer.wordpress.org/reference/functions/is_date/" target="_blank" rel="noopener">is_date()</a></p><p>When any date-based archive page is being displayed (i.e. a monthly, yearly, daily or time-based archive).</p><p><a href="https://developer.wordpress.org/reference/functions/is_year/" target="_blank" rel="noopener">is_year()</a></p><p>When a yearly archive is being displayed.</p><p><a href="https://developer.wordpress.org/reference/functions/is_month/" target="_blank" rel="noopener">is_month()</a></p><p>When a monthly archive is being displayed.</p><p><a href="https://developer.wordpress.org/reference/functions/is_day/" target="_blank" rel="noopener">is_day()</a></p><p>When a daily archive is being displayed.</p><p><a href="https://developer.wordpress.org/reference/functions/is_time/" target="_blank" rel="noopener">is_time()</a></p><p>When an hourly, “minutely”, or “secondly” archive is being displayed.</p><p><a href="https://developer.wordpress.org/reference/functions/is_new_day/" target="_blank" rel="noopener">is_new_day()</a></p><p>If today is a new day according to post date. Should be used inside the loop.</p><h3 id="Any-Archive-Page"><a href="#Any-Archive-Page" class="headerlink" title="Any Archive Page"></a>Any Archive Page</h3><p><a href="https://developer.wordpress.org/reference/functions/is_archive/" target="_blank" rel="noopener">is_archive()</a></p><p>When any type of Archive page is being displayed. Category, Tag, Author and Date based pages are all types of Archives.</p><h3 id="A-Search-Result-Page"><a href="#A-Search-Result-Page" class="headerlink" title="A Search Result Page"></a>A Search Result Page</h3><p><a href="https://developer.wordpress.org/reference/functions/is_search/" target="_blank" rel="noopener">is_search()</a></p><p>When a search result page archive is being displayed.</p><h3 id="A-404-Not-Found-Page"><a href="#A-404-Not-Found-Page" class="headerlink" title="A 404 Not Found Page"></a>A 404 Not Found Page</h3><p><a href="https://developer.wordpress.org/reference/functions/is_404/" target="_blank" rel="noopener">is_404()</a></p><p>When a page displays after an “HTTP 404: Not Found” error occurs.</p><h3 id="An-Attachment"><a href="#An-Attachment" class="headerlink" title="An Attachment"></a>An Attachment</h3><p><a href="https://developer.wordpress.org/reference/functions/is_attachment/" target="_blank" rel="noopener">is_attachment()</a></p><p>When an attachment document to a post or Page is being displayed. An attachment is an image or other file uploaded through the post editor’s upload utility. Attachments can be displayed on their own ‘page’ or template.</p><h3 id="A-Single-Page-Single-Post-or-Attachment"><a href="#A-Single-Page-Single-Post-or-Attachment" class="headerlink" title="A Single Page, Single Post or Attachment"></a>A Single Page, Single Post or Attachment</h3><p><a href="https://developer.wordpress.org/reference/functions/is_singular/" target="_blank" rel="noopener">is_singular()</a></p><p>When any of the following return true: <code>is_single()</code>, <code>is_page()</code> or <code>is_attachment()</code>.</p><p><strong>is_singular( ‘book’ )</strong></p><p>True when viewing a post of the Custom Post Types book.</p><p><strong>is_singular( array( ‘newspaper’, ‘book’ ) )</strong></p><p>True when viewing a post of the Custom Post Types newspaper or book.</p><h3 id="A-Syndication"><a href="#A-Syndication" class="headerlink" title="A Syndication"></a>A Syndication</h3><p><a href="https://developer.wordpress.org/reference/functions/is_feed/" target="_blank" rel="noopener">is_feed()</a></p><p>When the site requested is a Syndication. This tag is not typically used by users; it is used internally by WordPress and is available for Plugin Developers.</p><h3 id="A-Trackback"><a href="#A-Trackback" class="headerlink" title="A Trackback"></a>A Trackback</h3><p><a href="https://developer.wordpress.org/reference/functions/is_trackback/" target="_blank" rel="noopener">is_trackback()</a></p><p>When the site requested is WordPress’ hook into its Trackback engine. This tag is not typically used by users; it is used internally by WordPress and is available for Plugin Developers.</p><h3 id="A-Preview"><a href="#A-Preview" class="headerlink" title="A Preview"></a>A Preview</h3><p><a href="https://developer.wordpress.org/reference/functions/is_preview/" target="_blank" rel="noopener">is_preview()</a></p><p>When a single post being displayed is viewed in Draft mode.</p><h3 id="Has-An-Excerpt"><a href="#Has-An-Excerpt" class="headerlink" title="Has An Excerpt"></a>Has An Excerpt</h3><p><a href="https://developer.wordpress.org/reference/functions/has_excerpt/" target="_blank" rel="noopener">has_excerpt()</a></p><p>When the current post has an excerpt</p><p><strong>has_excerpt( 42 )</strong></p><p>When the post 42 (ID) has an excerpt.</p><pre><code class="php">&lt;?php // Get $post if you&#39;re inside a function global $post;   if ( empty( $post-&gt;post_excerpt ) ) {    // This post has no excerpt   } else {    // This post has excerpt  }?&gt;</code></pre><p><strong>Other use</strong><br>When you need to hide the auto displayed excerpt and only display your post’s excerpts.</p><pre><code class="php">&lt;?php  if ( ! has_excerpt() ) {      echo &#39;&#39;;  } else {      the_excerpt();  }?&gt;</code></pre><p>Replace auto excerpt for a text or code.</p><pre><code class="php">&lt;?php if ( ! has_excerpt() ) {    // you text or code} ?&gt;</code></pre><h3 id="Has-A-Nav-Menu-Assigned"><a href="#Has-A-Nav-Menu-Assigned" class="headerlink" title="Has A Nav Menu Assigned"></a>Has A Nav Menu Assigned</h3><p><a href="https://developer.wordpress.org/reference/functions/has_nav_menu/" target="_blank" rel="noopener">has_nav_menu()</a></p><p>Whether a registered nav menu location has a menu assigned</p><p>Returns: assigned(true) or not(false)</p><h3 id="Inside-The-Loop"><a href="#Inside-The-Loop" class="headerlink" title="Inside The Loop"></a>Inside The Loop</h3><p><a href="https://developer.wordpress.org/reference/functions/in_the_loop/" target="_blank" rel="noopener">in_the_loop()</a></p><p>Check to see if you are “inside the loop”. Useful for plugin authors, this conditional returns as true when you are inside the loop.</p><h3 id="Is-Sidebar-Active"><a href="#Is-Sidebar-Active" class="headerlink" title="Is Sidebar Active"></a>Is Sidebar Active</h3><p><a href="https://developer.wordpress.org/reference/functions/is_active_sidebar/" target="_blank" rel="noopener">is_active_sidebar()</a></p><p>Check to see if a given sidebar is active (in use). Returns true if the sidebar (identified by name, id, or number) is in use, otherwise the function returns false.</p><h3 id="Part-of-a-Network-Multisite"><a href="#Part-of-a-Network-Multisite" class="headerlink" title="Part of a Network (Multisite)"></a>Part of a Network (Multisite)</h3><p><a href="https://developer.wordpress.org/reference/functions/is_multisite/" target="_blank" rel="noopener">is_multisite()</a></p><p>Check to see whether the current site is in a WordPress MultiSite install.</p><h3 id="Main-Site-Multisite"><a href="#Main-Site-Multisite" class="headerlink" title="Main Site (Multisite)"></a>Main Site (Multisite)</h3><p><a href="https://developer.wordpress.org/reference/functions/is_main_site/" target="_blank" rel="noopener">is_main_site()</a></p><p>Determines if a site is the main site in a network.</p><h3 id="Admin-of-a-Network-Multisite"><a href="#Admin-of-a-Network-Multisite" class="headerlink" title="Admin of a Network (Multisite)"></a>Admin of a Network (Multisite)</h3><p><a href="https://developer.wordpress.org/reference/functions/is_super_admin/" target="_blank" rel="noopener">is_super_admin()</a></p><p>Determines if a user is a network (super) admin.</p><h3 id="An-Active-Plugin"><a href="#An-Active-Plugin" class="headerlink" title="An Active Plugin"></a>An Active Plugin</h3><p><a href="https://developer.wordpress.org/reference/functions/is_plugin_active/" target="_blank" rel="noopener">is_plugin_active()</a></p><p>Checks if a plugin is activated.</p><h3 id="A-Child-Theme"><a href="#A-Child-Theme" class="headerlink" title="A Child Theme"></a>A Child Theme</h3><p><a href="https://developer.wordpress.org/reference/functions/is_child_theme/" target="_blank" rel="noopener">is_child_theme()</a></p><p>Checks whether a child theme is in use.</p><h3 id="Theme-supports-a-feature"><a href="#Theme-supports-a-feature" class="headerlink" title="Theme supports a feature"></a>Theme supports a feature</h3><p><a href="https://developer.wordpress.org/reference/functions/current_theme_supports/" target="_blank" rel="noopener">current_theme_supports()</a></p><p>Checks if various theme features exist.</p><h2 id="Working-Examples"><a href="#Working-Examples" class="headerlink" title="Working Examples"></a>Working Examples</h2><h3 id="Single-Post"><a href="#Single-Post" class="headerlink" title="Single Post"></a>Single Post</h3><p>use <code>is_single()</code> to display something specific only when viewing a single post page.</p><pre><code class="php">if ( is_single() ) {   echo &#39;This is just one of many fabulous entries in the &#39; . single_cat_title() . &#39; category!&#39;;}</code></pre><p>use Conditional Tags in the Loop. Choose to display content or excerpt in index.php when this is a display single post or the home page.</p><pre><code class="php">if ( is_home() || is_single() ) {   the_content();}else {   the_excerpt();}</code></pre><p>When you need display a code or element, in a place that is NOT the home page.</p><pre><code class="php+HTML">&lt;?php if ( ! is_home() ) { //Insert your markup ...}?&gt;</code></pre><h3 id="Check-for-Multiple-Conditionals"><a href="#Check-for-Multiple-Conditionals" class="headerlink" title="Check for Multiple Conditionals"></a>Check for Multiple Conditionals</h3><pre><code class="php">// Check to see if 2 conditionals are metif ( is_single() || is_page() ) ) {    // If it&#39;s a single post or a single page, do something special}if ( is_archive() &amp;&amp; ! is_category( &#39;nachos&#39; ) ) {    // If it&#39;s an archive page for any category EXCEPT nachos, do something special}</code></pre><pre><code class="php+HTML">// Check to see if 3 conditionals are metif ( $query-&gt;is_main_query() &amp;&amp; is_post_type_archive( &#39;products&#39; ) &amp;&amp; ! is_admin() ) {    // If it&#39;s the main query on a custom post type archive for Products    // And if we&#39;re not in the WordPress admin, then do something special}if ( is_post_type_archive( &#39;movies&#39; ) || is_tax( &#39;genre&#39; ) || is_tax( &#39;actor&#39; )  ) {    // If it&#39;s a custom post type archive for Movies    // Or it&#39;s a taxonomy archive for Genre    // Or it&#39;s a taxonomy archive for Actor, do something special}&lt;h3&gt;Date Based Differences&lt;/h3&gt;If someone browses our site by date, let&#39;s distinguish posts in different years by using different colors:&lt;?php // this starts The Loopif ( have_posts() ) : while ( have_posts() ) : the_post(); ?&gt;&lt;h2 id=&quot;post-&lt;?php the_ID(); ?&gt;&quot;&gt;&lt;a title=&quot;Permanent Link to &lt;?php the_title(); ?&gt;&quot; href=&quot;&lt;?php the_permalink() ?&gt;&quot; rel=&quot;bookmark&quot;&gt;&lt;?php the_title(); ?&gt;&lt;/a&gt;&lt;/h2&gt;&lt;small&gt;&lt;?php the_time(&#39;F jS, Y&#39;) ?&gt; by &lt;?php the_author() ?&gt;&lt;/small&gt;&lt;?php// are we showing a date-based archive?if ( is_date() ) { if ( date( &#39;Y&#39; ) != get_the_date( &#39;Y&#39; ) ) { // this post was written in a previous year // so let&#39;s style the content using the &quot;oldentry&quot; class echo &#39;&lt;div class=&quot;oldentry&quot;&gt;&#39;; } else { echo &#39;&lt;div class=&quot;entry&quot;&gt;&#39;; }} else { echo &#39;&lt;div class=&quot;entry&quot;&gt;&#39;;}the_content( &#39;Read the rest of this entry »&#39; );?&gt;&lt;/div&gt;</code></pre><h3 id="Variable-Sidebar-Content"><a href="#Variable-Sidebar-Content" class="headerlink" title="Variable Sidebar Content"></a>Variable Sidebar Content</h3><p>This example will display different content in your sidebar based on what page the reader is currently viewing.</p><pre><code class="php+HTML">&lt;div id=&quot;sidebar&quot;&gt;&lt;?php // let&#39;s generate info appropriate to the page being displayedif ( is_home() ) { // we&#39;re on the home page, so let&#39;s show a list of all top-level categories    wp_list_categories( &#39;optionall=0&amp;sort_column=name&amp;list=1&amp;children=0&#39; );} elseif ( is_category() ) { // we&#39;re looking at a single category view, so let&#39;s show _all_ the categories    wp_list_categories( &#39;optionall=1&amp;sort_column=name&amp;list=1&amp;children=1&amp;hierarchical=1&#39; )} elseif ( is_single() ) { // we&#39;re looking at a single page, so let&#39;s not show anything in the sidebar} elseif ( is_page() ) { // we&#39;re looking at a static page. Which one? if ( is_page( &#39;About&#39; ) ) { // our about page. echo &quot;This is my about page!&quot;; } elseif ( is_page( &#39;Colophon&#39; ) ) { echo &quot;This is my colophon page, running on WordPress &quot; . bloginfo( &#39;version&#39; ) . &quot;&quot;; } else { // catch-all for other pages echo &quot;Vote for Pedro!&quot;; }} else { // catch-all for everything else (archives, searches, 404s, etc) echo &quot;Pedro offers you his protection.&quot;;} // That&#39;s all, folks!?&gt;&lt;/div&gt;</code></pre><h3 id="Helpful-404-Page"><a href="#Helpful-404-Page" class="headerlink" title="Helpful 404 Page"></a>Helpful 404 Page</h3><p>The Creating an Error 404 Page article [TODO NEED Link to this?] has an example of using the PHP conditional function <code>isset()</code> in the Writing Friendly Messages section.</p><h3 id="In-the-theme’s-footer-php-file"><a href="#In-the-theme’s-footer-php-file" class="headerlink" title="In the theme’s footer.php file"></a>In the theme’s footer.php file</h3><p>At times queries performed in other templates such as sidebar.php may corrupt certain conditional tags. For instance, in header.php a conditional tag works properly but doesn’t work in a theme’s footer.php. The trick is to put <code>wp_reset_query</code> before the conditional test in the footer. For example:</p><pre><code class="php">&lt;?php wp_reset_query(); if ( is_page( &#39;2&#39; ) ) {  echo &#39;This is page 2!&#39;; }?&gt;</code></pre><h2 id="Conditional-Tags-Index"><a href="#Conditional-Tags-Index" class="headerlink" title="Conditional Tags Index"></a>Conditional Tags Index</h2><blockquote><p>The latest version is <a href="https://developer.wordpress.org/themes/basics/conditional-tags/#conditional-tags-index" target="_blank" rel="noopener">here</a>. </p></blockquote><ul><li><a href="https://codex.wordpress.org/Conditional_Tags#Any_Page_Containing_Posts" target="_blank" rel="noopener">comments_open</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Tag_Page" target="_blank" rel="noopener">has_tag</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Taxonomy_Page" target="_blank" rel="noopener">has_term</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Category_Page" target="_blank" rel="noopener">in_category</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_404_Not_Found_Page" target="_blank" rel="noopener">is_404</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#The_Administration_Panels" target="_blank" rel="noopener">is_admin</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#Any_Archive_Page" target="_blank" rel="noopener">is_archive</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#An_Attachment" target="_blank" rel="noopener">is_attachment</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#An_Author_Page" target="_blank" rel="noopener">is_author</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Category_Page" target="_blank" rel="noopener">is_category</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Child_Theme" target="_blank" rel="noopener">is_child_theme</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Comments_Popup" target="_blank" rel="noopener">is_comments_popup</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Date_Page" target="_blank" rel="noopener">is_date</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Date_Page" target="_blank" rel="noopener">is_day</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Syndication" target="_blank" rel="noopener">is_feed</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#The_Front_Page" target="_blank" rel="noopener">is_front_page</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#The_Main_Page" target="_blank" rel="noopener">is_home</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Date_Page" target="_blank" rel="noopener">is_month</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Multi-author_Site" target="_blank" rel="noopener">is_multi_author</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#Part_of_a_network" target="_blank" rel="noopener">is_multisite</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#Main_Site_.28Multisite.29" target="_blank" rel="noopener">is_main_site</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_PAGE_Page" target="_blank" rel="noopener">is_page</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#Is_a_Page_Template" target="_blank" rel="noopener">is_page_template</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Paged_Page" target="_blank" rel="noopener">is_paged</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Preview" target="_blank" rel="noopener">is_preview</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#An_RTL_Language" target="_blank" rel="noopener">is_rtl</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Search_Result_Page" target="_blank" rel="noopener">is_search</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Single_Post_Page" target="_blank" rel="noopener">is_single</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Single_Page.2C_Single_Post_or_Attachment" target="_blank" rel="noopener">is_singular</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Sticky_Post" target="_blank" rel="noopener">is_sticky</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#Admin_of_a_network" target="_blank" rel="noopener">is_super_admin</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Tag_Page" target="_blank" rel="noopener">is_tag</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Taxonomy_Page" target="_blank" rel="noopener">is_tax</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Date_Page" target="_blank" rel="noopener">is_time</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Trackback" target="_blank" rel="noopener">is_trackback</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#A_Date_Page" target="_blank" rel="noopener">is_year</a></li><li><a href="https://codex.wordpress.org/Conditional_Tags#Any_Page_Containing_Posts" target="_blank" rel="noopener">pings_open</a></li></ul><h3 id="Function-Reference"><a href="#Function-Reference" class="headerlink" title="Function Reference"></a>Function Reference</h3><ul><li>Function: <a href="https://developer.wordpress.org/reference/functions/comments_open/" target="_blank" rel="noopener">comments_open()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_404/" target="_blank" rel="noopener">is_404()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_admin/" target="_blank" rel="noopener">is_admin()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_admin_bar_showing/" target="_blank" rel="noopener">is_admin_bar_showing()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_archive/" target="_blank" rel="noopener">is_archive()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_attachment/" target="_blank" rel="noopener">is_attachment()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_author/" target="_blank" rel="noopener">is_author()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_category/" target="_blank" rel="noopener">is_category()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_comments_popup/" target="_blank" rel="noopener">is_comments_popup()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_date/" target="_blank" rel="noopener">is_date()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_day/" target="_blank" rel="noopener">is_day()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_feed/" target="_blank" rel="noopener">is_feed()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_front_page/" target="_blank" rel="noopener">is_front_page()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_home/" target="_blank" rel="noopener">is_home()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_local_attachment/" target="_blank" rel="noopener">is_local_attachment()</a></li><li>Function: <a href="https://codex.wordpress.org/Function_Reference/is_main_query" target="_blank" rel="noopener">is_main_query</a></li><li>Function: <a href="https://codex.wordpress.org/Function_Reference/is_multi_author" target="_blank" rel="noopener">is_multi_author</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_month/" target="_blank" rel="noopener">is_month()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_new_day/" target="_blank" rel="noopener">is_new_day()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_page/" target="_blank" rel="noopener">is_page()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_page_template/" target="_blank" rel="noopener">is_page_template()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_paged/" target="_blank" rel="noopener">is_paged()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_plugin_active/" target="_blank" rel="noopener">is_plugin_active()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_plugin_active_for_network/" target="_blank" rel="noopener">is_plugin_active_for_network()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_plugin_inactive/" target="_blank" rel="noopener">is_plugin_inactive()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_plugin_page/" target="_blank" rel="noopener">is_plugin_page()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_post_type_archive/" target="_blank" rel="noopener">is_post_type_archive()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_preview/" target="_blank" rel="noopener">is_preview()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_search/" target="_blank" rel="noopener">is_search()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_single/" target="_blank" rel="noopener">is_single()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_singular/" target="_blank" rel="noopener">is_singular()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_sticky/" target="_blank" rel="noopener">is_sticky()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_tag/" target="_blank" rel="noopener">is_tag()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_tax/" target="_blank" rel="noopener">is_tax()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_taxonomy_hierarchical/" target="_blank" rel="noopener">is_taxonomy_hierarchical()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_time/" target="_blank" rel="noopener">is_time()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_trackback/" target="_blank" rel="noopener">is_trackback()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_year/" target="_blank" rel="noopener">is_year()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/in_category/" target="_blank" rel="noopener">in_category()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/in_the_loop/" target="_blank" rel="noopener">in_the_loop()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_active_sidebar/" target="_blank" rel="noopener">is_active_sidebar()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_active_widget/" target="_blank" rel="noopener">is_active_widget()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_blog_installed/" target="_blank" rel="noopener">is_blog_installed()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_rtl/" target="_blank" rel="noopener">is_rtl()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_dynamic_sidebar/" target="_blank" rel="noopener">is_dynamic_sidebar()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/is_user_logged_in/" target="_blank" rel="noopener">is_user_logged_in()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/has_excerpt/" target="_blank" rel="noopener">has_excerpt()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/has_post_thumbnail/" target="_blank" rel="noopener">has_post_thumbnail()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/has_tag/" target="_blank" rel="noopener">has_tag()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/pings_open/" target="_blank" rel="noopener">pings_open()</a></li><li>Function: <a href="https://codex.wordpress.org/Function_Reference/email_exists" target="_blank" rel="noopener">email exists()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/post_type_exists/" target="_blank" rel="noopener">post_type_exists()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/taxonomy_exists/" target="_blank" rel="noopener">taxonomy_exists()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/term_exists/" target="_blank" rel="noopener">term_exists()</a></li><li>Function: <a href="https://codex.wordpress.org/Function_Reference/username_exists" target="_blank" rel="noopener">username exists()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/wp_attachment_is_image/" target="_blank" rel="noopener">wp_attachment_is_image()</a></li><li>Function: <a href="https://developer.wordpress.org/reference/functions/wp_script_is/" target="_blank" rel="noopener">wp_script_is()</a></li></ul>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
          <category> theme </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>09 Including CSS &amp; JavaScript</title>
      <link href="/post/wordpress/develop/theme/Basics/09-Including-CSS-JavaScript/"/>
      <url>/post/wordpress/develop/theme/Basics/09-Including-CSS-JavaScript/</url>
      <content type="html"><![CDATA[<h1 id="Including-CSS-amp-JavaScript"><a href="#Including-CSS-amp-JavaScript" class="headerlink" title="Including CSS &amp; JavaScript"></a>Including CSS &amp; JavaScript</h1><p>When you’re creating your theme, you may want to create additional stylesheets or JavaScript files.</p><p>However, remember that a WordPress website will not just have your theme active, it will also be using many different plugins.</p><p>So that everything works harmoniously, it’s important that theme and plugins load scripts and stylesheets using the standard WordPress method. This will ensure the site remains efficient and that there are no incompatibility issues.</p><h2 id="Enqueuing-Scripts-and-Styles"><a href="#Enqueuing-Scripts-and-Styles" class="headerlink" title="Enqueuing Scripts and Styles"></a>Enqueuing Scripts and Styles</h2><p>The proper way to add scripts and styles to your theme is <strong>to enqueue them in the <code>functions.php</code> files using <code>wp_enqueue_script()</code> or <code>wp_enqueue_style()</code></strong>.</p><blockquote><p>WordPress includes a number of JavaScript files as part of the software package, including commonly used libraries such as jQuery. Before adding your own JavaScript, <a href="https://developer.wordpress.org/themes/basics/including-css-javascript/#default-scripts-included-and-registered-by-wordpress" target="_blank" rel="noopener">check to see if you can make use of an included library</a>.</p></blockquote><h3 id="Stylesheets"><a href="#Stylesheets" class="headerlink" title="Stylesheets"></a>Stylesheets</h3><p>Rather then loading the stylesheet in your <code>header.php</code> file, you should load it in using <code>wp_enqueue_style</code>. In order to load your main stylesheet, you can enqueue it in <code>functions.php</code></p><p>To enqueue <code>style.css</code></p><pre><code class="php">wp_enqueue_style( &#39;style&#39;, get_stylesheet_uri() );</code></pre><p>The basic function for enqueuing a style is:</p><pre><code class="php">wp_enqueue_style( $handle, $src, $deps, $ver, $media );</code></pre><p>parameters:</p><ul><li><strong>$handle</strong> is simply the name of the stylesheet.</li><li><strong>$src</strong> is where it is located.</li></ul><p>The rest of the parameters are optional.</p><ul><li><strong>$deps</strong> refers to whether or not this stylesheet is dependent on another stylesheet. If this is set, this stylesheet will not be loaded unless its dependent stylesheet is loaded first.</li><li><strong>$ver</strong> sets the version number.</li><li><strong>$media</strong> can specify which type of media to load this stylesheet in, such as ‘all’, ‘screen’, ‘print’ or ‘handheld.’</li></ul><p>So if you wanted to load a stylesheet named “slider.css” in a folder named “CSS” in you theme’s root directory, you would use:</p><pre><code class="php">wp_enqueue_style( &#39;slider&#39;, get_template_directory_uri() . &#39;/css/slider.css&#39;,false,&#39;1.1&#39;,&#39;all&#39;);</code></pre><h3 id="Scripts"><a href="#Scripts" class="headerlink" title="Scripts"></a>Scripts</h3><p>Any additional JavaScript files required by a theme should be loaded using <code>wp_enqueue_script</code>.</p><p><code>wp_enqueue_script</code> uses a similar syntax to <code>wp_enqueue_style</code>.</p><p>Enqueue your script:</p><pre><code class="php">wp_enqueue_script( $handle, $src, $deps, $ver, $in_footer);</code></pre><ul><li><strong>$in_footer</strong> is a boolean parameter (true/false) that allows you to place your scripts in the footer of your HTML document rather then in the header, so that it does not delay the loading of the DOM tree.</li></ul><p>Your enqueue function may look like this:</p><pre><code class="php">wp_enqueue_script( &#39;script&#39;, get_template_directory_uri() . &#39;/js/script.js&#39;, array ( &#39;jquery&#39; ), 1.1, true);</code></pre><h3 id="The-Comment-Reply-Script"><a href="#The-Comment-Reply-Script" class="headerlink" title="The Comment Reply Script"></a>The Comment Reply Script</h3><p>WordPress comments have quite a bit of functionality in them right out of the box, including threaded comments and enhanced comment forms. In order for comments to work properly, they require some JavaScript. However, since there are certain options that need to be defined within this JavaScript, <strong>the comment-reply script should be added to every theme that uses comments</strong>.</p><p>The proper way to include comment reply is to use conditional tags to check if certain conditions exist, so that the script isn’t being loaded unnecessarily. For instance, you can only load scripts on single post pages using <code>is_singular</code>, and check to make sure that “Enable threaded comments” is selected by the user. So you can set up a function like:</p><pre><code class="php">if ( is_singular() &amp;&amp; comments_open() &amp;&amp; get_option( &#39;thread_comments&#39; ) ) {    wp_enqueue_script( &#39;comment-reply&#39; );}</code></pre><p>If comments are enabled by the user, and we are on a post page, then the comment reply script will be loaded. Otherwise, it will not.</p><h3 id="Combining-Enqueue-Functions"><a href="#Combining-Enqueue-Functions" class="headerlink" title="Combining Enqueue Functions"></a>Combining Enqueue Functions</h3><p>It is best to combine all enqueued scripts and styles into a single function, and then call them using the <code>wp_enqueue_scripts</code> action. This function and action should be located somewhere below the initial setup (performed above).</p><pre><code class="php">function add_theme_scripts() {  wp_enqueue_style( &#39;style&#39;, get_stylesheet_uri() );  wp_enqueue_style( &#39;slider&#39;, get_template_directory_uri() . &#39;/css/slider.css&#39;, array(), &#39;1.1&#39;, &#39;all&#39;);  wp_enqueue_script( &#39;script&#39;, get_template_directory_uri() . &#39;/js/script.js&#39;, array ( &#39;jquery&#39; ), 1.1, true);    if ( is_singular() &amp;&amp; comments_open() &amp;&amp; get_option( &#39;thread_comments&#39; ) ) {      wp_enqueue_script( &#39;comment-reply&#39; );    }}add_action( &#39;wp_enqueue_scripts&#39;, &#39;add_theme_scripts&#39; );</code></pre><h2 id="Default-Scripts-Included-and-Registered-by-WordPress"><a href="#Default-Scripts-Included-and-Registered-by-WordPress" class="headerlink" title="Default Scripts Included and Registered by WordPress"></a>Default Scripts Included and Registered by WordPress</h2><p>By default, WordPress includes many popular scripts commonly used by web developers, as well as the scripts used by WordPress itself. Some of them are listed <a href="https://developer.wordpress.org/themes/basics/including-css-javascript/#default-scripts-included-and-registered-by-wordpress" target="_blank" rel="noopener">here</a></p>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
          <category> theme </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linking Theme Files &amp; Directories</title>
      <link href="/post/wordpress/develop/theme/Basics/08-Linking-Theme-Files-Directories/"/>
      <url>/post/wordpress/develop/theme/Basics/08-Linking-Theme-Files-Directories/</url>
      <content type="html"><![CDATA[<h1 id="Linking-Theme-Files-amp-Directories"><a href="#Linking-Theme-Files-amp-Directories" class="headerlink" title="Linking Theme Files &amp; Directories"></a>Linking Theme Files &amp; Directories</h1><h2 id="Linking-to-Core-Theme-Files"><a href="#Linking-to-Core-Theme-Files" class="headerlink" title="Linking to Core Theme Files"></a>Linking to Core Theme Files</h2><h3 id="Use-Template-Tags"><a href="#Use-Template-Tags" class="headerlink" title="Use Template Tags"></a>Use Template Tags</h3><p>As you’ve learned, WordPress themes are built from a number of different template files. At the very least this will usually include a <code>sidebar.php</code>, <code>header.php</code>and <code>footer.php</code>. These are called using <code>Template Tags</code>, for example:</p><ul><li><a href="https://developer.wordpress.org/reference/functions/get_header/" target="_blank" rel="noopener">get_header()</a>;</li><li><a href="https://developer.wordpress.org/reference/functions/get_footer/" target="_blank" rel="noopener">get_footer()</a>;</li><li><a href="https://developer.wordpress.org/reference/functions/get_sidebar/" target="_blank" rel="noopener">get_sidebar()</a>;</li></ul><h3 id="Use-custom-Template-Tags"><a href="#Use-custom-Template-Tags" class="headerlink" title="Use custom Template Tags"></a>Use custom Template Tags</h3><p>You can create custom versions of these files can be called as well by naming the file <code>sidebar-{your_custom_template}.php</code>, <code>header-{your_custom_template}.php</code> and <code>footer-{your_custom_template}.php</code>.</p><p>You can then use Template Tags with the custom template name as the only parameter, like this:</p><pre><code class="php">get_header( &#39;your_custom_template&#39; );get_footer( &#39;your_custom_template&#39; );get_sidebar( &#39;your_custom_template&#39; );</code></pre><h3 id="Use-custom-template-files"><a href="#Use-custom-template-files" class="headerlink" title="Use custom template files"></a>Use custom template files</h3><p>you can create custom template files and call them at any location in the page using <a href="https://developer.wordpress.org/reference/functions/get_template_part/" target="_blank" rel="noopener">get_template_part()</a>.</p><p>To create a custom template file in your theme:<br>give the file an appropriate name and use the same custom template system as with the header, sidebar and footer files: <code>slug-template.php</code></p><p>For example, if you would like to create a custom template to handle your post content you could create a template file called <code>content.php</code> and then add a specific content layout for product content by extending the file name to <code>content-product.php</code>. You would then load this template file in your theme like this:</p><pre><code class="php">get_template_part( &#39;content&#39;, &#39;product&#39; );</code></pre><h4 id="To-use-sub-directories"><a href="#To-use-sub-directories" class="headerlink" title="To use sub-directories"></a>To use sub-directories</h4><p>If you want to add more organization to your templates, you can place them in their own directories within your theme directory.</p><p>For example, suppose you add a couple more <em>content</em> templates for <em>profiles</em> and <em>locations</em>, and group them in their own directory called <code>content-templates</code>.</p><p>The theme hierarchy for your theme called <code>my-theme</code> might look like the following. <code>style.css</code> and <code>page.php</code> are included for context.</p><blockquote><ul><li>themes<ul><li>my-theme<ul><li>content-templates<ul><li>content-location.php</li><li>content-product.php</li><li>content-profile.php</li></ul></li></ul></li><li>style.css</li></ul></li></ul></blockquote><p>To include your content templates, prepend the directory names to the <code>slug</code> argument like this:</p><pre><code class="php">get_template_part( &#39;content-templates/content&#39;, &#39;location&#39; );get_template_part( &#39;content-templates/content&#39;, &#39;product&#39; );get_template_part( &#39;content-templates/content&#39;, &#39;profile&#39; );</code></pre><h2 id="Linking-to-Theme-Directories"><a href="#Linking-to-Theme-Directories" class="headerlink" title="Linking to Theme Directories"></a>Linking to Theme Directories</h2><h3 id="get-theme-file-uri"><a href="#get-theme-file-uri" class="headerlink" title="get_theme_file_uri()"></a>get_theme_file_uri()</h3><p>To link to the theme’s directory, you can use the function:</p><ul><li><a href="https://developer.wordpress.org/reference/functions/get_theme_file_uri/" target="_blank" rel="noopener">get_theme_file_uri()</a>;</li></ul><p>If you are not using a child theme, this function will return the full URI to your theme’s main folder. You can use this to reference sub-folders and files in your theme like this:</p><pre><code>echo get_theme_file_uri( &#39;images/logo.png&#39; );</code></pre><p>If you are using a child theme then this function will return the URI of the file in your child theme if it exists.<br>If the file cannot be found in your child theme, the function will return the URI of the file in the parent theme.<br>This is particularly important to keep in mind when distributing a theme or in any other case where a child theme may or may not be active.</p><h3 id="get-theme-file-path"><a href="#get-theme-file-path" class="headerlink" title="get_theme_file_path()"></a>get_theme_file_path()</h3><p>To access the path to a file in your theme’s directories, you can use the following function:</p><ul><li><a href="https://developer.wordpress.org/reference/functions/get_theme_file_path/" target="_blank" rel="noopener">get_theme_file_path()</a>;</li></ul><p>Like <a href="https://developer.wordpress.org/reference/functions/get_theme_file_uri/" target="_blank" rel="noopener">get_theme_file_uri()</a>, this will access the path of the file in the child theme if it exists. If the file cannot be found in the child theme, the function will access the path to the file in the parent theme.</p><h3 id="Link-to-parent-theme’s-directories"><a href="#Link-to-parent-theme’s-directories" class="headerlink" title="Link to parent theme’s directories"></a>Link to parent theme’s directories</h3><p>In a child theme, you can link to a file URI or path in the parent theme’s directories using the following functions:</p><ul><li><a href="https://developer.wordpress.org/reference/functions/get_parent_theme_file_uri/" target="_blank" rel="noopener">get_parent_theme_file_uri()</a>;</li><li><a href="https://developer.wordpress.org/reference/functions/get_parent_theme_file_path/" target="_blank" rel="noopener">get_parent_theme_file_path()</a>;</li></ul><p>As with  <code>get_theme_file_uri(),</code> you can reference sub-folders and files like this:</p><pre><code class="php">echo get_parent_theme_file_uri( &#39;images/logo.png&#39; );//orecho get_parent_theme_file_path( &#39;images/logo.png&#39; );</code></pre><blockquote><p>The functions <a href="https://developer.wordpress.org/reference/functions/get_theme_file_uri/" target="_blank" rel="noopener">get_theme_file_uri()</a>, <a href="https://developer.wordpress.org/reference/functions/get_theme_file_path/" target="_blank" rel="noopener">get_theme_file_path()</a>, <a href="https://developer.wordpress.org/reference/functions/get_parent_theme_file_uri/" target="_blank" rel="noopener">get_parent_theme_file_uri()</a>, <a href="https://developer.wordpress.org/reference/functions/get_parent_theme_file_path/" target="_blank" rel="noopener">get_parent_theme_file_path()</a> were introduced in WordPress 4.7.</p><p>For previous WordPress versions, use <a href="https://developer.wordpress.org/reference/functions/get_template_directory_uri/" target="_blank" rel="noopener">get_template_directory_uri()</a>, <a href="https://developer.wordpress.org/reference/functions/get_template_directory/" target="_blank" rel="noopener">get_template_directory()</a>, <a href="https://developer.wordpress.org/reference/functions/get_stylesheet_directory_uri/" target="_blank" rel="noopener">get_stylesheet_directory_uri()</a>, <a href="https://developer.wordpress.org/reference/functions/get_stylesheet_directory/" target="_blank" rel="noopener">get_stylesheet_directory()</a>.</p><p>Take note that the newer 4.7 functions run the older functions anyway as part of the checking process so it makes sense to use the newer functions when possible.</p></blockquote><h2 id="Dynamic-Linking-in-Templates"><a href="#Dynamic-Linking-in-Templates" class="headerlink" title="Dynamic Linking in Templates"></a>Dynamic Linking in Templates</h2><p>Regardless of your permalink settings, you can link to a page or post dynamically by referring to its unique <code>numerical ID</code> (seen in several pages in the admin interface) with:</p><pre><code class="php+HTML">&lt;a href=&quot;&lt;?php echo get_permalink($ID); ?&gt;&quot;&gt;This is a link&lt;/a&gt;</code></pre><p>This is a convenient way to create page menus as you can later change page slugs without breaking links, as IDs will stay the same. However, this might increase database queries.</p>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
          <category> theme </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>07 Theme Functions</title>
      <link href="/post/wordpress/develop/theme/Basics/07-Theme-Functions/"/>
      <url>/post/wordpress/develop/theme/Basics/07-Theme-Functions/</url>
      <content type="html"><![CDATA[<h1 id="Theme-Functions"><a href="#Theme-Functions" class="headerlink" title="Theme Functions"></a>Theme Functions</h1><p>The <code>functions.php</code> file is where you add unique features to your WordPress theme.</p><p>The <code>functions.php</code> file behaves like a WordPress plugin, adding features and functionality to a WordPress site. You can use it to call WordPress functions and to define your own functions.</p><blockquote><p>The same result can be produced using either a plugin or <code>functions.php</code>. If you are creating new features that should be available no matter what the website looks like, <strong>it is best practice to put them in a plugin</strong>.</p></blockquote><p>The advantages and tradeoffs to either using a WordPress plugin or using <code>functions.php</code>  can be found <a href="https://developer.wordpress.org/themes/basics/theme-functions/#what-is-functions-php" target="_blank" rel="noopener">here</a>.</p><p>With <code>functions.php</code> you can:</p><ul><li>Use WordPress hooks. For example, with the <code>excerpt_length</code> filter you can change your post excerpt length (from default of 55 words).</li><li>Enable WordPress features with <code>add_theme_support()</code>. For example, turn on post thumbnails, post formats, and navigation menus.</li><li>Define functions you wish to reuse in multiple theme template files.</li></ul><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><blockquote><p>It’s important to namespace your functions with your theme name. All examples below use <code>myfirsttheme_</code> as their namespace, which should be customized based on your theme name.</p></blockquote><h3 id="Theme-Setup"><a href="#Theme-Setup" class="headerlink" title="Theme Setup"></a>Theme Setup</h3><p>A number of theme features should be included within a “setup” function that runs initially when your theme is activated.</p><p>To create this initial function, start a new function entitled <code>myfirsttheme_setup()</code>, like so:</p><pre><code class="php">if ( ! function_exists( &#39;myfirsttheme_setup&#39; ) ) :/*** Sets up theme defaults and registers support for various WordPress features**  It is important to set up these functions before the init hook so that none of these*  features are lost.**  @since MyFirstTheme 1.0*/function myfirsttheme_setup() {  ...}</code></pre><p> As shown below, each of these features can be added to <code>myfirsttheme_setup()</code> to activate recommended WordPress features.</p><h4 id="Some-Features"><a href="#Some-Features" class="headerlink" title="Some Features"></a>Some Features</h4><h5 id="Automatic-Feed-Links"><a href="#Automatic-Feed-Links" class="headerlink" title="Automatic Feed Links"></a>Automatic Feed Links</h5><p>Automatic feed links enables post and comment RSS feeds by default. These feeds will be displayed in <code>&lt;head&gt;</code>automatically. They can be called using <code>add_theme_support()</code>.</p><pre><code class="php">add_theme_support( &#39;automatic-feed-links&#39; );</code></pre><h5 id="Navigation-Menus"><a href="#Navigation-Menus" class="headerlink" title="Navigation Menus"></a>Navigation Menus</h5><p>You can set up multiple menus in <code>functions.php</code>. They can be added using <code>register_nav_menus()</code> and inserted into a theme using <code>wp_nav_menu()</code>. If your theme will allow more than one menu, you should use an array. While some themes will not have custom navigation menus, it is recommended that you allow this feature for easy customization.</p><pre><code class="php">register_nav_menus( array(    &#39;primary&#39;   =&gt; __( &#39;Primary Menu&#39;, &#39;myfirsttheme&#39; ),    &#39;secondary&#39; =&gt; __( &#39;Secondary Menu&#39;, &#39;myfirsttheme&#39; )) );</code></pre><h5 id="Load-Text-Domain"><a href="#Load-Text-Domain" class="headerlink" title="Load Text Domain"></a>Load Text Domain</h5><p>Themes can be translated into multiple languages by making the strings in your theme available for translation. To do so, you must use <code>load_theme_textdomain()</code>.</p><blockquote><p>For more information on making your theme available for translation, read the <a href="https://developer.wordpress.org/themes/functionality/internationalization/" target="_blank" rel="noopener">internationalization</a> section.</p></blockquote><pre><code class="php">load_theme_textdomain( &#39;myfirsttheme&#39;, get_template_directory() . &#39;/languages&#39; );</code></pre><h5 id="Post-Thumbnails"><a href="#Post-Thumbnails" class="headerlink" title="Post Thumbnails"></a>Post Thumbnails</h5><p><code>Post thumbnails and featured images</code> allow your users to choose an image to represent their post. Your theme can decide how to display them, depending on its design.</p><p>For example, you may choose to display a post thumbnail with each post in an archive view. Or, you may want to use a large featured image on your homepage.</p><p>While not every theme needs featured images, it’s recommended that you support post thumbnails and featured images.</p><pre><code class="php">add_theme_support( &#39;post-thumbnails&#39; );</code></pre><h5 id="Post-Formats"><a href="#Post-Formats" class="headerlink" title="Post Formats"></a>Post Formats</h5><p>Post formats allow users to format their posts in different ways. This is useful for allowing bloggers to choose different formats and templates based on the content of the post.</p><p><code>add_theme_support()</code> is also used for Post Formats. This is <strong>recommended</strong>.</p><pre><code class="php">add_theme_support( &#39;post-formats&#39;,  array ( &#39;aside&#39;, &#39;gallery&#39;, &#39;quote&#39;, &#39;image&#39;, &#39;video&#39; ) );</code></pre><h4 id="Initial-Setup-Example"><a href="#Initial-Setup-Example" class="headerlink" title="Initial Setup Example"></a>Initial Setup Example</h4><p>Including all of the above features will give you a <code>functions.php</code> file like the one below.</p><p>As shown at the bottom of this example, you must add the required <code>add_action()</code> statement to ensure the <code>myfirsttheme_setup</code> function is loaded.</p><pre><code class="php">if ( ! function_exists( &#39;myfirsttheme_setup&#39; ) ) :/** * Sets up theme defaults and registers support for various WordPress features. * * Note that this function is hooked into the after_setup_theme hook, which runs * before the init hook. The init hook is too late for some features, such as indicating * support post thumbnails. */function myfirsttheme_setup() {    /**     * Make theme available for translation.     * Translations can be placed in the /languages/ directory.     */    load_theme_textdomain( &#39;myfirsttheme&#39;, get_template_directory() . &#39;/languages&#39; );    /**     * Add default posts and comments RSS feed links to &lt;head&gt;.     */    add_theme_support( &#39;automatic-feed-links&#39; );    /**     * Enable support for post thumbnails and featured images.     */    add_theme_support( &#39;post-thumbnails&#39; );    /**     * Add support for two custom navigation menus.     */    register_nav_menus( array(        &#39;primary&#39;   =&gt; __( &#39;Primary Menu&#39;, &#39;myfirsttheme&#39; ),        &#39;secondary&#39; =&gt; __(&#39;Secondary Menu&#39;, &#39;myfirsttheme&#39; )    ) );    /**     * Enable support for the following post formats:     * aside, gallery, quote, image, and video     */    add_theme_support( &#39;post-formats&#39;, array ( &#39;aside&#39;, &#39;gallery&#39;, &#39;quote&#39;, &#39;image&#39;, &#39;video&#39; ) );}endif; // myfirsttheme_setupadd_action( &#39;after_setup_theme&#39;, &#39;myfirsttheme_setup&#39; );</code></pre><h3 id="Content-Width"><a href="#Content-Width" class="headerlink" title="Content Width"></a>Content Width</h3><p>A content width is added to your <code>functions.php</code> file to ensure that no content or assets break the container of the site.</p><p>The content width sets the maximum allowed width for any content added to your site, including uploaded images. In the example below, the content area has a maximum width of 800 pixels. No content will be larger than that.</p><pre><code class="php">if ( ! isset ( $content_width) )    $content_width = 800;</code></pre><h3 id="Other-Features"><a href="#Other-Features" class="headerlink" title="Other Features"></a>Other Features</h3><p>Listed below are some of the most common features.</p><ul><li><a href="https://developer.wordpress.org/themes/functionality/custom-headers/" target="_blank" rel="noopener">Custom Headers</a></li><li><a href="https://developer.wordpress.org/themes/functionality/sidebars/" target="_blank" rel="noopener">Sidebars</a> (widget areas)</li><li>Custom Background (TODO needs link)</li><li>Add Editor Styles (TODO needs link)</li><li>HTML5 (TODO needs link)</li><li>Title tag (TODO needs link)</li></ul><h2 id="Your-functions-php-File"><a href="#Your-functions-php-File" class="headerlink" title="Your functions.php File"></a>Your <em>functions.php</em> File</h2><p>If you choose to include all of the functions listed above, this is what your <em>functions.php</em> might look like.</p><pre><code class="php">/** * MyFirstTheme&#39;s functions and definitions * * @package MyFirstTheme * @since MyFirstTheme 1.0 *//** * First, let&#39;s set the maximum content width based on the theme&#39;s design and stylesheet. * This will limit the width of all uploaded images and embeds. */if ( ! isset( $content_width ) )    $content_width = 800; /* pixels */if ( ! function_exists( &#39;myfirsttheme_setup&#39; ) ) :/** * Sets up theme defaults and registers support for various WordPress features. * * Note that this function is hooked into the after_setup_theme hook, which runs * before the init hook. The init hook is too late for some features, such as indicating * support post thumbnails. */function myfirsttheme_setup() {    /**     * Make theme available for translation.     * Translations can be placed in the /languages/ directory.     */    load_theme_textdomain( &#39;myfirsttheme&#39;, get_template_directory() . &#39;/languages&#39; );    /**     * Add default posts and comments RSS feed links to &lt;head&gt;.     */    add_theme_support( &#39;automatic-feed-links&#39; );    /**     * Enable support for post thumbnails and featured images.     */    add_theme_support( &#39;post-thumbnails&#39; );    /**     * Add support for two custom navigation menus.     */    register_nav_menus( array(        &#39;primary&#39;   =&gt; __( &#39;Primary Menu&#39;, &#39;myfirsttheme&#39; ),        &#39;secondary&#39; =&gt; __(&#39;Secondary Menu&#39;, &#39;myfirsttheme&#39; )    ) );    /**     * Enable support for the following post formats:     * aside, gallery, quote, image, and video     */    add_theme_support( &#39;post-formats&#39;, array ( &#39;aside&#39;, &#39;gallery&#39;, &#39;quote&#39;, &#39;image&#39;, &#39;video&#39; ) );}endif; // myfirsttheme_setupadd_action( &#39;after_setup_theme&#39;, &#39;myfirsttheme_setup&#39; );</code></pre>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
          <category> theme </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>06 The Loop</title>
      <link href="/post/wordpress/develop/theme/Basics/06-The-Loop/"/>
      <url>/post/wordpress/develop/theme/Basics/06-The-Loop/</url>
      <content type="html"><![CDATA[<h1 id="The-Loop"><a href="#The-Loop" class="headerlink" title="The Loop"></a>The Loop</h1><p>The Loop is the default mechanism WordPress uses for outputting posts through a theme’s template files. How many posts are retrieved is determined by the number of posts to show per page defined in the Reading settings.</p><p>The Loop <strong>loops through each post</strong> retrieved for the current page <strong>one at a time</strong> and <strong>performs the action</strong> specified in your theme <strong>for each post</strong> (the action is to process HTML or PHP code written in The Loop).</p><p>You can use the Loop for a number of different things, for example to:</p><ul><li>display post titles and excerpts on your blog’s homepage;</li><li>display the content and comments on a single post;</li><li>display the content on an individual page using template tags; and</li><li>display data from Custom Post Types and Custom Fields.</li></ul><h3 id="The-Basic-Loop"><a href="#The-Basic-Loop" class="headerlink" title="The Basic Loop"></a>The Basic Loop</h3><pre><code class="php+HTML">&lt;?php if ( have_posts() ) : ?&gt;    &lt;?php while ( have_posts() ) : the_post(); ?&gt;        ... Display post content    &lt;?php endwhile; ?&gt;&lt;?php endif; ?&gt;</code></pre><p>This loop says that when there are posts, loop through and <code>Display post content</code> for each post.</p><h2 id="Using-The-Loop"><a href="#Using-The-Loop" class="headerlink" title="Using The Loop"></a>Using The Loop</h2><p>The Loop should be placed in <code>index.php</code>, and in any other templates which are used to display post information. </p><p>An extremely simple <code>index.php</code> file would look like:</p><pre><code class="php+HTML">&lt;?php    get_header();    if ( have_posts() ) : while ( have_posts() ) : the_post();        the_content();    endwhile;    else :        _e( &#39;Sorry, no posts matched your criteria.&#39;, &#39;textdomain&#39; );    endif;    get_sidebar();    get_footer(); ?&gt;</code></pre><h2 id="What-the-Loop-Can-Display"><a href="#What-the-Loop-Can-Display" class="headerlink" title="What the Loop Can Display"></a>What the Loop Can Display</h2><blockquote><p> The latest version of the following list can be found <a href="https://developer.wordpress.org/themes/basics/the-loop/#what-the-loop-can-display" target="_blank" rel="noopener">here</a></p></blockquote><p>The Loop can display a number of different elements for each post.</p><p>For example, some common <strong>template tags</strong> used in many themes are:</p><ul><li><code>next_post_link()</code> – a link to the post published chronologically <em>after</em> the current post</li><li><code>previous_post_link()</code> – a link to the post published chronologically <em>before</em> the current post</li><li><code>the_category()</code> – the category or categories associated with the post or page being viewed</li><li><code>the_author()</code> – the author of the post or page</li><li><code>the_content()</code> – the main content for a post or page</li><li><code>the_excerpt()</code> – the first 55 words of a post’s main content followed by an ellipsis (…) or read more link that goes to the full post. You may also use the “Excerpt” field of a post to customize the length of a particular excerpt.</li><li><code>the_ID()</code> – the ID for the post or page</li><li><code>the_meta()</code> – the custom fields associated with the post or page</li><li><code>the_shortlink()</code> – a link to the page or post using the url of the site and the ID of the post or page</li><li><code>the_tags()</code> – the tag or tags associated with the post</li><li><code>the_title()</code> – the title of the post or page</li><li><code>the_time()</code> – the time or date for the post or page. This can be customized using standard php date function formatting.</li></ul><p>You can also use <strong>conditional tags</strong>, such as:</p><ul><li><code>is_home()</code> – Returns true if the current page is the homepage</li><li><code>is_admin()</code> – Returns true if inside Administration Screen, false otherwise</li><li><code>is_single()</code> – Returns true if the page is currently displaying a single post</li><li><code>is_page()</code> – Returns true if the page is currently displaying a single page</li><li><code>is_page_template()</code> – Can be used to determine if a page is using a specific template, for example: <code>is_page_template(&#39;about-page.php&#39;)</code></li><li><code>is_category()</code> – Returns true if page or post has the specified category, for example: <code>is_category(&#39;news&#39;)</code></li><li><code>is_tag()</code> – Returns true if a page or post has the specified tag</li><li><code>is_author()</code> – Returns true if inside author’s archive page</li><li><code>is_search()</code> – Returns true if the current page is a search results page</li><li><code>is_404()</code> – Returns true if the current page does not exist</li><li><code>has_excerpt()</code> – Returns true if the post or page has an excerpt</li></ul><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><h3 id="Basic-Examples"><a href="#Basic-Examples" class="headerlink" title="Basic Examples"></a>Basic Examples</h3><h4 id="Blog-Archive"><a href="#Blog-Archive" class="headerlink" title="Blog Archive"></a>Blog Archive</h4><pre><code class="php+HTML">&lt;?php if ( have_posts() ) : while ( have_posts() ) : the_post(); ?&gt;        &lt;h2&gt;&lt;?php the_title(); ?&gt;&lt;/h2&gt;    &lt;?php the_post_thumbnail(); ?&gt;    &lt;?php the_excerpt(); ?&gt;&lt;?php endwhile; else: ?&gt;    &lt;?php _e( &#39;Sorry, no posts matched your criteria.&#39;, &#39;textdomain&#39; ); ?&gt;&lt;?php endif; ?&gt;</code></pre><p>The simple loop checks if there are any posts.</p><ul><li>If there are, outputs each post’s title, thumbnail, and excerpt.</li><li>If no posts exists, it displays the message in parentheses.</li></ul><h4 id="Individual-Post"><a href="#Individual-Post" class="headerlink" title="Individual Post"></a>Individual Post</h4><p>In WordPress, each post has its own page, which displays the relevant information for that post. Template tags allow you to customize which information you want to display.</p><pre><code class="php+HTML">&lt;?php if ( have_posts() ) : while ( have_posts() ) : the_post(); ?&gt;&lt;h1&gt;&lt;?php the_title(); ?&gt;&lt;/h1&gt;    &lt;?php the_content(); ?&gt;&lt;?php endwhile; else: ?&gt;    &lt;?php _e( &#39;Sorry, no pages matched your criteria.&#39;, &#39;textdomain&#39; ); ?&gt;&lt;?php endif; ?&gt;</code></pre><p>The loop outputs the post’s title and content. You could use this example in a post or page template file to display the most basic information about the post. You could also customize this template to add more data to the post, for example <code>the category</code>.</p><h3 id="Intermediate-Examples"><a href="#Intermediate-Examples" class="headerlink" title="Intermediate Examples"></a>Intermediate Examples</h3><h4 id="Style-Posts-from-Some-Categories-Differently"><a href="#Style-Posts-from-Some-Categories-Differently" class="headerlink" title="Style Posts from Some Categories Differently"></a>Style Posts from Some Categories Differently</h4><pre><code class="php+HTML">&lt;?php // Start the Loop.?&gt;&lt;?php if ( have_posts() ) : while ( have_posts() ) : the_post(); /* * See if the current post is in category 3.    * If it is, the div is given the CSS class &quot;post-category-three&quot;.   * Otherwise, the div is given the CSS class &quot;post&quot;.*/if ( in_category( 3 ) ) : ?&gt;&lt;div class=&quot;post-category-three&quot;&gt;    &lt;?php else : ?&gt;&lt;div class=&quot;post&quot;&gt;    &lt;?php endif; ?&gt;        // Display the post&#39;s title.        &lt;h2&gt;&lt;?php the_title() ?&gt;&lt;/h2&gt;        // Display a link to other posts by this posts author.        &lt;small&gt;&lt;?php _e( &#39;Posted by &#39;, &#39;textdomain&#39; ); the_author_posts_link() ?&gt;&lt;/small&gt;        // Display the post&#39;s content in a div.        &lt;div class=&quot;entry&quot;&gt;            &lt;?php the_content() ?&gt;        &lt;/div&gt;        // Display a comma separated list of the post&#39;s categories.        &lt;?php _e( &#39;Posted in &#39;, &#39;textdomain&#39; ); the_category( &#39;, &#39; ); ?&gt;    // closes the first div box with the class of &quot;post&quot; or &quot;post-cat-three&quot;    &lt;/div&gt;// Stop the Loop, but allow for a &quot;if not posts&quot; situation&lt;?php endwhile; else :/* * The very first &quot;if&quot; tested to see if there were any posts to * display. This &quot;else&quot; part tells what do if there weren&#39;t any. */_e( &#39;Sorry, no posts matched your criteria.&#39;, &#39;textdomain&#39; ); // Completely stop the Loop. endif;?&gt;</code></pre><h2 id="Multiple-Loops"><a href="#Multiple-Loops" class="headerlink" title="Multiple Loops"></a>Multiple Loops</h2><h3 id="Use-one-queries-in-multiple-loops"><a href="#Use-one-queries-in-multiple-loops" class="headerlink" title="Use one queries in multiple loops"></a>Use one queries in multiple loops</h3><p>You can use <code>rewind_posts()</code> to loop through the same query a second time. This is useful if you want to display the same query twice in different locations on a page.</p><pre><code class="php+HTML">// Start the main loop&lt;?php    if ( have_posts() ) : while ( have_posts() ) : the_post();        the_title();    endwhile;    endif;    // Use rewind_posts() to use the query a second time.    rewind_posts();    // Start a new loop    while ( have_posts() ) : the_post();        the_content();    endwhile;?&gt;</code></pre><h3 id="Creating-secondary-queries-and-loops"><a href="#Creating-secondary-queries-and-loops" class="headerlink" title="Creating secondary queries and loops"></a>Creating secondary queries and loops</h3><p>You will often want to create a secondary query to display different content on the template. For example, you might want to display two groups of posts on the same page, but do different things to each group.</p><p>A common example of this is displaying a single post with a list of posts from the same category below the single post.</p><pre><code class="php+HTML">&lt;?php    // The main query.    if ( have_posts() ) : while ( have_posts() ) : the_post();        the_title();                                                                     the_content();                                                              endwhile;                                                                       else :                                                                              // When no posts are found, output this text.                                   _e( &#39;Sorry, no posts matched your criteria.&#39; );                             endif;                                                                           wp_reset_postdata();                                                            /*                                                                               * The secondary query. Note that you can use any category name here. In our example,     * we use &quot;example-category&quot;.                                                    */                                                                            $secondary_query = new WP_Query( &#39;category_name=example-category&#39; );            // The second loop. if ( $secondary_query-&gt;have_posts() )     echo &#39;&lt;ul&gt;&#39;;    while ( $secondary_query-&gt;have_posts() ) :        $secondary_query-&gt;the_post();        echo &#39;&lt;li&gt;&#39; . get_the_title() . &#39;&lt;/li&gt;&#39;;    endwhile;    echo &#39;&lt;/ul&gt;&#39;;    endif;wp_reset_postdata();?&gt;</code></pre><p>As you can see in the example above, we first display a regular loop. Then we define a new variable that uses <code>WP_Query</code> to query a specific category; in our case, we chose the <code>example-category</code> slug.</p><p>Note that the regular loop in the example above has one difference: it calls <code>wp_reset_postdata()</code> to reset the post data. Before you can use a second loop, you need to reset the post data. There are two ways to do this:</p><ol><li>By using the <code>rewind_posts()</code> function; or</li><li>By creating new query objects.</li></ol><h3 id="Resetting-multiple-loops"><a href="#Resetting-multiple-loops" class="headerlink" title="Resetting multiple loops"></a>Resetting multiple loops</h3><p>It’s important when using multiple loops in a template that you reset them.</p><p>Not doing so can lead to unexpected results due to how data is stored and used within the global <code>$post</code> variable.</p><p>There are three main ways to reset the loop depending on the way they are called.</p><ul><li><code>wp_reset_postdata()</code></li><li><code>wp_reset_query()</code></li><li><code>rewind_posts()</code></li></ul><h4 id="Using-wp-reset-postdata"><a href="#Using-wp-reset-postdata" class="headerlink" title="Using wp_reset_postdata()"></a>Using wp_reset_postdata()</h4><p>Use <code>wp_reset_postdata()</code> when you are running custom or multiple loops with <code>WP_Query</code>. </p><p>This function restores the global <code>$post</code> variable to the current post in the main query. </p><p>To properly use this function, place the following code after any loops with <code>WP_Query</code>:</p><pre><code class="php+HTML">&lt;?php wp_reset_postdata(); ?&gt;</code></pre><h4 id="Using-wp-reset-query"><a href="#Using-wp-reset-query" class="headerlink" title="Using wp_reset_query()"></a>Using wp_reset_query()</h4><p>Using <code>wp_reset_query()</code> restores the <code>WP_Query</code> and global <code>$post</code> data to the original main query.</p><p>You <strong>MUST</strong> use this function to reset your loop if you use <code>query_posts()</code> within your loop.</p><p>You can use it after custom loops with <a href="https://developer.wordpress.org/reference/classes/wp_query/" target="_blank" rel="noopener">WP_Query</a> because it actually calls <code>wp_reset_postdata()</code>when it runs. However, it’s best practice to use <code>wp_reset_postdata()</code> with any custom loops involving <code>WP_Query</code>.</p><blockquote><p><code>query_posts()</code> is <strong>not best practice</strong> and should be avoided if at all possible. Therefore, you shouldn’t have much use for <code>wp_reset_query()</code>.</p></blockquote><p>To properly use this function, place the following code after any loops with <code>query_posts()</code>.</p><pre><code class="php+HTML">&lt;?php wp_reset_query(); ?&gt;</code></pre>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
          <category> theme </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>05 Template Tags</title>
      <link href="/post/wordpress/develop/theme/Basics/05-Template-Tags/"/>
      <url>/post/wordpress/develop/theme/Basics/05-Template-Tags/</url>
      <content type="html"><![CDATA[<h1 id="Template-Tags"><a href="#Template-Tags" class="headerlink" title="Template Tags"></a>Template Tags</h1><h2 id="What-is-template-tag"><a href="#What-is-template-tag" class="headerlink" title="What is template tag"></a>What is template tag</h2><p>A template tag is simply a piece of code that tells WordPress to get something from the database. It is broken up into three components:</p><ul><li>A PHP code tag</li><li>A WordPress function</li><li>Optional parameters<br>You can use a template tag to call another theme file or some information from the database.</li></ul><h2 id="What-can-template-tag-do"><a href="#What-can-template-tag-do" class="headerlink" title="What can template tag do"></a>What can template tag do</h2><p>You can use a template tag to call another theme file or some information from the database.</p><p>For example:</p><p><code>get_header()</code> tells WordPress to get the <code>header.php</code> file and include it in the current theme file. Similarly, <code>get_footer()</code> tells WordPress to get the footer.php file.</p><p><code>the_title()</code> tells WordPress to get the title of the page or post from the database and include it.</p><p><code>bloginfo( &#39;name&#39; )</code> tells WordPress to get the blog title out of the database and include it in the template file.</p><h2 id="How-to-use-template-tag"><a href="#How-to-use-template-tag" class="headerlink" title="How to use template tag"></a>How to use template tag</h2><p>In any template file you can use a template tag by calling the function in php.</p><p>For example, if you want to print <code>header.php</code> in your php file, you just need to call <code>get_header()</code></p><p>You can see all the available functions at <a href="https://developer.wordpress.org/reference/" target="_blank" rel="noopener">WordPress Code Reference</a></p><h3 id="Using-Template-Tags-Within-the-Loop"><a href="#Using-Template-Tags-Within-the-Loop" class="headerlink" title="Using Template Tags Within the Loop"></a>Using Template Tags Within the Loop</h3><p>Many template tags work within the <a href="https://developer.wordpress.org/themes/basics/the-loop/" target="_blank" rel="noopener">WordPress Loop</a>. This means that they are included in the template files as part of the php “loop” that generates the pages users see based upon the instructions inside of the loop.</p><p>The WordPress loop begins with:</p><pre><code class="php">if ( have_posts() ) :     while ( have_posts() ) :         the_post(); </code></pre><p>Template tags that work within the loop must be in the middle area, before the ending section of the loop below:</p><pre><code class="php">    endwhile; else :    _e( &#39;Sorry, no posts matched your criteria.&#39;, &#39;devhub&#39; );endif;</code></pre><p>Some of template tags that need to be inside of the loop, such as <a href="https://developer.wordpress.org/reference/functions/the_content/" target="_blank" rel="noopener">the_content()</a>, <a href="https://developer.wordpress.org/reference/functions/the_excerpt/" target="_blank" rel="noopener">the_excerpt()</a>, <a href="https://developer.wordpress.org/reference/functions/next_post/" target="_blank" rel="noopener">next_post()</a>, <a href="https://developer.wordpress.org/reference/functions/previous_post/" target="_blank" rel="noopener">previous_post()</a>.</p><p>Some template tags doesn’t have to be within the loop, then you can put it in any file you’d like, for instance in the sidebar, header, or footer template files.</p>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
          <category> theme </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>04 Template Hierarchy</title>
      <link href="/post/wordpress/develop/theme/Basics/04-Template-Hierarchy/"/>
      <url>/post/wordpress/develop/theme/Basics/04-Template-Hierarchy/</url>
      <content type="html"><![CDATA[<h1 id="Template-Hierarchy"><a href="#Template-Hierarchy" class="headerlink" title="Template Hierarchy"></a>Template Hierarchy</h1><p>This article explains <strong>how WordPress determines which template file(s) to use on individual pages</strong>. </p><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>WordPress uses the <code>query string in url</code> to decide which template or set of templates should be used to display the page. WordPress follows this procedure:: </p><ol><li>Matches every query string to a query type to decide which page is being requested (for example, a search page, a category page, etc);</li><li>Selects the template in the order determined by the template hierarchy;</li><li>Looks for template files with specific names in the current theme’s directory and uses the <strong>first matching template file</strong> as specified by the hierarchy.</li></ol><p>If WordPress cannot find a template file with a matching name, it will skip to the next file in the hierarchy. If WordPress cannot find any matching template file, the theme’s <code>index.php</code> file will be used.</p><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><p>If your blog is at <code>http://example.com/blog/</code> and a visitor clicks on a link to a category page such as <code>http://example.com/blog/category/your-cat/</code>, WordPress looks for a template file in the current theme’s directory that matches the category’s ID to generate the correct page.<br>More specifically, WordPress follows this procedure:</p><ol><li>Looks for a template file in the current theme’s directory that matches the category’s slug. If the category slug is “unicorns,” then WordPress looks for a template file named <code>category-unicorns.php</code>.</li><li>If category-unicorns.php is missing and the category’s ID is 4, WordPress looks for a template file named <code>category-4.php</code>.</li><li>If category-4.php is missing, WordPress will look for a generic category template file, <code>category.php</code>.</li><li>If category.php does not exist, WordPress will look for a generic archive template, <code>archive.php</code>.</li><li>If archive.php is also missing, WordPress will fall back to the main theme template file, <code>index.php</code>.</li></ol><h2 id="Full-hierarchy"><a href="#Full-hierarchy" class="headerlink" title="Full hierarchy"></a>Full hierarchy</h2><p><img src="https://developer.wordpress.org/files/2014/10/wp-hierarchy.png" alt="img"></p><p>You can also <a href="http://wphierarchy.com/" target="_blank" rel="noopener">interact with this diagram</a>.</p><h2 id="For-some-specific-query-types"><a href="#For-some-specific-query-types" class="headerlink" title="For some specific query types."></a>For some specific query types.</h2><h3 id="Home-Page-display"><a href="#Home-Page-display" class="headerlink" title="Home Page display"></a>Home Page display</h3><ol><li>home.php</li><li>index.php</li></ol><blockquote><p>If <code>front-page.php</code> exists, it will override the <code>home.php</code> template.</p></blockquote><h3 id="Front-Page-display"><a href="#Front-Page-display" class="headerlink" title="Front Page display"></a>Front Page display</h3><ol><li><code>front-page.php</code></li><li><code>home.php</code> – If WordPress cannot find <code>front-page.php</code>and “<strong>your latest posts</strong>” is set in the <strong>front page displays</strong> section, it will look for <code>home.php</code>. Additionally, WordPress will look for this file when the <strong>posts page</strong> is set in the <strong>front page displays</strong> section.</li><li><code>page.php</code> – When “<strong>front page</strong>” is set in the <strong>front page displays</strong> section.</li><li><code>index.php</code> – When “<strong>your latest posts</strong>” is set in the <strong>front page displays</strong> section but <code>home.php</code> does not exist <em>or</em> when <strong>front page</strong> is set but <code>page.php</code> does not exist.</li></ol><h3 id="Single-Post"><a href="#Single-Post" class="headerlink" title="Single Post"></a>Single Post</h3><ol><li><code>single-{post-type}-{slug}.php</code> – (Since 4.4) First, WordPress looks for a template for the specific post. For example, if <a href="https://developer.wordpress.org/themes/basics/post-types/" target="_blank" rel="noopener">post type</a> is <code>product</code> and the post slug is <code>dmc-12</code>, WordPress would look for <code>single-product-dmc-12.php</code>.</li><li><code>single-{post-type}.php</code> – If the post type is <code>product</code>, WordPress would look for <code>single-product.php</code>.</li><li><code>single.php</code></li><li><code>singular.php</code></li><li><code>index.php</code> – Finally, as mentioned above, WordPress ultimately falls back to <code>index.php</code>.</li></ol><h3 id="Single-Page"><a href="#Single-Page" class="headerlink" title="Single Page"></a>Single Page</h3><ol><li><code>custom template file</code> – The <a href="https://developer.wordpress.org/themes/template-files-section/page-template-files/" target="_blank" rel="noopener">page template</a> assigned to the page. See <a href="https://developer.wordpress.org/reference/functions/get_page_templates/" target="_blank" rel="noopener">get_page_templates()</a>.</li><li><code>page-{slug}.php</code> – If the page slug is <code>recent-news</code>, WordPress will look to use <code>page-recent-news.php</code>.</li><li><code>page-{id}.php</code> – If the page ID is 6, WordPress will look to use <code>page-6.php</code>.</li><li><code>page.php</code></li><li><code>singular.php</code></li><li><code>index.php</code></li></ol><h3 id="Category"><a href="#Category" class="headerlink" title="Category"></a>Category</h3><ol><li><code>category-{slug}.php</code></li><li><code>category-{id}.php</code></li><li><code>category.php</code></li><li><code>archive.php</code></li><li><code>index.php</code></li></ol><h3 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h3><ol><li><code>tag-{slug}.php</code></li><li><code>tag-{id}.php</code></li><li><code>tag.php</code></li><li><code>archive.php</code></li><li><code>index.php</code></li></ol><h3 id="Custom-Taxonomies"><a href="#Custom-Taxonomies" class="headerlink" title="Custom Taxonomies"></a>Custom Taxonomies</h3><ol><li><code>taxonomy-{taxonomy}-{term}.php</code> – If the taxonomy is <code>sometax</code>, and taxonomy’s term is <code>someterm</code>, WordPress will look for <code>taxonomy-sometax-someterm.php.</code> In the case of <a href="https://developer.wordpress.org/themes/functionality/post-formats/" target="_blank" rel="noopener">post formats</a>, the taxonomy is ‘post_format’ and the terms are ‘post-format-{format}. i.e. <code>taxonomy-post_format-post-format-link.php</code> for the link post format.</li><li><code>taxonomy-{taxonomy}.php</code> – If the taxonomy were <code>sometax</code>, WordPress would look for <code>taxonomy-sometax.php</code>.</li><li><code>taxonomy.php</code></li><li><code>archive.php</code></li><li><code>index.php</code></li></ol><h3 id="Custom-Post-Types"><a href="#Custom-Post-Types" class="headerlink" title="Custom Post Types"></a>Custom Post Types</h3><ol><li><code>archive-{post_type}.php</code> – If the post type is <code>product</code>, WordPress will look for <code>archive-product.php</code>.</li><li><code>archive.php</code></li><li><code>index.php</code></li></ol><h3 id="Author-display"><a href="#Author-display" class="headerlink" title="Author display"></a>Author display</h3><ol><li><code>author-{nicename}.php</code></li><li><code>author-{id}.php</code></li><li><code>author.php</code></li><li><code>archive.php</code></li><li><code>index.php</code></li></ol><h3 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h3><p>Date-based archive index pages are rendered as you would expect:</p><ol><li><code>date.php</code></li><li><code>archive.php</code></li><li><code>index.php</code></li></ol><h3 id="Search-Result"><a href="#Search-Result" class="headerlink" title="Search Result"></a>Search Result</h3><ol><li><code>search.php</code></li><li><code>index.php</code></li></ol><h3 id="404-Not-Found"><a href="#404-Not-Found" class="headerlink" title="404 (Not Found)"></a>404 (Not Found)</h3><ol><li><code>404.php</code></li><li><code>index.php</code></li></ol><h3 id="Attachment"><a href="#Attachment" class="headerlink" title="Attachment"></a>Attachment</h3><ol><li><code>{MIME-type}.php</code> – can be any <a href="http://en.wikipedia.org/wiki/Internet_media_type" target="_blank" rel="noopener">MIME type</a> (For example: <code>image.php</code>, <code>video.php</code>, <code>pdf.php</code>).<br>For <code>text/plain</code>, the following path is used (in order):<ol><li><code>text-plain.php</code></li><li><code>plain.php</code></li><li><code>text.php</code></li></ol></li><li><code>attachment.php</code></li><li><code>single-attachment-{slug}.php</code> – For example, if the attachment slug is <code>holiday</code>, WordPress would look for <code>single-attachment-holiday.php</code>.</li><li><code>single-attachment.php</code></li><li><code>single.php</code></li><li><code>singular.php</code></li><li><code>index.php</code></li></ol><h3 id="Embeds"><a href="#Embeds" class="headerlink" title="Embeds"></a>Embeds</h3><p>The embed template file is used to render a post which is being embedded. Since 4.5, WordPress uses the following path:</p><ol><li><code>embed-{post-type}-{post_format}.php</code> – First, WordPress looks for a template for the specific post. For example, if its post type is <code>post</code> and it has the audio format, WordPress would look for <code>embed-post-audio.php</code>.</li><li><code>embed-{post-type}.php</code> – If the post type is <code>product</code>, WordPress would look for <code>embed-product.php</code>.</li><li><code>embed.php</code> – WordPress then falls back to embed<code>.php</code>.</li><li>Finally, WordPress ultimately falls back to its own <code>wp-includes/theme-compat/embed.php</code> template.</li></ol><h2 id="Non-ASCII-Character-Handling"><a href="#Non-ASCII-Character-Handling" class="headerlink" title="Non-ASCII Character Handling"></a>Non-ASCII Character Handling</h2><p>Since WordPress 4.7, any dynamic part of a template name which includes non-ASCII characters in its name actually supports both the un-encoded and the encoded form, in that order. You can choose which to use.</p><p>Here’s the page template hierarchy for a page named “Hello World 😀” with an ID of 6:</p><p>:grinning:</p><p>Here’s the page template hierarchy for a page named “Hello World 😀” with an ID of <code>6</code>:</p><ul><li><code>page-hello-world-😀.php</code></li><li><code>page-hello-world-%f0%9f%98%80.php</code></li><li><code>page-6.php</code></li><li><code>page.php</code></li><li><code>singular.php</code></li></ul><h2 id="Filter-Hierarchy"><a href="#Filter-Hierarchy" class="headerlink" title="Filter Hierarchy"></a>Filter Hierarchy</h2><p>The WordPress template system lets you filter the hierarchy. This means that you can insert and change things at specific points of the hierarchy. The filter (located in the <a href="https://developer.wordpress.org/reference/functions/get_query_template/" target="_blank" rel="noopener"><code>get_query_template()</code></a> function) uses this filter name: <code>&quot;{$type}_template&quot;</code> where <code>$type</code> is the template type.</p><p>Here is a list of all available filters in the template hierarchy:</p><ul><li><code>embed_template</code></li><li><code>404_template</code></li><li><code>search_template</code></li><li><code>frontpage_template</code></li><li><code>home_template</code></li><li><code>taxonomy_template</code></li><li><code>attachment_template</code></li><li><code>single_template</code></li><li><code>page_template</code></li><li><code>singular_template</code></li><li><code>category_template</code></li><li><code>tag_template</code></li><li><code>author_template</code></li><li><code>date_template</code></li><li><code>archive_template</code></li><li><code>index_template</code></li></ul><blockquote><p>The latest list can be see <a href="https://developer.wordpress.org/themes/basics/template-hierarchy/#filter-hierarchy" target="_blank" rel="noopener">here</a></p></blockquote><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p>For example, let’s take the default author hierarchy:</p><ul><li><code>author-{nicename}.php</code></li><li><code>author-{id}.php</code></li><li><code>author.php</code></li></ul><p>To add <code>author-{role}.php</code> before <code>author.php</code>, we can manipulate the actual hierarchy using the ‘author_template’ template type. This allows a request for /author/username where username has the role of editor to display using author-editor.php if present in the current themes directory.</p><pre><code class="php">function author_role_template( $templates = &#39;&#39; ) {    $author = get_queried_object();    $role = $author-&gt;roles[0];    if ( ! is_array( $templates ) &amp;&amp; ! empty( $templates ) ) {        $templates = locate_template( array( &quot;author-$role.php&quot;, $templates ), false );    } elseif ( empty( $templates ) ) {        $templates = locate_template( &quot;author-$role.php&quot;, false );    } else {        $new_template = locate_template( array( &quot;author-$role.php&quot; ) );        if ( ! empty( $new_template ) ) {            array_unshift( $templates, $new_template );        }    }    return $templates;}add_filter( &#39;author_template&#39;, &#39;author_role_template&#39; );</code></pre>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
          <category> theme </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>03 Template files structure</title>
      <link href="/post/wordpress/develop/theme/Basics/03-Theme-Files-Structure/"/>
      <url>/post/wordpress/develop/theme/Basics/03-Theme-Files-Structure/</url>
      <content type="html"><![CDATA[<h1 id="Template-files-structure"><a href="#Template-files-structure" class="headerlink" title="Template files structure"></a>Template files structure</h1><p>While WordPress themes technically only require 4 files (<code>index.php</code> , <code>style.css</code> , <code>header.php</code> and <code>footer.php</code>), they usually are made up of many files.<br>To keep the files organized, keep the files structured in the theme folder.</p><h2 id="General-Structure"><a href="#General-Structure" class="headerlink" title="General Structure"></a>General Structure</h2><p>For example:</p><pre><code>assets (dir)      - css (dir)      - images (dir)      - js (dir)inc (dir)template-parts (dir)      - footer (dir)      - header (dir)      - navigation (dir)      - page (dir)      - post (dir)404.phparchive.phpcomments.phpfooter.phpfront-page.phpfunctions.phpheader.phpindex.phppage.phpREADME.txtrtl.cssscreenshot.pngsearch.phpsearchform.phpsidebar.phpsingle.phpstyle.css</code></pre><ul><li>The <strong>main theme template files</strong> are in the <code>root directory</code></li><li><strong>JavaScript, CSS, images</strong> are placed in <code>assets directory</code></li><li><strong>Template-parts</strong> are placed in under respective <code>subdirectory of template-parts</code></li><li>collection of  <strong>functions</strong> related to core functionalities are placed in <code>inc</code> directory.</li></ul><blockquote><p><strong>style.css</strong> should be in the <code>root directory</code> of your theme instead of the CSS directory.</p></blockquote><h2 id="Languages-folder"><a href="#Languages-folder" class="headerlink" title="Languages folder"></a>Languages folder</h2><p>It’s best practice to <a href="https://developer.wordpress.org/themes/functionality/internationalization/" target="_blank" rel="noopener">internationalize your theme</a> so it can be translated into other languages. Default themes include the <code>languages</code> folder, which contains a .pot file for translation and any translated .mo files. While <code>languages</code> is the default name of this folder, you can change the name. If you do so, you must update <code>load_theme_textdomain()</code>.</p>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
          <category> theme </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>02 Post Types</title>
      <link href="/post/wordpress/develop/theme/Basics/02-Post-Types/"/>
      <url>/post/wordpress/develop/theme/Basics/02-Post-Types/</url>
      <content type="html"><![CDATA[<h1 id="Post-Types"><a href="#Post-Types" class="headerlink" title="Post Types"></a>Post Types</h1><p><code>post type</code> means the type of content in WordPress. ‘Post’ here refers to not only a ‘post’ you publish in your blog, but also ‘page’, ‘attachment’ …</p><p>There are 5 <strong>default Post Types</strong> : post, page, attachment, revision, nav_menu_item</p><p>Additionally, you can also create <strong>Custom Post Types</strong>.</p><p>As the whole purpose of a Template file is to display content a certain way, the Post Types purpose is to categorize what type of content you are dealing with.<br>Generally speaking, certain Post Types are tied to certain template files.</p><h2 id="Default-Post-Types"><a href="#Default-Post-Types" class="headerlink" title="Default Post Types"></a>Default Post Types</h2><ul><li>Post (Post Type: ‘post’)</li><li>Page (Post Type: ‘page’)</li><li>Attachment (Post Type: ‘attachment’)</li><li>Revision (Post Type: ‘revision’)</li><li>Navigation menu (Post Type: ‘nav_menu_item’)</li></ul><h3 id="Post"><a href="#Post" class="headerlink" title="Post"></a>Post</h3><p>‘post’ here means an article you  publish in your blog.</p><p>Post’s properties:</p><ul><li>displayed in reverse sequential order by time, with the newest post first</li><li>have a date and time stamp</li><li>may have the default taxonomies of categories and tags applied</li><li>are used for creating feeds</li></ul><p>The template files that display the Post post type are:</p><ul><li><code>single.php</code> and <code>single-post.php</code></li><li><code>category.php</code> and all its iterations</li><li><code>tag.php</code> and all its iterations</li><li><code>taxonomy.php</code> and all its iterations</li><li><code>archive.php</code> and all its iterations</li><li><code>author.php</code> and all its iterations</li><li><code>date.php</code> and all its iterations</li><li><code>search.php</code></li><li><code>home.php</code></li><li><code>index.php</code></li></ul><h3 id="Page"><a href="#Page" class="headerlink" title="Page"></a>Page</h3><p>Pages are a static Post Type, outside of the normal blog stream/feed. Their features are:</p><ul><li>non-time dependent and without a time stamp</li><li>are not organized using the categories and/or tags taxonomies</li><li>can have page templates applied to them</li><li>can be organized in a hierarchical structure — i.e. pages can be parents/children of other pages</li></ul><p>The template files that display the Page post type are:</p><ul><li><code>page.php</code> and all its iterations</li><li><code>$custom.php</code> and all its iterations</li><li><code>front-page.php</code></li><li><code>search.php</code></li><li><code>index.php</code></li></ul><h3 id="Attachment"><a href="#Attachment" class="headerlink" title="Attachment"></a>Attachment</h3><p>Attachments are commonly used to display images or media in content, and may also be used to link to relevant files. Their features are:</p><ul><li>contain information (such as name or description) about files uploaded through the media upload system</li><li>for images, this includes metadata information stored in the wp_postmeta table (including size, thumbnails, location, etc)</li></ul><p>The template files that display the Attachment post type are:</p><ul><li><code>MIME_type.php</code></li><li><code>attachment.php</code></li><li><code>single-attachment.php</code></li><li><code>single.php</code></li><li><code>index.php</code></li></ul><h2 id="Custom-Post-Types"><a href="#Custom-Post-Types" class="headerlink" title="Custom Post Types"></a>Custom Post Types</h2><p>You can <strong>create your own post type</strong>. It is not recommend that you place this functionality in your theme. This type of functionality should be placed/created in a plugin. This ensures the portability of your user’s content, and that if the theme is changed the content stored in the Custom Post Types won’t disappear.</p><p>While you generally won’t develop Custom Post Types in your theme, you may want to code ways to display Custom Post Types that were created by a plugin.  The following templates can display Custom post types:</p><ul><li><code>single-{post-type}.php</code></li><li><code>archive-{post-type}.php</code></li><li><code>search.php</code></li><li><code>index.php</code></li></ul><p>Additionally, Theme Developers can display Custom Post Types in any template file, often by using <a href="https://developer.wordpress.org/themes/basics/the-loop/#multiple-loops" target="_blank" rel="noopener">multiple loops</a>.</p>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
          <category> theme </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>01 Template Files</title>
      <link href="/post/wordpress/develop/theme/Basics/01-Template-Files/"/>
      <url>/post/wordpress/develop/theme/Basics/01-Template-Files/</url>
      <content type="html"><![CDATA[<h1 id="Template-Files"><a href="#Template-Files" class="headerlink" title="Template Files"></a>Template Files</h1><h2 id="Terminology"><a href="#Terminology" class="headerlink" title="Terminology"></a>Terminology</h2><h3 id="Templates-files"><a href="#Templates-files" class="headerlink" title="Templates files"></a>Templates files</h3><p>Templates files are PHP files that contain a mixture of <strong>HTML</strong>, <strong>Template Tags</strong>, and <strong>PHP code</strong>.<br>They exist within a theme and express how your site is displayed.</p><p>When you are building your theme, you will use template files to affect the layout and design of different parts of your website. For example, you would use the <code>header.php</code>template to create a header, or the <code>comments.php</code> template to include comments.</p><h3 id="Page-Templates"><a href="#Page-Templates" class="headerlink" title="Page Templates"></a>Page Templates</h3><p>Page Templates are those that apply <em>only to pages</em> to change their look and feel.  A page template can be applied to a single page, a page section, or a class of pages.</p><h3 id="Template-Tags"><a href="#Template-Tags" class="headerlink" title="Template Tags"></a>Template Tags</h3><p>Template Tags are <strong>built-in WordPress functions</strong> you can use inside a template file to retrieve and display data (such as <code>the_title()</code> and <code>the_content()</code>).</p><h3 id="Template-Hierarchy"><a href="#Template-Hierarchy" class="headerlink" title="Template Hierarchy"></a>Template Hierarchy</h3><p>Template Hierarchy is the logic WordPress uses to <strong>decide which theme template file(s) to use</strong>, depending on the content being requested.</p><p>When someone visits a page on your website, WordPress loads a template based on the request. The type of content that is displayed in by the template file is determined by the <code>Post Type</code> associated with the template file.  The Template Hierarchy describes which template file WordPress will load based on the type of request and whether the template exists in the theme. The server then parses the PHP in the template and returns HTML to the visitor.</p><p>The most critical template file is <code>index.php</code>, which is the catch-all template if a more-specific template can not be found in the template hierarchy. Although a theme only needs a <code>index.php</code> template, typically themes include numerous templates to display different content types and contexts.</p><h2 id="Template-partials"><a href="#Template-partials" class="headerlink" title="Template partials"></a>Template partials</h2><p>A template partial is a piece of a template that is included as a part of another template, such as a site header. Template partials can be embedded in multiple templates, simplifying theme creation. Common template partials include:</p><ul><li><code>header.php</code> for generating the site’s header</li><li><code>footer.php</code> for generating the footer</li><li><code>sidebar.php</code> for generating the sidebar</li></ul><p>While the above template files are special-case in WordPress and apply to just one portion of a page, you can create any number of template partials and include them in other template files.</p><h2 id="Common-WordPress-template-files"><a href="#Common-WordPress-template-files" class="headerlink" title="Common WordPress template files"></a>Common WordPress template files</h2><p>Below is a list of some basic theme templates and files recognized by WordPress.</p><blockquote><p>The latest version of this list is shown <a href="https://developer.wordpress.org/themes/basics/template-files/#common-wordpress-template-files" target="_blank" rel="noopener">here</a></p></blockquote><h6 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a>index.php</h6><p>The main template file. It is <strong>required</strong> in all themes.</p><h6 id="style-css"><a href="#style-css" class="headerlink" title="style.css"></a>style.css</h6><p>The main stylesheet. It is <strong>required</strong> in all themes and contains the information header for your theme.</p><h6 id="rtl-css"><a href="#rtl-css" class="headerlink" title="rtl.css"></a>rtl.css</h6><p>The right-to-left stylesheet is included automatically if the website language’s text direction is right-to-left.</p><h6 id="comments-php"><a href="#comments-php" class="headerlink" title="comments.php"></a>comments.php</h6><p>The comments template.</p><h6 id="front-page-php"><a href="#front-page-php" class="headerlink" title="front-page.php"></a>front-page.php</h6><p>The front page template is always used as the site front page if it exists, regardless of what settings on <strong>Admin Settings Reading</strong>.</p><h6 id="home-php"><a href="#home-php" class="headerlink" title="home.php"></a>home.php</h6><p>The home page template is the front page by default. If you do not set WordPress to use a static front page, this template is used to show latest posts.</p><h6 id="header-php"><a href="#header-php" class="headerlink" title="header.php"></a>header.php</h6><p>The header template file usually contains your site’s document type, meta information, links to stylesheets and scripts, and other data.</p><h6 id="singular-php"><a href="#singular-php" class="headerlink" title="singular.php"></a>singular.php</h6><p>The singular template is used for posts when <code>single.php</code> is not found, or for pages when <code>page.php</code> are not found. If singular.php is not found, index.php is used.</p><h6 id="single-php"><a href="#single-php" class="headerlink" title="single.php"></a>single.php</h6><p>The single post template is used when a visitor requests a single post.</p><h6 id="single-post-type-php"><a href="#single-post-type-php" class="headerlink" title="single-{post-type}.php"></a>single-{post-type}.php</h6><p>The single post template used when a visitor requests a single post from a custom post type. For example, <code>single-book.php</code> would be used for displaying single posts from a custom post type named <em>book</em>. The <code>index.php</code> is used if a specific query template for the custom post type is not present.</p><h6 id="archive-post-type-php"><a href="#archive-post-type-php" class="headerlink" title="archive-{post-type}.php"></a>archive-{post-type}.php</h6><p>The archive post type template is used when visitors request a custom post type archive. For example, <code>archive-books.php</code> would be used for displaying an archive of posts from the custom post type named <em>books</em>. The <code>archive.php</code> template file is used if the <code>archive-{post-type}.php</code> is not present.</p><h6 id="page-php"><a href="#page-php" class="headerlink" title="page.php"></a>page.php</h6><p>The page template is used when visitors request individual pages, which are a built-in template.</p><h6 id="page-slug-php"><a href="#page-slug-php" class="headerlink" title="page-{slug}.php"></a>page-{slug}.php</h6><p>The page slug template is used when visitors request a specific page, for example one with the “about” slug (page-about.php).</p><h6 id="category-php"><a href="#category-php" class="headerlink" title="category.php"></a>category.php</h6><p>The category template is used when visitors request posts by category.</p><h6 id="tag-php"><a href="#tag-php" class="headerlink" title="tag.php"></a>tag.php</h6><p>The tag template is used when visitors request posts by tag.</p><h6 id="taxonomy-php"><a href="#taxonomy-php" class="headerlink" title="taxonomy.php"></a>taxonomy.php</h6><p>The taxonomy term template is used when a visitor requests a term in a custom taxonomy.</p><h6 id="author-php"><a href="#author-php" class="headerlink" title="author.php"></a>author.php</h6><p>The author page template is used whenever a visitor loads an author page.</p><h6 id="date-php"><a href="#date-php" class="headerlink" title="date.php"></a>date.php</h6><p>The date/time template is used when posts are requested by date or time. For example, the pages generated with these slugs:<br><a href="http://example.com/blog/2014/" target="_blank" rel="noopener">http://example.com/blog/2014/</a><br><a href="http://example.com/blog/2014/05/" target="_blank" rel="noopener">http://example.com/blog/2014/05/</a><br><a href="http://example.com/blog/2014/05/26/" target="_blank" rel="noopener">http://example.com/blog/2014/05/26/</a></p><h6 id="archive-php"><a href="#archive-php" class="headerlink" title="archive.php"></a>archive.php</h6><p>The archive template is used when visitors request posts by category, author, or date. <strong>Note</strong>: this template will be overridden if more specific templates are present like <code>category.php</code>, <code>author.php</code>, and <code>date.php</code>.</p><h6 id="search-php"><a href="#search-php" class="headerlink" title="search.php"></a>search.php</h6><p>The search results template is used to display a visitor’s search results.</p><h6 id="attachment-php"><a href="#attachment-php" class="headerlink" title="attachment.php"></a>attachment.php</h6><p>The attachment template is used when viewing a single attachment like an image, pdf, or other media file.</p><h6 id="image-php"><a href="#image-php" class="headerlink" title="image.php"></a>image.php</h6><p>The image attachment template is a more specific version of <code>attachment.php</code> and is used when viewing a single image attachment. If not present, WordPress will use <code>attachment.php</code> instead.</p><h6 id="404-php"><a href="#404-php" class="headerlink" title="404.php"></a>404.php</h6><p>The 404 template is used when WordPress cannot find a post, page, or other content that matches the visitor’s request.</p><h2 id="Using-template-files"><a href="#Using-template-files" class="headerlink" title="Using template files"></a>Using template files</h2><p>You can use <code>Template Tags</code> to display information dynamically, include other template files, or otherwise customize your site.</p><ul><li>To include the header, use <code>get_header()</code></li><li>To include the sidebar, use <code>get_sidebar()</code></li><li>To include the footer, use <code>get_footer()</code></li><li>To include the search form, use <code>get_search_form()</code></li><li>To include custom theme files, use <code>get_template_part()</code></li></ul><p>For example, in your <code>index.php</code>, you can:</p><pre><code>&lt;?php get_sidebar(); ?&gt;&lt;?php get_template_part( &#39;featured-content&#39; ); ?&gt;&lt;?php get_footer(); ?&gt;</code></pre><h1 id="Main-Stylesheet-style-css"><a href="#Main-Stylesheet-style-css" class="headerlink" title="Main Stylesheet (style.css)"></a>Main Stylesheet (style.css)</h1><p><strong>style.css</strong> file <strong>must</strong> be located <strong>in the root directory</strong> of your theme. It controls the presentation (visual design and layout) of the website pages.</p><h2 id="Basic-Structure"><a href="#Basic-Structure" class="headerlink" title="Basic Structure"></a>Basic Structure</h2><ul><li>header part</li><li>​</li></ul><h3 id="header-part"><a href="#header-part" class="headerlink" title="header part"></a>header part</h3><p>the header comment section of  style.css  <strong>displays information</strong> about the theme in the Appearance (Themes) dashboard panel.</p><p>For example:</p><pre><code>/*Theme Name: Twenty SeventeenTheme URI: https://wordpress.org/themes/twentyseventeen/Author: the WordPress teamAuthor URI: https://wordpress.org/Description: Twenty Seventeen brings your site to life with immersive featured images and subtle animations. With a focus on business sites, it features multiple sections on the front page as well as widgets, navigation and social menus, a logo, and more. Personalize its asymmetrical grid with a custom color scheme and showcase your multimedia content with post formats. Our default theme for 2017 works great in many languages, for any abilities, and on any device.Version: 1.0License: GNU General Public License v2 or laterLicense URI: http://www.gnu.org/licenses/gpl-2.0.htmlText Domain: twentyseventeenTags: one-column, two-columns, right-sidebar, flexible-header, accessibility-ready, custom-colors, custom-header, custom-menu, custom-logo, editor-style, featured-images, footer-widgets, post-formats, rtl-language-support, sticky-post, theme-options, threaded-comments, translation-readyThis theme, like WordPress, is licensed under the GPL.Use it to make something cool, have fun, and share what you&#39;ve learned with others.*/</code></pre><h4 id="For-Child-Theme"><a href="#For-Child-Theme" class="headerlink" title="For Child Theme"></a>For Child Theme</h4><p><strong>Template</strong> is needed in style.css header.</p><p>For example:</p><pre><code>/*Theme Name: My Child ThemeTemplate: Twenty Seventeen...*/</code></pre>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
          <category> develop </category>
          
          <category> theme </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>develop for wordpress</title>
      <link href="/post/wordpress/develop/"/>
      <url>/post/wordpress/develop/</url>
      <content type="html"><![CDATA[<p>Install the followings:</p><h2 id="php"><a href="#php" class="headerlink" title="php"></a>php</h2><p>TODO</p><h3 id="enable-needed-extensions"><a href="#enable-needed-extensions" class="headerlink" title="enable needed extensions"></a>enable needed extensions</h3><p>in <code>php.ini</code> , </p><p>change</p><blockquote><p>;extension=mysqli</p></blockquote><p>to:</p><blockquote><p>extension=mysqli</p></blockquote><p>to enable the <code>mysqli</code> extension.</p><h2 id="phpStorm-amp-its-configurations"><a href="#phpStorm-amp-its-configurations" class="headerlink" title="phpStorm &amp; its configurations"></a>phpStorm &amp; its configurations</h2><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><p>TODO</p><h2 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h2><h3 id="Download-WordPress"><a href="#Download-WordPress" class="headerlink" title="Download WordPress"></a>Download WordPress</h3><p>Create a project in phpStorm.</p><p>Download the <code>WordPress.zip</code> archive at <a href="https://wordpress.org/download/" target="_blank" rel="noopener">https://wordpress.org/download/</a>. </p><p>Extract the archive under <code>the project root</code> or <code>other locations</code> as you want.</p><p>For more options, see: <a href="https://www.jetbrains.com/help/phpstorm/preparing-to-use-wordpress.html#d208817e96" target="_blank" rel="noopener">preparing-to-use-wordpress</a>.</p><h3 id="WP-CLI-package"><a href="#WP-CLI-package" class="headerlink" title="WP-CLI package"></a>WP-CLI package</h3><ol><li><p>Install Composer dependency manager</p><p><a href="https://getcomposer.org/doc/00-intro.md#installation-linux-unix-osx" target="_blank" rel="noopener">Linux/OSX</a></p><p><a href="https://getcomposer.org/doc/00-intro.md#installation-windows" target="_blank" rel="noopener">Windows</a></p></li><li><p>in phpstorm, choose <code>Tools | Composer | Init Composer</code></p><p>Then complete the <code>composer.json</code> which opens automatically.</p></li><li><p>right click <code>composer.json</code> and choose <code>Composer | Manage Dependencies</code> , then search for <code>wp-cli/wp-cli</code> and click it , then click <code>install</code> .</p></li><li><p>Download the <code>wp-cli.phar</code> at <a href="http://wp-cli.org/" target="_blank" rel="noopener">WordPress CLI</a>. </p></li><li><p>Configuring wp-cli as a PhpStorm command line tool</p><p>1)    Open the <code>Settings / Preferences</code> Dialog by pressing <code>Ctrl+Alt+S</code></p><p>2)    <code>Tools &gt; Command Line Tool Support</code></p><p>​    Then click the <code>＋</code> button. </p><p>​    Choose <code>WP-CLI</code> in the Choose Tool drop down list.</p><p>​    Click <code>OK</code> until finish.</p></li></ol><h3 id="Activating-the-WordPress-installation-in-the-project"><a href="#Activating-the-WordPress-installation-in-the-project" class="headerlink" title="Activating the WordPress installation in the project"></a>Activating the WordPress installation in the project</h3><p><code>Settings &gt; Preferences Dialog &gt; Languages and Frameworks &gt; PHP &gt; Frameworks</code></p><p>In the <code>WordPress Installation Path</code> text box, specify the folder where WordPress is installed. This folder should contain the  <code>wp-admin</code> and <code>wp-includes</code> subdirectories.</p><p>Click <code>Apply</code> .</p><blockquote><p>If your wordpress folder is not under your project folder, you should:</p><p><code>Settings &gt; Preferences Dialog &gt; Languages and Frameworks &gt; PHP</code></p><p>Add the path to the WordPress installation folder to the Include Paths list: click the <code>＋</code> button and specify the path to the installation folder in the dialog box that opens.</p></blockquote><h3 id="Enable-WordPress-Support-Plugin"><a href="#Enable-WordPress-Support-Plugin" class="headerlink" title="Enable WordPress Support Plugin"></a>Enable WordPress Support Plugin</h3><p>It is enabled automatically.</p><blockquote><p>if not :</p><p><code>Settings &gt; Plugins</code></p><p>Click <code>Browse repositories</code></p><p>Search for <code>WordPress Support</code> and Install.</p></blockquote>]]></content>
      
      <categories>
          
          <category> wordpress </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Install Oracle on Ubuntu</title>
      <link href="/post/unix/ubuntu-help/install-oracle-on-Ubuntu/"/>
      <url>/post/unix/ubuntu-help/install-oracle-on-Ubuntu/</url>
      <content type="html"><![CDATA[<h3 id="Oracle-11-Express-Edition"><a href="#Oracle-11-Express-Edition" class="headerlink" title="Oracle 11 Express Edition"></a>Oracle 11 Express Edition</h3><p><a href="https://community.oracle.com/thread/2229554" target="_blank" rel="noopener">https://community.oracle.com/thread/2229554</a></p><h3 id="Oracle-10g"><a href="#Oracle-10g" class="headerlink" title="Oracle 10g"></a>Oracle 10g</h3><p>Oracle provides a debian repository at <a href="http://oss.oracle.com/debian" target="_blank" rel="noopener">http://oss.oracle.com/debian</a>, containing only Oracle 10g Express Edition (XE) packages. To see these packages, add this line to /etc/apt/sources.list file:</p><pre><code>deb http://oss.oracle.com/debian unstable main non-free</code></pre><p>Next, you will need to add the GPG key.</p><pre><code>wget http://oss.oracle.com/el4/RPM-GPG-KEY-oracle  -O- | sudo apt-key add -</code></pre><p>As root, type:</p><pre><code>apt-get update</code></pre><p>To install the XE database server, apt-get ‘oracle-xe-universal’ or ‘oracle-xe’ (Western European support only).</p><pre><code>apt-get install oracle-xe-universal</code></pre><p>If you only need the XE client, type</p><pre><code>apt-get install oracle-xe-client</code></pre><p>More information about the Express Edition is available at <a href="http://www.oracle.com/technology/products/database/xe/index.html" target="_blank" rel="noopener">http://www.oracle.com/technology/products/database/xe/index.html</a></p><p><a href="https://help.ubuntu.com/community/Oracle%20Instant%20Client" target="_blank" rel="noopener">Oracle Instant Client</a> is another option for installing an Oracle client, with more recent versions available.</p>]]></content>
      
      <categories>
          
          <category> unix </category>
          
          <category> ubuntu help </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Update softwares in ubuntu</title>
      <link href="/post/unix/ubuntu-help/Update-softwares-in-ubuntu/"/>
      <url>/post/unix/ubuntu-help/Update-softwares-in-ubuntu/</url>
      <content type="html"><![CDATA[<h2 id="Update-softwares-in-ubuntu"><a href="#Update-softwares-in-ubuntu" class="headerlink" title="Update softwares in ubuntu"></a>Update softwares in ubuntu</h2><p>sudo apt-get update  更新软件源，最后会读取软件包列表</p><p> sudo apt-get dist-upgrade  更新所有的软件</p>]]></content>
      
      <categories>
          
          <category> unix </category>
          
          <category> ubuntu help </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Files and dirs operation in Linux</title>
      <link href="/post/unix/ubuntu-help/Files-and-dirs-operation/"/>
      <url>/post/unix/ubuntu-help/Files-and-dirs-operation/</url>
      <content type="html"><![CDATA[<h1 id="Files-and-dirs-operation"><a href="#Files-and-dirs-operation" class="headerlink" title="Files and dirs operation"></a>Files and dirs operation</h1><p>mkdir 目录名           ——创建一个目录<br>rmdir<em> 空目录名 </em>       ——删除一个空目录<br>rm <em>文件名 文件名</em>     ——删除一个文件或多个文件<br>rm -rf<em> 非空目录名  </em>  ——删除一个非空目录下的一切<br>touch<em> 文件名     </em>      ——创建一个空文件</p><p>mv file1 file2 表示将文件 file1，更改文件名为 file2。 </p><pre><code>mv file1 dir1 将文件 file1，移到目录 dir1下，文件名仍为 file1。 mv dir1 dir2 若目录 dir2 存在，则将目录 dir1，及其所有文件和子目录，移到目录 dir2 下，新目录名称为 dir1。若目录 dir2 不存在，则将dir1，及其所有文件和子目录，更改为目录 dir2</code></pre>]]></content>
      
      <categories>
          
          <category> unix </category>
          
          <category> ubuntu help </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>install deb on ubuntu</title>
      <link href="/post/unix/ubuntu-help/install/"/>
      <url>/post/unix/ubuntu-help/install/</url>
      <content type="html"><![CDATA[<pre><code class="shell">sudo dpkg --install *.deb</code></pre>]]></content>
      
      <categories>
          
          <category> unix </category>
          
          <category> ubuntu help </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>install jetbrain toobox</title>
      <link href="/post/unix/ubuntu-help/jetbrain-toolbox/"/>
      <url>/post/unix/ubuntu-help/jetbrain-toolbox/</url>
      <content type="html"><![CDATA[<h3 id="Install"><a href="#Install" class="headerlink" title="Install:"></a>Install:</h3><p><a href="https://www.jetbrains.com/toolbox/" target="_blank" rel="noopener">Jetbrain Toolbox</a></p><pre><code class="shell">sudo ./jetbrain-toolbox</code></pre><h3 id="errors"><a href="#errors" class="headerlink" title="errors:"></a>errors:</h3><p>Failed to prepare Directory. Unable to create version folder</p><pre><code class="shell">sudo chmod -R 777 /home/[username]/.local/share/JetBrains</code></pre>]]></content>
      
      <categories>
          
          <category> unix </category>
          
          <category> ubuntu help </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Ubuntu swap 分区</title>
      <link href="/post/unix/ubuntu-help/swap%E5%88%86%E5%8C%BA/"/>
      <url>/post/unix/ubuntu-help/swap%E5%88%86%E5%8C%BA/</url>
      <content type="html"><![CDATA[<h1 id="swap分区"><a href="#swap分区" class="headerlink" title="swap分区"></a>swap分区</h1><p>see if the system has any configured swap by typing:</p><pre><code class="shell">sudo swapon --show</code></pre><p>You can verify that there is no active swap using the <code>free</code> utility:</p><pre><code>free -h</code></pre><p>Before we do this, we should check the current disk usage by typing:</p><pre><code>df -h</code></pre><h3 id="Create-a-Swap-File"><a href="#Create-a-Swap-File" class="headerlink" title="Create a Swap File"></a>Create a Swap File</h3><pre><code class="shell">sudo dd if=/dev/zero of=/swapfile bs=1M count=2048#orsudo fallocate -l 2G /swapfile</code></pre><p>We can verify that the correct amount of space was reserved by typing:</p><pre><code>ls -lh /swapfile-rw-r--r-- 1 root root 2.0G Apr 25 11:14 /swapfile</code></pre><h3 id="Enabling-the-Swap-File"><a href="#Enabling-the-Swap-File" class="headerlink" title="Enabling the Swap File"></a>Enabling the Swap File</h3><p>Make the file only accessible to <code>root</code> by typing:</p><pre><code class="shell">sudo chmod 600 /swapfile</code></pre><p>Verify the permissions change by typing:</p><pre><code class="shell">ls -lh /swapfile</code></pre><p>Output：</p><pre><code>-rw------- 1 root root 2.0G Apr 25 11:14 /swapfile</code></pre><p>As you can see, only the root user has the read and write flags enabled.</p><p>We can now mark the file as swap space by typing:</p><pre><code class="shell">sudo mkswap /swapfile</code></pre><pre><code class="shell"># OutputSetting up swapspace version 1, size = 2 GiB (2147479552 bytes)no label, UUID=00535dd7-175c-4fcb-a543-36bb4dc492c9</code></pre><p>After marking the file, we can enable the swap file, allowing our system to start utilizing it:</p><pre><code>sudo swapon /swapfile</code></pre><p>We can verify that the swap is available by typing:</p><pre><code>sudo swapon --show</code></pre><pre><code>NAME      TYPE SIZE USED PRIO/swapfile file   2G   0B   -1</code></pre><p>We can check the output of the <code>free</code> utility again to corroborate our findings:</p><pre><code class="shell">$ free -h              total        used        free      shared  buff/cache   availableMem:           864M         57M        120M        2.8M        686M        657MSwap:          2.0G          0B        2.0G</code></pre><h3 id="Make-the-Swap-File-Permanent"><a href="#Make-the-Swap-File-Permanent" class="headerlink" title="Make the Swap File Permanent"></a>Make the Swap File Permanent</h3><p>Our recent changes have enabled the swap file for the current session.  However, if we reboot, the server will not retain the swap settings automatically.  We can change this by adding the swap file to our <code>/etc/fstab</code> file.</p><p>Back up the <code>/etc/fstab</code> file in case anything goes wrong:</p><pre><code>sudo cp /etc/fstab /etc/fstab.bak</code></pre><p>You can add the swap file information to the end of your <code>/etc/fstab</code> file by typing:</p><pre><code>echo &#39;/swapfile none swap sw 0 0&#39; | sudo tee -a /etc/fstab</code></pre><p><a href="https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-16-04" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-16-04</a></p><p><a href="https://askubuntu.com/questions/566745/allocate-swap-after-ubuntu-14-04-lts-installation" target="_blank" rel="noopener">https://askubuntu.com/questions/566745/allocate-swap-after-ubuntu-14-04-lts-installation</a></p>]]></content>
      
      <categories>
          
          <category> unix </category>
          
          <category> ubuntu help </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>install Java on Ubuntu</title>
      <link href="/post/unix/ubuntu-help/java/"/>
      <url>/post/unix/ubuntu-help/java/</url>
      <content type="html"><![CDATA[<p><a href="http://www.webupd8.org/2012/09/install-oracle-java-8-in-ubuntu-via-ppa.html" target="_blank" rel="noopener">install java 8 in ubuntu</a></p><p><a href="http://www.webupd8.org/2015/02/install-oracle-java-9-in-ubuntu-linux.html" target="_blank" rel="noopener">install java 9 in ubuntu</a></p>]]></content>
      
      <categories>
          
          <category> unix </category>
          
          <category> ubuntu help </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>input Chinese on Ubuntu</title>
      <link href="/post/unix/ubuntu-help/inputChinese/"/>
      <url>/post/unix/ubuntu-help/inputChinese/</url>
      <content type="html"><![CDATA[<h3 id="修复卸载sogoupinyin后ibus失效"><a href="#修复卸载sogoupinyin后ibus失效" class="headerlink" title="修复卸载sogoupinyin后ibus失效"></a>修复卸载sogoupinyin后ibus失效</h3><p>ubuntu12.04 LTS，英文环境，原支持ibus</p><p>看到sogou官方有支持ubuntu的deb包，下载后按照官方推荐的方法安装失败。按网上推荐的卸载ibus，安装fcitx，虽然可以看到fcitx，但是不能选择语言。</p><p>之后在恢复过程中卸载fcitx安装ibus，出现过log out后登录失败，需要重启重新登录；ibus不能选择语言等情况。虽然最后解决了，但是不知到是哪个包影响的。</p><p>之后看到sogou包，手贱又安装了。这次各种安装卸载中，最后出现的情况是，各种情况都排除了，但还剩两个异常处：</p><p>1，打开ibus，右上角出现ibus的标志，是个小键盘。设置语言后，ctrl+空格键【space】无法更换中文。首选项“no input window“。</p><p>2，system setting–language support–language–keyboard input method system，原本此处是可以选择fcitx、ibus等的选项，但是现在选项不见了</p><p>解决：</p><p>1，启动后系统提示软件更新，我更新了。不知到有没有影响，但还是记下来</p><p>2，查看文章：<a href="http://blog.163.com/likai_mao/blog/static/134346932201181511311500/" target="_blank" rel="noopener">http://blog.163.com/likai_mao/blog/static/134346932201181511311500/</a></p><p>“也千万不要装im-config，装了就卸不干净，我到现在还需要在/usr/share/里面保留一个/usr/share/im-config/xinputrc.common （内容见后），否则不能正常登录（还没找到在哪里需要这个东东）。而且装了im-config，im-switch就自然被卸载，而ubuntu现在主要支持im-switch。两个功能其实差不多”</p><p>很无语的是，我之前卸载了im-switch，保留了im-config。现在知道了，于是：</p><p>sudo apt-get remove im-config</p><p>卸载过程中，提示同时卸载ubuntu-desktop，language-selector-gnome。简直无语，于是继续：</p><p>sudo apt-get install ubuntu-desktop<br>sudo apt-get install language-selector-gnome</p><p>然后：<br>sudo apt-get install im-switch</p><p>提示最新版本了。</p><p>然后打开一个文档，ctrl+空格键，可以切换中文了（之前已经在ibus中添加Pinyin）。</p><p>重启，依然正常。ok了（下次不乱玩了，还是用虚拟机去玩吧）。</p>]]></content>
      
      <categories>
          
          <category> unix </category>
          
          <category> ubuntu help </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Use Hotspot on Ubuntu</title>
      <link href="/post/unix/ubuntu-help/hotspot/"/>
      <url>/post/unix/ubuntu-help/hotspot/</url>
      <content type="html"><![CDATA[<h1 id="创建无线热点"><a href="#创建无线热点" class="headerlink" title="创建无线热点"></a>创建无线热点</h1><p>You can use your computer as a wireless hotspot. This allows other devices to connect to your computer without a separate network. If your computer has a connection to the internet other than wireless, you can use the wireless hotspot to share your internet connection with other devices.</p><ol><li>Click the system menu <img src="https://help.ubuntu.com/stable/ubuntu-help/figures/system-devices-panel.svg" alt="Power cog icon"> and select System Settings.</li><li>打开网络并选中左侧的无线。</li><li>Click the Use as Hotspot… button.</li><li>If you are already connected to a wireless network, you will be asked if you want to disconnect from that network. A single wireless adapter can only connect to or create one network at a time. Click Turn On to confirm.</li></ol>]]></content>
      
      <categories>
          
          <category> unix </category>
          
          <category> ubuntu help </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Minecraft::Download &amp; Mods</title>
      <link href="/post/minecraft/Minecraft-Download-Mods/"/>
      <url>/post/minecraft/Minecraft-Download-Mods/</url>
      <content type="html"><![CDATA[<h1 id="Minecraft-Download-amp-Mods"><a href="#Minecraft-Download-amp-Mods" class="headerlink" title="Minecraft::Download &amp; Mods"></a>Minecraft::Download &amp; Mods</h1><h2 id="1-Install"><a href="#1-Install" class="headerlink" title="1 Install"></a>1 Install</h2><h3 id="HMCL"><a href="#HMCL" class="headerlink" title="HMCL"></a>HMCL</h3><p><a href="http://www.mcbbs.net/thread-142335-1-1.html" target="_blank" rel="noopener">发布帖</a></p><p><a href="https://github.com/huanghongxun/HMCL" target="_blank" rel="noopener">下载地址</a></p><h2 id="2-Mods"><a href="#2-Mods" class="headerlink" title="2 Mods"></a>2 Mods</h2><h3 id="Forge"><a href="#Forge" class="headerlink" title="Forge"></a><a href="https://files.minecraftforge.net/" target="_blank" rel="noopener">Forge</a></h3><h3 id="Optifine"><a href="#Optifine" class="headerlink" title="Optifine"></a><a href="http://www.optifine.net" target="_blank" rel="noopener">Optifine</a></h3><h3 id="CurseForge"><a href="#CurseForge" class="headerlink" title="CurseForge"></a><a href="https://minecraft.curseforge.com/mc-mods" target="_blank" rel="noopener">CurseForge</a></h3><h3 id="Curse"><a href="#Curse" class="headerlink" title="Curse"></a><a href="https://mods.curse.com/mc-mods/minecraft" target="_blank" rel="noopener">Curse</a></h3><h3 id="JourneyMap"><a href="#JourneyMap" class="headerlink" title="JourneyMap"></a><a href="https://minecraft.curseforge.com/projects/journeymap-32274" target="_blank" rel="noopener">JourneyMap</a></h3><h3 id="SuperMiner"><a href="#SuperMiner" class="headerlink" title="SuperMiner"></a><a href="https://minecraft.curseforge.com/projects/superminer-unified?gameCategorySlug=mc-mods&amp;projectID=246404" target="_blank" rel="noopener">SuperMiner</a></h3><h3 id="BetterBuildersWand"><a href="#BetterBuildersWand" class="headerlink" title="BetterBuildersWand"></a><a href="https://minecraft.curseforge.com/projects/better-builders-wands?gameCategorySlug=mc-mods&amp;projectID=238403" target="_blank" rel="noopener">BetterBuildersWand</a></h3><h3 id="CustomNPCs"><a href="#CustomNPCs" class="headerlink" title="CustomNPCs"></a>CustomNPCs</h3><p>​    <a href="https://minecraft.curseforge.com/projects/custom-npcs?gameCategorySlug=mc-mods&amp;projectID=221826" target="_blank" rel="noopener">官网</a></p><p>​    <a href="http://www.kodevelopment.nl/minecraft/customnpcs" target="_blank" rel="noopener">Info</a></p><h3 id="Mr-CrayFish"><a href="#Mr-CrayFish" class="headerlink" title="Mr.CrayFish"></a><a href="https://mrcrayfish.com/mods" target="_blank" rel="noopener">Mr.CrayFish</a></h3><p>​    <a href="https://minecraft.curseforge.com/projects/mrcrayfish-furniture-mod?gameCategorySlug=mc-mods&amp;projectID=55438" target="_blank" rel="noopener">FurnitureMod</a></p><h3 id="OpenBlocks-Elevator"><a href="#OpenBlocks-Elevator" class="headerlink" title="OpenBlocks Elevator"></a><a href="https://minecraft.curseforge.com/projects/openblocks-elevator?gameCategorySlug=mc-mods&amp;projectID=250832" target="_blank" rel="noopener">OpenBlocks Elevator</a></h3><h3 id="BuildCraft"><a href="#BuildCraft" class="headerlink" title="BuildCraft"></a>BuildCraft</h3><p>​    <a href="https://minecraft.curseforge.com/projects/buildcraft" target="_blank" rel="noopener">CurseForge</a></p><p>​    <a href="http://www.mod-buildcraft.com/" target="_blank" rel="noopener">Official Site</a></p><p>​    <a href="http://www.mcmod.cn/post/180.html" target="_blank" rel="noopener">How to use it.</a></p><h3 id="Literal-Ascension"><a href="#Literal-Ascension" class="headerlink" title="Literal Ascension"></a><a href="https://mods.curse.com/mc-mods/minecraft/253021-literal-ascension#t1:other-downloads" target="_blank" rel="noopener">Literal Ascension</a></h3><h3 id="Ender-Cloud"><a href="#Ender-Cloud" class="headerlink" title="Ender Cloud"></a><a href="http://www.minecraftforum.net/forums/mapping-and-modding/minecraft-mods/1287430-roxas-mods-tall-doors-experience-storage-gems" target="_blank" rel="noopener">Ender Cloud</a></h3><h3 id="Instant-Structures-Mod"><a href="#Instant-Structures-Mod" class="headerlink" title="Instant Structures Mod"></a><a href="http://instant-structures-mod.com/" target="_blank" rel="noopener">Instant Structures Mod</a></h3><h2 id="3-Shader-Packs"><a href="#3-Shader-Packs" class="headerlink" title="3 Shader Packs"></a>3 Shader Packs</h2><h3 id="CONTINUUM-GRAPHICS"><a href="#CONTINUUM-GRAPHICS" class="headerlink" title="CONTINUUM GRAPHICS"></a><a href="https://continuum.graphics/" target="_blank" rel="noopener">CONTINUUM GRAPHICS</a></h3><h2 id="4-Resourses-Packs"><a href="#4-Resourses-Packs" class="headerlink" title="4 Resourses Packs"></a>4 Resourses Packs</h2><h3 id="Vanilla"><a href="#Vanilla" class="headerlink" title="Vanilla"></a>Vanilla</h3><p>​    <a href="https://soartex.net/downloads/" target="_blank" rel="noopener">Soartex</a></p>]]></content>
      
      <categories>
          
          <category> minecraft </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Controls</title>
      <link href="/post/minecraft/pixelmon/Controls/"/>
      <url>/post/minecraft/pixelmon/Controls/</url>
      <content type="html"><![CDATA[<p><a href="http://pixelmonmod.com/wiki/index.php?title=Guides" target="_blank" rel="noopener">All Guides</a></p><h1 id="Controls"><a href="#Controls" class="headerlink" title="Controls"></a>Controls</h1><p>This is a list of controls added by Pixelmon. The keybindings for these controls can be changed in-game at Options→Controls menu. </p><h2 id="Default-Pixelmon-keys"><a href="#Default-Pixelmon-keys" class="headerlink" title="Default Pixelmon keys"></a>Default Pixelmon keys</h2><ul><li><em>R</em>: Send out/retrieve Pokémon. </li><li><em>↑</em> &amp; <em>↓</em>: Change selected Pokémon in GUI. </li><li><em>O</em>: Show/hide party GUI. </li><li><em>Right-click</em>: <a href="http://pixelmonmod.com/wiki/index.php?title=Mount" target="_blank" rel="noopener">Mount</a> Pokémon/Use item on Pokémon. </li><li><em>F</em>: If an owned Pokémon is sent out, pressing this key while the cursor is over a wild Pokémon will cause the currently sent out Pokémon to chase down the wild Pokémon and engage in battle with it. </li><li><em>G</em>: Use currently selected <a href="http://pixelmonmod.com/wiki/index.php?title=External_move" target="_blank" rel="noopener">external move</a>. </li><li><em>B</em>: Cycles through external moves if a Pokémon has more than one. </li><li><em>I</em>: Opens the <a href="http://pixelmonmod.com/wiki/index.php?title=Pok%C3%A9dex" target="_blank" rel="noopener">Pokédex</a>. If the player is looking at a Pokémon, the Pokédex will navigate directly to that Pokémon’s entry, and will be registered as “seen” if it hasn’t been seen or caught before. </li><li><em>K</em>: If the player is holding an <a href="http://pixelmonmod.com/wiki/index.php?title=Item" target="_blank" rel="noopener">item</a>, this key opens up the item’s page on this wiki or the <a href="http://minecraft.gamepedia.com/Minecraft_Wiki" target="_blank" rel="noopener"><em>Minecraft</em> Wiki</a> in the player’s internet browser, depending on the item. If the player is looking at a block and not holding an item, this key opens the respective wiki page for that block. </li><li><em>L</em>: If the player is looking at another player who is in a battle, this key causes the player to begin spectating the other player’s battle. </li><li><em>P</em>: Open the Pixelmon <a href="http://pixelmonmod.com/wiki/index.php?title=Config" target="_blank" rel="noopener">config</a> GUI. </li></ul><h2 id="Riding-controls"><a href="#Riding-controls" class="headerlink" title="Riding controls"></a>Riding controls</h2><p>There are two different sets of <a href="http://pixelmonmod.com/wiki/index.php?title=Riding" target="_blank" rel="noopener">riding</a> controls depending on the “enablePointToSteer” <a href="http://pixelmonmod.com/wiki/index.php?title=Config" target="_blank" rel="noopener">config</a> option (enabled by default). Riding controls are tied to standard moving controls, and therefore are changed by changing the respective <em>Minecraft</em> controls. </p><h3 id="Enable-point-to-steer-enabled"><a href="#Enable-point-to-steer-enabled" class="headerlink" title="Enable point to steer enabled"></a>Enable point to steer enabled</h3><ul><li><em>W</em>: Move forward. </li><li><em>S</em>: Move backwards. </li><li><em>Move mouse</em>: Turn left/right. </li><li><em>Space bar</em>: Jump/Ascend. </li><li><em>Left shift/Right-click Pokémon</em>: Dismount. </li></ul><h3 id="Enable-point-to-steer-disabled"><a href="#Enable-point-to-steer-disabled" class="headerlink" title="Enable point to steer disabled"></a>Enable point to steer disabled</h3><ul><li><em>W</em>: Move forward. </li><li><em>S</em>: Move backwards. </li><li><em>A</em>: Turn left. </li><li><em>D</em>: Turn right. </li><li><em>Space bar</em>: Jump/Ascend. </li><li><em>C</em>: Descend (if flying). </li><li><em>Left shift/Right-click Pokémon</em>: Dismount. </li></ul><h2 id="Battle-camera-controls"><a href="#Battle-camera-controls" class="headerlink" title="Battle camera controls"></a>Battle camera controls</h2><p>If the “playerControlCamera” <a href="http://pixelmonmod.com/wiki/index.php?title=Config" target="_blank" rel="noopener">config</a> setting is enabled, it is possible to move the camera while in a Pokémon battle. These controls are not affected if <em>Minecraft</em> controls are changed. </p><ul><li><em>W</em>: Move camera up. </li><li><em>S</em>: Move camera down. </li><li><em>A</em>: Move camera left. </li><li><em>D</em>: Move camera right. </li><li><em>Q</em>: Zoom in. </li><li><em>E</em>: Zoom out. </li><li>Right-click + drag: Move camera. </li><li>Mouse scroll: Zoom camera. </li></ul><h1 id="Pixelmon-tutorial"><a href="#Pixelmon-tutorial" class="headerlink" title="Pixelmon_tutorial"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Pixelmon_tutorial" target="_blank" rel="noopener">Pixelmon_tutorial</a></h1>]]></content>
      
      <categories>
          
          <category> minecraft </category>
          
          <category> pixelmon </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>PokéDollars</title>
      <link href="/post/minecraft/pixelmon/PokeDollars/"/>
      <url>/post/minecraft/pixelmon/PokeDollars/</url>
      <content type="html"><![CDATA[<h1 id="PokeDollars"><a href="#PokeDollars" class="headerlink" title="PokéDollars"></a>PokéDollars</h1><p>PokéDollars are a form of currency within Pixelmon. They are not <a href="http://pixelmonmod.com/wiki/index.php?title=Items" target="_blank" rel="noopener">items</a>; the amount of PokéDollars that a player has can be viewed on the inventory screen. </p><p>The maximum amount of PokéDollars a player can have is 999,999<a href="http://pixelmonmod.com/wiki/index.php?title=File:PokeDollar.png" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/d/d6/PokeDollar.png" alt="PokeDollar.png"></a>. If the player attempts to gain any more PokéDollars, the extra PokéDollars will be lost. </p><h2 id="Use"><a href="#Use" class="headerlink" title="Use"></a>Use</h2><p>The primary use for PokéDollars is to buy <a href="http://pixelmonmod.com/wiki/index.php?title=Items" target="_blank" rel="noopener">items</a> from <a href="http://pixelmonmod.com/wiki/index.php?title=Shopkeepers" target="_blank" rel="noopener">shopkeepers</a> inside <a href="http://pixelmonmod.com/wiki/index.php?title=Pok%C3%A9_Marts" target="_blank" rel="noopener">Poké Marts</a>. Prices for items that shopkeepers offer are listed <a href="http://pixelmonmod.com/wiki/index.php?title=Shopkeeper/Stock" target="_blank" rel="noopener">here</a>. </p><p>PokéDollars can also be given to other players by using the /transfer <a href="http://pixelmonmod.com/wiki/index.php?title=Command" target="_blank" rel="noopener">command</a>. </p><h2 id="Obtaining-PokeDollars"><a href="#Obtaining-PokeDollars" class="headerlink" title="Obtaining PokéDollars"></a>Obtaining PokéDollars</h2><p>PokéDollars can be obtained by defeating <a href="http://pixelmonmod.com/wiki/index.php?title=NPC_Trainers" target="_blank" rel="noopener">NPC Trainers</a> in battle. For naturally spawning NPC Trainers, this amount is the product of a base amount for the NPC Trainer type (defined in the NPC Trainer’s <a href="http://pixelmonmod.com/wiki/index.php?title=External_JSON_file" target="_blank" rel="noopener">external JSON file</a> and the average level of the NPC Trainer’s party Pokémon (rounded down). If the NPC Trainer is edited using an <a href="http://pixelmonmod.com/wiki/index.php?title=NPC_editor" target="_blank" rel="noopener">NPC editor</a>, this amount will become fixed, awarding exactly the amount of PokéDollars specified in the “Win Money” field in the “Trainer Editor - More Info” section. If a player’s Pokémon is <a href="http://pixelmonmod.com/wiki/index.php?title=Holding" target="_blank" rel="noopener">holding</a> an <a href="http://pixelmonmod.com/wiki/index.php?title=Amulet_Coin" target="_blank" rel="noopener">Amulet Coin</a> or a <a href="http://pixelmonmod.com/wiki/index.php?title=Luck_Incense" target="_blank" rel="noopener">Luck Incense</a> and participates in the battle, the PokéDollar award will be doubled, while if a player’s Pokémon uses <a href="http://pixelmonmod.com/wiki/index.php?title=Happy_Hour" target="_blank" rel="noopener">Happy Hour</a>, the award will also be doubled. These two methods of doubling the award stack together, allowing the award to be multiplied by four if both methods are used in a battle. </p><p>Using the <a href="http://pixelmonmod.com/wiki/index.php?title=Pay_Day" target="_blank" rel="noopener">Pay Day</a> move will award PokéDollars to the player at the end of the battle, equal to five times the level of the Pokémon using Pay Day. This amount will accumulate if Pay Day is used multiple times. </p><p>PokéDollars can also be earned by selling Pixelmon <a href="http://pixelmonmod.com/wiki/index.php?title=Items" target="_blank" rel="noopener">items</a> to <a href="http://pixelmonmod.com/wiki/index.php?title=Shopkeepers" target="_blank" rel="noopener">shopkeepers</a>. Items eligible for being sold and the sell prices for these items are listed <a href="http://pixelmonmod.com/wiki/index.php?title=Shopkeeper/Sell_prices" target="_blank" rel="noopener">here</a>. </p><p>The /givemoney <a href="http://pixelmonmod.com/wiki/index.php?title=Command" target="_blank" rel="noopener">command</a> can give an amount of PokéDollars to a player. A player can give another player PokéDollars with the /transfer command. </p>]]></content>
      
      <categories>
          
          <category> minecraft </category>
          
          <category> pixelmon </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>tips for gnome Files</title>
      <link href="/post/unix/gnome-help/gnome-files/"/>
      <url>/post/unix/gnome-help/gnome-files/</url>
      <content type="html"><![CDATA[<h3 id="Create-an-empty-document-in-Files-3-6-and-above"><a href="#Create-an-empty-document-in-Files-3-6-and-above" class="headerlink" title="Create an empty document in Files 3.6 and above"></a>Create an empty document in Files 3.6 and above</h3><p>GNOME 3.6 brought changes to Files. The option to create an empty document has been removed from the right-click menu in Files. To get this option back one has to create a <code>~/Templates/</code> folder in your home folder and place an empty file inside the folder through your favorite Terminal by <code>touch ~/Templates/new</code> or by using any other file manager. Then just restart Files.</p><p>On non-English installations, the templates directory might have another name. One can find the actual directory with <code>xdg-user-dir TEMPLATES</code>.</p>]]></content>
      
      <categories>
          
          <category> unix </category>
          
          <category> gnome help </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Create a Forge Mod</title>
      <link href="/post/minecraft/CreateAForgeMod/"/>
      <url>/post/minecraft/CreateAForgeMod/</url>
      <content type="html"><![CDATA[<p><a href="http://mcforge.readthedocs.io/en/latest/gettingstarted/" target="_blank" rel="noopener">http://mcforge.readthedocs.io/en/latest/gettingstarted/</a></p><p><a href="http://blog.csdn.net/zhengxiaoyao0716/article/details/49472303" target="_blank" rel="noopener">http://blog.csdn.net/zhengxiaoyao0716/article/details/49472303</a></p><p><a href="http://blog.hakugyokurou.net/?page_id=126" target="_blank" rel="noopener">http://blog.hakugyokurou.net/?page_id=126</a></p>]]></content>
      
      <categories>
          
          <category> minecraft </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>How To Set Up a Minecraft Server on Linux</title>
      <link href="/post/minecraft/How-To-Set-Up-a-Minecraft-Server-on-Linux/"/>
      <url>/post/minecraft/How-To-Set-Up-a-Minecraft-Server-on-Linux/</url>
      <content type="html"><![CDATA[<h2 id="How-To-Set-Up-a-Minecraft-Server-on-Linux"><a href="#How-To-Set-Up-a-Minecraft-Server-on-Linux" class="headerlink" title="How To Set Up a Minecraft Server on Linux"></a>How To Set Up a Minecraft Server on Linux</h2><h4 id="1-Prepare"><a href="#1-Prepare" class="headerlink" title="1 Prepare"></a>1 Prepare</h4><pre><code class="shell">sudo apt update</code></pre><h5 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h5><p>Make sure that Java is installed on the server</p><pre><code class="shell">java -version</code></pre><pre><code class="shell">$ java -versionThe program &#39;java&#39; can be found in the following packages: * default-jre * gcj-5-jre-headless * openjdk-8-jre-headless * gcj-4.8-jre-headless * gcj-4.9-jre-headless * openjdk-9-jre-headlessTry: sudo apt install &lt;selected package&gt;</code></pre><p>If you don’t have Java installed, you will get a message that says “java: command not found”. You can, then, download java through apt:</p><pre><code class="shell">sudo apt install default-jdk</code></pre><h5 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h5><p>install screen:</p><pre><code class="shell">sudo apt install screen</code></pre><p>screen help: <a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-screen-on-an-ubuntu-cloud-server" target="_blank" rel="noopener">how to install and use screen on ubuntu</a></p><h4 id="2-Install-Minecraft-Server"><a href="#2-Install-Minecraft-Server" class="headerlink" title="2 Install Minecraft Server"></a>2 Install Minecraft Server</h4><p>install: 下载：</p><pre><code class="shell">#进入你想安装我的世界服务器的目录cd /#新建文件夹minecraftmkdir minecraft#进入该文件夹cd minecraft#下载服务器文件wget -O minecraft_server.jar https://s3.amazonaws.com/Minecraft.Download/versions/1.11.2/minecraft_server.1.11.2.jar</code></pre><p>install: 安装: </p><pre><code class="shell">#确保你当前在下载好的服务器文件的文件夹中#如果有图形用户界面，可以去掉下行代码的nogui选项java -Xmx1024M -Xms1024M -jar minecraft_server.jar nogui</code></pre><p>修改EULA文件:</p><pre><code class="shell">vim eula.txt#里面的eula=false更改为eula=true</code></pre><p>修改设置文件：</p><pre><code class="shell">vim server.properties#里面的online-mode=true改成online-mode=false</code></pre><h4 id="3-Install-Forge-on-your-server-so-you-can-use-mod"><a href="#3-Install-Forge-on-your-server-so-you-can-use-mod" class="headerlink" title="3 Install Forge on your server so you can use mod"></a>3 Install Forge on your server so you can use mod</h4><p>下载：</p><pre><code class="shell">wget http://adfoc.us/serve/sitelinks/?id=271228&amp;url=http://files.minecraftforge.net/maven/net/minecraftforge/forge/1.11.2-13.20.0.2228/forge-1.11.2-13.20.0.2228-installer.jarwget http://files.minecraftforge.net/maven/net/minecraftforge/forge/1.11.2-13.20.0.2228/forge-1.11.2-13.20.0.2228-universal.jar</code></pre><p>安装：</p><pre><code class="shell">#安装java -jar forge-1.7.10-10.13.2.1291-installer.jar nogui --installServer#启动java -jar forge-1.7.10-10.13.2.1291-universal.jar nogui</code></pre>]]></content>
      
      <categories>
          
          <category> minecraft </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>types of Poké Balls</title>
      <link href="/post/minecraft/pixelmon/Types/"/>
      <url>/post/minecraft/pixelmon/Types/</url>
      <content type="html"><![CDATA[<h2 id="Types"><a href="#Types" class="headerlink" title="Types"></a>Types</h2><p>The different types of Poké Balls each have different effects, usually related to <a href="http://pixelmonmod.com/wiki/index.php?title=Catch_rate" target="_blank" rel="noopener">catch rate</a>. </p><ul><li><a href="http://pixelmonmod.com/wiki/index.php?title=Cherish_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/7/7b/Grid_Cherish_Ball.png/24px-Grid_Cherish_Ball.png" alt="Grid Cherish Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Cherish_Ball" target="_blank" rel="noopener">Cherish Ball</a>: 1× catch rate. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Dive_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/c/c8/Grid_Dive_Ball.png/24px-Grid_Dive_Ball.png" alt="Grid Dive Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Dive_Ball" target="_blank" rel="noopener">Dive Ball</a>: 3.5× catch rate if the Pokémon is in water. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Dusk_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/e/ec/Grid_Dusk_Ball.png/24px-Grid_Dusk_Ball.png" alt="Grid Dusk Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Dusk_Ball" target="_blank" rel="noopener">Dusk Ball</a>: 3.5× catch rate in dark places. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Fast_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/4/4d/Grid_Fast_Ball.png/24px-Grid_Fast_Ball.png" alt="Grid Fast Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Fast_Ball" target="_blank" rel="noopener">Fast Ball</a>: 4× catch rate on Pokémon with <a href="http://pixelmonmod.com/wiki/index.php?title=Fast_Ball/Catch_Rate" target="_blank" rel="noopener">100 base speed or more</a>. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Friend_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/7/7c/Grid_Friend_Ball.png/24px-Grid_Friend_Ball.png" alt="Grid Friend Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Friend_Ball" target="_blank" rel="noopener">Friend Ball</a>: Sets a captured Pokémon’s <a href="http://pixelmonmod.com/wiki/index.php?title=Happiness" target="_blank" rel="noopener">happiness</a> to 200. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Great_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/5/52/Grid_Great_Ball.png/24px-Grid_Great_Ball.png" alt="Grid Great Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Great_Ball" target="_blank" rel="noopener">Great Ball</a>: 1.5× catch rate. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=GS_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/c/cf/Grid_GS_Ball.png/24px-Grid_GS_Ball.png" alt="Grid GS Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=GS_Ball" target="_blank" rel="noopener">GS Ball</a>: 1× catch rate. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Heal_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/6/62/Grid_Heal_Ball.png/24px-Grid_Heal_Ball.png" alt="Grid Heal Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Heal_Ball" target="_blank" rel="noopener">Heal Ball</a>: Fully heals HP and status of captured Pokémon. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Heavy_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/b/b2/Grid_Heavy_Ball.png/24px-Grid_Heavy_Ball.png" alt="Grid Heavy Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Heavy_Ball" target="_blank" rel="noopener">Heavy Ball</a>: Increased catch rate on <a href="http://pixelmonmod.com/wiki/index.php?title=Heavy_Ball/Catch_Rate" target="_blank" rel="noopener">heavy Pokémon</a>. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Level_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/8/8f/Grid_Level_Ball.png/24px-Grid_Level_Ball.png" alt="Grid Level Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Level_Ball" target="_blank" rel="noopener">Level Ball</a>: Increased catch rate the lower the wild Pokémon’s level is compared to the player’s active Pokémon. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Love_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/e/e7/Grid_Love_Ball.png/24px-Grid_Love_Ball.png" alt="Grid Love Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Love_Ball" target="_blank" rel="noopener">Love Ball</a>: 8× catch rate if the wild Pokémon is the same species and opposite gender as the player’s active Pokémon. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Lure_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/2/2b/Grid_Lure_Ball.png/24px-Grid_Lure_Ball.png" alt="Grid Lure Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Lure_Ball" target="_blank" rel="noopener">Lure Ball</a>: 3× on Pokémon found via fishing. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Luxury_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/4/47/Grid_Luxury_Ball.png/24px-Grid_Luxury_Ball.png" alt="Grid Luxury Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Luxury_Ball" target="_blank" rel="noopener">Luxury Ball</a>: Causes the captured Pokémon to gain more happiness from happiness gains. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Master_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/8/8d/Grid_Master_Ball.png/24px-Grid_Master_Ball.png" alt="Grid Master Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Master_Ball" target="_blank" rel="noopener">Master Ball</a>: Catches Pokémon without fail. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Moon_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/f/fb/Grid_Moon_Ball.png/24px-Grid_Moon_Ball.png" alt="Grid Moon Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Moon_Ball" target="_blank" rel="noopener">Moon Ball</a>: 4× catch rate if Pokémon is in an <a href="http://pixelmonmod.com/wiki/index.php?title=Evolutionary" target="_blank" rel="noopener">evolutionary</a> family involving a <a href="http://pixelmonmod.com/wiki/index.php?title=Moon_Stone" target="_blank" rel="noopener">Moon Stone</a>. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Nest_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/6/6c/Grid_Nest_Ball.png/24px-Grid_Nest_Ball.png" alt="Grid Nest Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Nest_Ball" target="_blank" rel="noopener">Nest Ball</a>: Increased catch rate on lower-leveled Pokémon. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Net_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/3/32/Grid_Net_Ball.png/24px-Grid_Net_Ball.png" alt="Grid Net Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Net_Ball" target="_blank" rel="noopener">Net Ball</a>: 3× catch rate on <a href="http://pixelmonmod.com/wiki/index.php?title=Bug" target="_blank" rel="noopener">Bug</a> and <a href="http://pixelmonmod.com/wiki/index.php?title=Water" target="_blank" rel="noopener">Water</a>-type Pokémon. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Park_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/7/78/Grid_Park_Ball.png/24px-Grid_Park_Ball.png" alt="Grid Park Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Park_Ball" target="_blank" rel="noopener">Park Ball</a>: Catches Pokémon without fail. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Pok%C3%A9_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/4/40/Grid_Pok%C3%A9_Ball.png/24px-Grid_Pok%C3%A9_Ball.png" alt="Grid Poké Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Pok%C3%A9_Ball" target="_blank" rel="noopener">Poké Ball</a>: 1× catch rate, most basic Poké Ball. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Premier_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/4/42/Grid_Premier_Ball.png/24px-Grid_Premier_Ball.png" alt="Grid Premier Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Premier_Ball" target="_blank" rel="noopener">Premier Ball</a>: Causes the captured Pokémon to emit a red particle effect when sent out. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Quick_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/7/70/Grid_Quick_Ball.png/24px-Grid_Quick_Ball.png" alt="Grid Quick Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Quick_Ball" target="_blank" rel="noopener">Quick Ball</a>: 5× catch rate if used on the first turn of a battle. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Repeat_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/f/fc/Grid_Repeat_Ball.png/24px-Grid_Repeat_Ball.png" alt="Grid Repeat Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Repeat_Ball" target="_blank" rel="noopener">Repeat Ball</a>: 3× catch rate on species of Pokémon that the player already owns. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Safari_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/e/e2/Grid_Safari_Ball.png/24px-Grid_Safari_Ball.png" alt="Grid Safari Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Safari_Ball" target="_blank" rel="noopener">Safari Ball</a>: 1.5× catch rate in <a href="http://pixelmonmod.com/wiki/index.php?title=Plains" target="_blank" rel="noopener">Plains</a> <a href="http://pixelmonmod.com/wiki/index.php?title=Biomes" target="_blank" rel="noopener">biomes</a>. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Sport_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/5/5f/Grid_Sport_Ball.png/24px-Grid_Sport_Ball.png" alt="Grid Sport Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Sport_Ball" target="_blank" rel="noopener">Sport Ball</a>: 1.5× catch rate on <a href="http://pixelmonmod.com/wiki/index.php?title=Bug" target="_blank" rel="noopener">Bug</a>-type Pokémon. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Timer_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/b/bc/Grid_Timer_Ball.png/24px-Grid_Timer_Ball.png" alt="Grid Timer Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Timer_Ball" target="_blank" rel="noopener">Timer Ball</a>: Increased catch rate the longer the battle is. </li><li><a href="http://pixelmonmod.com/wiki/index.php?title=Ultra_Ball" target="_blank" rel="noopener"><img src="http://pixelmonmod.com/wiki/images/thumb/7/72/Grid_Ultra_Ball.png/24px-Grid_Ultra_Ball.png" alt="Grid Ultra Ball.png"></a><a href="http://pixelmonmod.com/wiki/index.php?title=Ultra_Ball" target="_blank" rel="noopener">Ultra Ball</a>: 2× catch rate. </li></ul><p>Note: Lure Balls and Repeat Balls do not have their benefits implemented in the mod yet and are functionally equivalent to normal Poké Balls. </p>]]></content>
      
      <categories>
          
          <category> minecraft </category>
          
          <category> pixelmon </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>How to use BuildCraft mod</title>
      <link href="/post/minecraft/How-to-use-BuildCraft-mod/"/>
      <url>/post/minecraft/How-to-use-BuildCraft-mod/</url>
      <content type="html"><![CDATA[<h1 id="How-to-use-BuildCraft-mod"><a href="#How-to-use-BuildCraft-mod" class="headerlink" title="How to use BuildCraft mod."></a>How to use BuildCraft mod.</h1><p>BuildCraft中的四大部件（<strong>容器、管道、能量、机器</strong>）</p><h2 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h2><h3 id="1-传输类"><a href="#1-传输类" class="headerlink" title="1 传输类"></a>1 传输类</h3><p>​    ：圆石管道、石制管道、沙石管道、石英管道、金制管道</p><h5 id="1-1-功能：传输物品的主力"><a href="#1-1-功能：传输物品的主力" class="headerlink" title="1.1 功能：传输物品的主力"></a>1.1 功能：传输物品的主力</h5><h5 id="1-2-要点："><a href="#1-2-要点：" class="headerlink" title="1.2 要点："></a>1.2 要点：</h5><ul><li>圆石管道、石制管道和石英管道之间两两不能互连。当需要并排铺两排管道时候这个特性十分好用。</li><li>沙石管道只能和管道相连，不能和容器或者机器相连。当管道需要从容器或者机器边擦过但又不想和容器或者机器相连时候，沙石管道十分好用。</li><li>金制管道可以加速通过其中的物品。将多个金制管道串联可以把物品瞬间加速到飞。</li><li>被金制管道加速过的物品通过其它管道时会受阻减速，阻力大小为：圆石管道 &gt; 沙石管道 &gt; 石制管道 &gt; 石英管道。如果想要在一条很长的管道内保持加速，就得隔几步放一个金制管道。</li></ul><h5 id="1-3-多条通路"><a href="#1-3-多条通路" class="headerlink" title="1.3 多条通路"></a>1.3 多条通路</h5><p>​    a) 通路被一分为二，物品通过岔路的时候会等概率随机地进入其中一条。图中分成了两条通路，则进入任何一条通路的概率都是50%。如果分成三条通路就是33.3%，以此类推。</p><p><img src="http://www.mcmod.cn/pages/center/0/album/20150815/14396456894877.png" alt="alt"></p><p>​    如果想控制物品的路由行为，比如说让石头走上路，泥土走下路，则需要用到路由类的钻石管道，详见下文。</p><p>​    b) 另一种情况是多条通路合成为一条，如下图：</p><p><img src="http://www.mcmod.cn/pages/center/0/album/20150815/14396458182861.png" alt="alt"></p><p>​    这种情况有点反直觉。从A、B路出来的物品并非合并入C路，而是如图中箭头所示，A路的物品会随机等概率进入B或C路；B路的物品会随机等概率进入A或C路。</p><p>​    关键之处在于传输类管道是双行道，没有特定传输方向。如果确实要实现AB并入C路的效果，则需要用到路由类的<a href="http://www.mcmod.cn/item/482.html" target="_blank" rel="noopener">铁制管道</a>，详见下文。</p><p>​    c) 这里再介绍一个我们实战中常常会碰到的头疼问题——满箱溢出。</p><p>看下面这个简单的例子：</p><p><img src="http://www.mcmod.cn/pages/center/0/album/20150817/14398210162920.png" alt="点击查看原图"></p><p>​    从输入箱子把煤炭输送到熔炉里作为燃料，需要烧东西的时候就把材料手动扔进炉子里烧。只要保证箱子里有足够的燃料，就很长时间不需要关心燃料的事情。</p><p>​    这是一个简单有效的半自动熔炉结构，但有个致命问题，如果熔炉里没有材料或者是种燃烧很慢的材料，熔炉的煤炭很快就满了（64个），但此时输入端不会自动停下，会继续把煤炭往炉子里送，但熔炉此时是满的，所以煤炭会掉在地上。如果不及时发现这个问题，掉在地上的煤炭就会过5分钟消失，损失巨大。</p><p>​    为了解决这个问题，我推荐这样的一种设计：</p><p><img src="http://www.mcmod.cn/pages/center/0/album/20150817/14398218805417.png" alt="点击查看原图"></p><p>​    这里利用了传输类管道的一个特性：<strong>如果相连的容器或者机器已满，那么物品会随机挑选当前格的其它岔路继续传输</strong>。</p><p>​    在前一张图里，由于连接熔炉的最后一格管道上没有任何其它岔路，所以熔炉燃料满时，煤炭就被挤出管道了。而这个改进的设计里，煤炭在同样情况下就会往上走，进入环形通路循环。一旦熔炉里的燃料有空位出来，循环中的煤炭就会立刻被送入熔炉。由于环形通路的存在，造成部分煤炭会被送回箱子。这其实也是一个我们希望的结果，因为如果积攒在一个管道里的物品过多的话，会造成管道爆炸。</p><p>​    比这个简单粗暴更好的方法是使用粘土管道，下文会提到，另外还有一些更复杂的方案，例如使用BuildCraft门（以后的教程会介绍用法），或者红石比较器的满箱检测功能，也有各自的应用场景，有机会的话会在以后的教程里介绍。</p><h3 id="2-路由类"><a href="#2-路由类" class="headerlink" title="2 路由类"></a>2 路由类</h3><p>​    :铁制管道、钻石管道、青金石管道、靛金刚管道、粘土管道</p><h5 id="2-1-功能：对固体物品在管道岔路的传输方向进行控制。"><a href="#2-1-功能：对固体物品在管道岔路的传输方向进行控制。" class="headerlink" title="2.1 功能：对固体物品在管道岔路的传输方向进行控制。"></a>2.1 功能：对固体物品在管道岔路的传输方向进行控制。</h5><p>扳手用于改变通道方向</p>]]></content>
      
      <categories>
          
          <category> minecraft </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>database &gt; Transaction | 事务</title>
      <link href="/post/database/transaction/"/>
      <url>/post/database/transaction/</url>
      <content type="html"><![CDATA[<h2 id="Concepts-概念"><a href="#Concepts-概念" class="headerlink" title="Concepts | 概念"></a>Concepts | 概念</h2><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><p>事务是指作为单个逻辑工作单元执行的一组相关操作。　　</p><p>这些操作要求全部完成或者全部不完成。</p><h3 id="使用事务的原因："><a href="#使用事务的原因：" class="headerlink" title="使用事务的原因："></a>使用事务的原因：</h3><p>保证数据的安全有效。</p><h3 id="事务的四个特点（ACID）"><a href="#事务的四个特点（ACID）" class="headerlink" title="事务的四个特点（ACID）"></a>事务的四个特点（ACID）</h3><ol><li>原子性（Atomic）：事务中所有数据的修改，要么全部执行，要么全部不执行。</li><li>一致性（Consistence）：事务完成时，要使所有所有的数据都保持一致的状态，换言之：通过事务进行的所有数据修改，必须在所有相关的表中得到反映。</li><li>隔离性（Isolation）：事务应该在另一个事务对数据的修改前或者修改后进行访问。</li><li>持久性（Durability）：保证事务对数据库的修改是持久有效的，即使发生系统故障，也不应该丢失。</li></ol><h3 id="事务组成"><a href="#事务组成" class="headerlink" title="事务组成"></a>事务组成</h3><p>一条或者多条DML，[一条DDL]和一条DCL。</p><h3 id="事务的分类"><a href="#事务的分类" class="headerlink" title="事务的分类"></a>事务的分类</h3><ol><li><h4 id="显式事务"><a href="#显式事务" class="headerlink" title="显式事务"></a>显式事务</h4><ol><li>要去显式的调用DCL。</li><li>只有用到COMMIT以后才会真正写入数据库，也持久化了。</li></ol></li><li><h4 id="隐式事务"><a href="#隐式事务" class="headerlink" title="隐式事务"></a>隐式事务</h4><ol><li>如果人工要使用隐式事务，SET AUTOCOMMIT ON (只针对一个连接)</li><li>以下情况为自动提交：<ol><li>正常执行完成的DDL语句：create、alter、drop</li><li>正常执行完场的DCL语句GRANT、REVOKE</li><li>正常退出的SQLPlus或者SQL Developer等客户端</li></ol></li></ol></li></ol><h3 id="回滚"><a href="#回滚" class="headerlink" title="回滚"></a>回滚</h3><p>RollBack只能对未提交的数据撤销，已经Commit的数据是无法撤销的，因为commit之后已经持久化到数据库中。</p><h3 id="隔离级别"><a href="#隔离级别" class="headerlink" title="隔离级别"></a>隔离级别</h3><h4 id="事务处理中可能遇到的问题"><a href="#事务处理中可能遇到的问题" class="headerlink" title="事务处理中可能遇到的问题"></a>事务处理中可能遇到的问题</h4><ul><li>脏读（Dirty Read）：事务T1更新了一行数据，还没有提交所做的修改，T2读取更新后的数据，T1回滚，T2读取的数据无效，这种数据称为脏读数据。</li><li>不可重复读（UNrepeatable Read）：事务T1读取一行数据，T2修改了T1刚刚读取的记录，T1再次查询，发现与第一次读取的记录不相同，称为不可重复读。</li><li>幻读（Phantom Read）：事务T1读取一条带WHERE条件的语句，返回结果集，T2插入一条新纪录，恰好也是T1的WHERE条件，T1再次查询，结果集中又看到T2的记录，新纪录就叫做幻读。</li></ul><h4 id="隔离级别-1"><a href="#隔离级别-1" class="headerlink" title="隔离级别"></a>隔离级别</h4><table><thead><tr><th>隔离级别名</th><th>含义</th></tr></thead><tbody><tr><td>NO_TRANSACTION</td><td>不支持事务</td></tr><tr><td>READ_UNCOMMITED</td><td>允许脏读、不可重复读、幻读</td></tr><tr><td>READ_COMMITED</td><td>允许不可重复读、幻读，不允许脏读</td></tr><tr><td>REPEATABLE</td><td>允许幻读，不允许脏读、不可重复读</td></tr><tr><td>SERIALIZABLE</td><td>脏读、不可重复读、幻读都不允许</td></tr></tbody></table><blockquote><p>Oracle支持SQL92标准的READ_COMMITED、SERIALIZABLE，自身特有的READ_ONLY</p></blockquote><h3 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h3><ul><li><p>排它锁：（X锁，eXclusive LockS）</p><p>当有DML语句执行的时候，设计的行都会加上排它锁，其他事物不能进行读取修改。</p></li><li><p>共享锁：（S锁，Shared Locks）</p><p>加了共享锁的数据，可以被其他事物读取，但不能修改。如select语句。</p></li><li><p>为了保证性能：乐观锁，悲观锁</p><p>悲观锁：每次都是假设数据肯定会冲突，数据开始读取时就把数据给锁住。</p><p>乐观锁：每次都是假设一般情况下不会发生数据冲突，只有数据更新提交的时候，才会对数据的冲突与否进行检测，如果发生冲突，返回错误信息让用户处理。</p></li></ul><h2 id="Oracle中的事务"><a href="#Oracle中的事务" class="headerlink" title="Oracle中的事务"></a>Oracle中的事务</h2><p>见<a href="http://www.cnblogs.com/god-S/p/4709044.html" target="_blank" rel="noopener">Oracle官方文档</a></p>]]></content>
      
      <categories>
          
          <category> database </category>
          
      </categories>
      
      
    </entry>
    
  
  
</search>
